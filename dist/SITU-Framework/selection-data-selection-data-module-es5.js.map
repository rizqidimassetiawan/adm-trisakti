{"version":3,"sources":["src/app/theme/adm-ms-selection-data/selection-data/selection-data.component.html","src/app/theme/adm-ms-selection-data/selection-data/selection-data-routing.module.ts","src/app/theme/adm-ms-selection-data/selection-data/selection-data.component.scss","src/app/theme/adm-ms-selection-data/selection-data/selection-data.component.ts","src/app/theme/adm-ms-selection-data/selection-data/selection-data.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div *ngIf=\\\"pageTypeInit === 'edit'\\\" class=\\\"page-header\\\">\\n  <div class=\\\"page-block\\\">\\n    <div class=\\\"text-md-left\\\">\\n      <div class=\\\"page-header-title\\\">\\n        <h5>{{ \\\"MENU.manage-selection-data\\\" | translate }}</h5>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12 col-md-12\\\">\\n    <app-card hidHeader=\\\"true\\\">\\n      <wizard #wizard class=\\\"arc-wizard\\\" navBarLayout=\\\"large-empty-symbols\\\">\\n        <wizard-step stepTitle=\\\"{{'CONTENT.selection-path-detail' | translate}}\\\" navigationSymbol=\\\"1\\\">\\n          <app-card cardClass=\\\"card-datatable\\\" cardTitle=\\\"{{ 'CONTENT.selection-path-detail' | translate }}\\\"\\n            [loading]=\\\"loadingCard\\\" [options]=\\\"false\\\" [hidHeader]=\\\"true\\\">\\n            <form [formGroup]=\\\"formDetailStep1\\\" class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 m-2\\\">\\n                  <span class=\\\"required\\\"><p>* Wajib diisi</p></span>\\n                  <div class=\\\"form-group mb-2\\\">\\n                    <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.selection-path-name' | translate }} <span\\n                        class=\\\"required\\\">*</span></label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" required formControlName=\\\"name\\\" maxlength=\\\"150\\\"\\n                      placeholder=\\\"{{ 'CONTENT.selection-path-name' | translate }}\\\">\\n                    <label *ngIf=\\\"fd.name.errors && fd.name.errors.required && (fd.name.touched || fd.name.dirty)\\\"\\n                      class=\\\"error text-danger small form-text\\\">{{ 'ROOT.required' | translate }}</label>\\n                    <label *ngIf=\\\"fd.name.errors && fd.name.errors.maxlength && (fd.name.touched || fd.name.dirty)\\\"\\n                      class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.character-maximum' | translate }}</label>\\n                  </div>\\n                  <div class=\\\"form-group mb-2\\\">\\n                    <label class=\\\"form-label m-b-0 f-w-600\\\">{{\\n                      'CONTENT.category-test-type' | translate\\n                      }} <span class=\\\"required\\\">*</span></label>\\n                    <ng-select [(ngModel)]=\\\"examType\\\" name=\\\"exam_type\\\" [allowClear]=\\\"true\\\" [options]=\\\"listCategoryId\\\"\\n                      [placeholder]=\\\"'ROOT.choose' | translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                      [notFoundMsg]=\\\"'ROOT.no_data_found' | translate\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" (selected)=\\\"examStatusChanged($event)\\\">\\n                    </ng-select>\\n                    <label *ngIf=\\\"!examType\\\" class=\\\"error text-danger small form-text\\\">{{ 'ROOT.required' |\\n                      translate }}</label>\\n                  </div>\\n                  <div class=\\\"form-group mb-2\\\">\\n                    <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.active-status'| translate}} <span\\n                        class=\\\"required\\\">*</span></h6>\\n                    <div class=\\\"custom-control custom-radio custom-control-inline mt-2\\\">\\n                      <input type=\\\"radio\\\" id=\\\"active_status1\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\"\\n                        value=\\\"1\\\" formControlName=\\\"active_status\\\" required>\\n                      <label class=\\\"custom-control-label \\\" for=\\\"active_status1\\\">{{ 'ROOT.yes' | translate }}</label>\\n                    </div>\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                      <input type=\\\"radio\\\" id=\\\"active_status2\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\"\\n                        value=\\\"0\\\" formControlName=\\\"active_status\\\" required>\\n                      <label class=\\\"custom-control-label\\\" for=\\\"active_status2\\\">{{ 'ROOT.no' | translate }}</label>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </app-card>\\n          <div class=\\\"col mt-3 text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" routerLink=\\\"/adm-ms-selection-data\\\">\\n              <i class=\\\"icofont icofont icofont-exit\\\"></i> {{'ROOT.exit' | translate}}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm m-1\\\"\\n              [disabled]=\\\"formDetailStep1.invalid || !examType  || loadingCard\\\" (click)=\\\"createSelectionData()\\\">\\n              <span *ngIf=\\\"loadingCard\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n              <span *ngIf=\\\"loadingCard\\\" class=\\\"load-text\\\"> Loading...</span>\\n              <span *ngIf=\\\"!loadingCard\\\" class=\\\"btn-text\\\">\\n                {{'ROOT.next' | translate}} <i class=\\\"icofont icofont-curved-right\\\"></i>\\n              </span>\\n            </button>\\n          </div>\\n        </wizard-step>\\n        <wizard-step stepTitle=\\\"{{'CONTENT.exam-schedule' | translate}}\\\" navigationSymbol=\\\"2\\\">\\n          <app-card cardClass=\\\"card-datatable\\\" cardTitle=\\\"{{ 'CONTENT.exam-cbt' | translate }}\\\" [options]=\\\"false\\\"\\n            [loading]=\\\"loadtableExamCBT\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-12\\\">\\n                <div class=\\\"row align-items-center mb-2 mt-3 pr-2\\\">\\n                  <div class=\\\"col-12 text-center text-md-right\\\">\\n                    <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\" (click)=\\\"openFormCBTData(null, 'input')\\\"\\n                      [disabled]=\\\"hiddenTime\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-exam-path' | translate}}\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-responsive pb-2\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[0]\\\"\\n                    [dtTrigger]=\\\"dtTrigger\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam_type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.month' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam-date' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableExamCBT?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableExamCBT; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td class=\\\"center-table\\\">{{ data.exam_type }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'MMMM' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'dd/MM/yyyy' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.quota }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-primary btn-sm btn-round has-ripple\\\"\\n                            (click)=\\\"openFormCBTData(data, 'view');\\\">\\n                            <i class=\\\"ti-eye\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.view' |\\n                              translate}}</span>\\n                          </button>\\n                          <button class=\\\"btn btn-danger btn-sm btn-round has-ripple m-1\\\"\\n                            (click)=\\\"deleteExamsCBTDatas(data)\\\">\\n                            <i class=\\\"icofont icofont-ui-delete\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.delete' |\\n                              translate}}</span>\\n                          </button>\\n                          <button class=\\\"btn btn-info btn-sm btn-round has-ripple\\\"\\n                            (click)=\\\"openDetailsCBTDatas(data)\\\">\\n                            <i class=\\\"feather icon-info\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.detail' | translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamCBT?.length == 0 && !loadtableExamCBT\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamCBT?.length == 0 && loadtableExamCBT\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </app-card>\\n          <!-- <app-card cardClass=\\\"card-datatable\\\" cardTitle=\\\"{{ 'CONTENT.exam-psikotest' | translate }}\\\" [options]=\\\"false\\\"\\n            [loading]=\\\"loadtableExamPsikotest\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-12\\\">\\n                <div class=\\\"row align-items-center mb-2 mt-3 pr-2\\\">\\n                  <div class=\\\"col-12 text-center text-md-right\\\">\\n                    <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\"\\n                      (click)=\\\"openFormTypeDataPsikotest(null, 'input')\\\" [disabled]=\\\"hiddenTime\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-exam-path' | translate}}\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-responsive pb-2\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[1]\\\"\\n                    [dtTrigger]=\\\"dtTrigger1\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam_type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.month' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam-date' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableExamPsikotest?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableExamPsikotest; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td class=\\\"center-table\\\">{{ data.exam_type }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'MMMM' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'dd/MM/yyyy' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.quota }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\"\\n                            (click)=\\\"openFormTypeDataPsikotest(data, 'edit');\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                          <button class=\\\"btn btn-danger btn-sm btn-round has-ripple m-1\\\"\\n                            (click)=\\\"deleteExamsPsikotestDatas(data)\\\">\\n                            <i class=\\\"icofont icofont-ui-delete\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.delete' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamPsikotest?.length == 0 && !loadtableExamPsikotest\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamPsikotest?.length == 0 && loadtableExamPsikotest\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </app-card>\\n          <app-card cardClass=\\\"card-datatable\\\" cardTitle=\\\"{{ 'CONTENT.exam-interview' | translate }}\\\" [options]=\\\"false\\\"\\n            [loading]=\\\"loadtableExamInterview\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-12\\\">\\n                <div class=\\\"row align-items-center mb-2 mt-3 pr-2\\\">\\n                  <div class=\\\"col-12 text-center text-md-right\\\">\\n                    <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\"\\n                      (click)=\\\"openFormTypeDataInterview(null, 'input')\\\" [disabled]=\\\"hiddenTime\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-exam-path' | translate}}\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-responsive pb-2\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[2]\\\"\\n                    [dtTrigger]=\\\"dtTrigger2\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam_type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.month' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam-date' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableExamInterview?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableExamInterview; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td class=\\\"center-table\\\">{{ data.exam_type }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'MMMM' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'dd/MM/yyyy' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.quota }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\"\\n                            (click)=\\\"openFormTypeDataInterview(data, 'edit');\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                          <button class=\\\"btn btn-danger btn-sm btn-round has-ripple m-1\\\"\\n                            (click)=\\\"deleteExamsInterviewDatas(data)\\\">\\n                            <i class=\\\"icofont icofont-ui-delete\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.delete' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamInterview?.length == 0 && !loadtableExamInterview\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamInterview?.length == 0 && loadtableExamInterview\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </app-card>\\n          <app-card cardClass=\\\"card-datatable\\\" cardTitle=\\\"{{ 'CONTENT.exam-tpa' | translate }}\\\" [options]=\\\"false\\\"\\n            [loading]=\\\"loadtableExamTPA\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-12\\\">\\n                <div class=\\\"row align-items-center mb-2 mt-3 pr-2\\\">\\n                  <div class=\\\"col-12 text-center text-md-right\\\">\\n                    <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\"\\n                      (click)=\\\"openFormTypeDataTPA(null, 'input')\\\" [disabled]=\\\"hiddenTime\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-exam-path' | translate}}\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-responsive pb-2\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[3]\\\"\\n                    [dtTrigger]=\\\"dtTrigger3\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam_type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.month' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.exam-date' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableExamTPA?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableExamTPA; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td class=\\\"center-table\\\">{{ data.exam_type }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'MMMM' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.exam_date | date: 'dd/MM/yyyy' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.quota }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\"\\n                            (click)=\\\"openFormTypeDataTPA(data, 'edit');\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                          <button class=\\\"btn btn-danger btn-sm btn-round has-ripple m-1\\\"\\n                            (click)=\\\"deleteExamsTPADatas(data)\\\">\\n                            <i class=\\\"icofont icofont-ui-delete\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.delete' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamTPA?.length == 0 && !loadtableExamTPA\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableExamTPA?.length == 0 && loadtableExamTPA\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div>\\n          </app-card> -->\\n          <div class=\\\"col text-center mt-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" previousStep><i\\n                class=\\\"icofont icofont-curved-left\\\"></i> {{'ROOT.back' | translate}}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm m-1\\\" (click)=\\\"goToStep3()\\\"\\n              [disabled]=\\\"loadtableExamLocData || loadtableExamTimeData\\\">\\n              {{'ROOT.next' | translate}} <i class=\\\"icofont icofont-curved-right\\\"></i></button>\\n          </div>\\n        </wizard-step>\\n        <wizard-step stepTitle=\\\"{{'CONTENT.document-requirements' | translate}}\\\" navigationSymbol=\\\"3\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12 col-md-12\\\">\\n              <app-card cardTitle=\\\"{{ 'CONTENT.document-requirements' | translate }}\\\" cardClass=\\\"card-datatable\\\"\\n                headerClass=\\\"text-center text-md-left\\\" [hidHeader]=\\\"false\\\" [options]=\\\"false\\\"\\n                [loading]=\\\"loadtableSelectionDocumentData\\\">\\n                <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\">\\n                  <div class=\\\"row p-2\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group mb-2\\\">\\n                        <ng-select name=\\\"activeStatusStep4\\\" [allowClear]=\\\"false\\\"\\n                          [placeholder]=\\\"'CONTENT.active-status' | translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                          [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"activeStatusStep4\\\"\\n                          (deselected)=\\\"onDeselected('activeStatusStep4')\\\" [options]=\\\"listActiveStatusFilters\\\"\\n                          (selected)=\\\"applyFiltersDocumentReq(activeStatusStep4)\\\"></ng-select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-9 text-center text-md-right\\\">\\n                      <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\"\\n                        (click)=\\\"openFormDocument(null, 'input')\\\">\\n                        <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-document' | translate}}\\n                      </button>\\n                    </div>\\n                  </div>\\n                </form>\\n                <div class=\\\"table-responsive pb-4\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[4]\\\"\\n                    [dtTrigger]=\\\"dtTrigger4\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\">{{ 'CONTENT.document-name' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.document-type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">\\n                          {{ 'CONTENT.active-status' | translate}}\\n                        </th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableDocumentReq?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableDocumentReq; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td>{{ data.document_name }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <span class=\\\"badge badge-{{ data.required === true ? 'primary' : 'secondary' }}\\\">{{\\n                            data.required === true ? ('CONTENT.mandatory-required' | translate) :\\n                            ('CONTENT.mandatory-not-required' | translate)\\n                            }}\\n                          </span>\\n                        <td class=\\\"center-table\\\">\\n                          <span class=\\\"badge badge-{{ data.active_status === true ? 'success' : 'danger' }}\\\">{{\\n                            data.active_status === true ? ('ROOT.active' | translate) : ('ROOT.nonactive' | translate)\\n                            }}\\n                          </span>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\" [placement]=\\\"'top'\\\"\\n                            ngbTooltip=\\\"{{'ROOT.edit' | translate}}\\\" (click)=\\\"openFormDocument(data, 'edit')\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableDocumentReq?.length == 0 && !loadtableSelectionDocumentData\\\">\\n                      <tr>\\n                        <td colspan=\\\"5\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableDocumentReq?.length == 0 && loadtableSelectionDocumentData\\\">\\n                      <tr>\\n                        <td colspan=\\\"5\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </app-card>\\n              <div class=\\\"col text-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" previousStep><i\\n                    class=\\\"icofont icofont-curved-left\\\"></i> {{'ROOT.back' | translate}}</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm m-1\\\" (click)=\\\"goToStep5()\\\"\\n                  [disabled]=\\\"loadtableSelectionDocumentData\\\">\\n                  {{'ROOT.next' | translate}} <i class=\\\"icofont icofont-curved-right\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n        </wizard-step>\\n        <wizard-step stepTitle=\\\"{{'CONTENT.pin-price-data' | translate}}\\\" navigationSymbol=\\\"4\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <app-alert type=\\\"info\\\" class=\\\"text-justify\\\">{{ 'CONTENT.info-pin-price-active' | translate}}</app-alert>\\n              <app-card cardTitle=\\\"{{ 'CONTENT.pin-price-data' | translate }}\\\" cardClass=\\\"card-datatable\\\"\\n                headerClass=\\\"text-center text-md-left\\\" [hidHeader]=\\\"false\\\" [options]=\\\"false\\\"\\n                [loading]=\\\"loadtablePINPriceData\\\">\\n                <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\">\\n                  <div class=\\\"row p-2\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group mb-2\\\">\\n                        <ng-select name=\\\"activeStatusStep5\\\" [allowClear]=\\\"false\\\"\\n                          [placeholder]=\\\"'CONTENT.active-status' | translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                          [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"activeStatusStep5\\\"\\n                          (deselected)=\\\"onDeselected('activeStatusStep5')\\\" [options]=\\\"listActiveStatusFilters\\\"\\n                          (selected)=\\\"applyFiltersPinPrice(activeStatusStep5)\\\"></ng-select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-9 text-center text-md-right\\\">\\n                      <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\"\\n                        (click)=\\\"openFormPinPrice(null, 'input')\\\" [disabled]=\\\"isDataPinPriceActive\\\">\\n                        <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-pin-price' | translate}}\\n                      </button>\\n                    </div>\\n                  </div>\\n                </form>\\n                <div class=\\\"table-responsive pb-5\\\">\\n                  <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[5]\\\"\\n                    [dtTrigger]=\\\"dtTrigger5\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.medical-type' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.pin-price' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.max-program-study' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.active-status' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tablePinPrice?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tablePinPrice; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td class=\\\"center-table\\\">{{ data.is_medical === true ? 'Medis' : 'Non Medis'}}</td>\\n                        <td class=\\\"center-table\\\">{{ data.price | currency:'Rp':'symbol':'1.0-0' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.maks_study_program }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <span class=\\\"badge badge-{{ data.active_status === true ? 'success' : 'danger' }}\\\">{{\\n                            data.active_status === true ? ('ROOT.active' | translate) : ('ROOT.nonactive' | translate)\\n                            }}\\n                          </span>\\n                        </td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\" [placement]=\\\"'top'\\\"\\n                            ngbTooltip=\\\"{{'ROOT.edit' | translate}}\\\" (click)=\\\"openFormPinPrice(data, 'edit')\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tablePinPrice?.length == 0 && !loadtablePINPriceData\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tablePinPrice?.length == 0 && loadtablePINPriceData\\\">\\n                      <tr>\\n                        <td colspan=\\\"6\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </app-card>\\n            </div>\\n          </div>\\n          <div class=\\\"col text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" previousStep><i\\n                class=\\\"icofont icofont-curved-left\\\"></i> {{'ROOT.back' | translate}}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm m-1\\\" (click)=\\\"goToStep6()\\\"\\n              [disabled]=\\\"loadtablePINPriceData || disabledGotoMapingProdi\\\">\\n              {{'ROOT.next' | translate}} <i class=\\\"icofont icofont-curved-right\\\"></i></button>\\n          </div>\\n        </wizard-step>\\n        <wizard-step stepTitle=\\\"{{'CONTENT.study-program-data' | translate}}\\\" navigationSymbol=\\\"5\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <app-card cardTitle=\\\"{{ 'CONTENT.study-program-data' | translate }}\\\" cardClass=\\\"card-datatable\\\"\\n                headerClass=\\\"text-center text-md-left\\\" [hidHeader]=\\\"false\\\" [options]=\\\"false\\\"\\n                [loading]=\\\"loadtableMappStudyProgramData\\\">\\n                <div class=\\\"row align-items-center p-2\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group mb-0\\\">\\n                      <ng-select name=\\\"active_status\\\" [allowClear]=\\\"false\\\"\\n                        [placeholder]=\\\"'CONTENT.active-status' | translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                        [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"statusfilter\\\"\\n                        (deselected)=\\\"onDeselected('statusfilter')\\\" [options]=\\\"listActiveStatusFilters\\\"\\n                        (selected)=\\\"applyFilter(statusfilter)\\\"></ng-select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-9 text-center text-md-right\\\">\\n                    <button class=\\\"btn btn-primary btn-sm btn-round has-ripple \\\"\\n                      (click)=\\\"openFormMappingDataProdi('input')\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-study-program-all' | translate}}\\n                    </button>\\n                    <button class=\\\"btn btn-success btn-sm btn-round has-ripple ml-2\\\"\\n                      (click)=\\\"openFormStudyProgram(null, 'input')\\\">\\n                      <i class=\\\"icofont icofont-plus\\\"></i> {{'CONTENT.add-study-program' | translate}}\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"table-responsive pb-6\\\">\\n                  <table datatable class=\\\"table table-hover\\\" [dtOptions]=\\\"dtOptions[6]\\\" [dtTrigger]=\\\"dtTrigger6\\\">\\n                    <thead class=\\\"thead-light\\\">\\n                      <tr>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}\\n                        </th>\\n                        <th scope=\\\"col\\\">{{ 'CONTENT.faculty-name' | translate}}</th>\\n                        <th scope=\\\"col\\\">{{ 'CONTENT.study-program-name' | translate}}</th>\\n                        <th scope=\\\"col\\\">{{ 'CONTENT.is-technic' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.min-SDP2' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.active-status' | translate}}</th>\\n                        <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody *ngIf=\\\"tableStudyProgram?.length != 0\\\">\\n                      <tr *ngFor=\\\"let data of tableStudyProgram; let i = index;\\\">\\n                        <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n                        <td>{{ data.faculty_name }}</td>\\n                        <td>{{ data.study_program_name ? data.study_program_name.replace('amp;', ' ') : '-' }}</td>\\n                        <td>\\n                          <span class=\\\"badge badge-light-{{ data.is_technic === true ? 'primary' : 'dark' }}\\\">{{\\n                            data.is_technic === true ? ('CONTENT.technic' | translate) : ('CONTENT.non-technic' |\\n                            translate)\\n                            }}\\n                          </span>\\n                        </td>\\n                        <td class=\\\"center-table\\\">{{ data.minimum_donation | currency:'Rp':'symbol':'1.0-0' }}</td>\\n                        <td class=\\\"center-table\\\">{{ data.quota }}</td>\\n                        <td class=\\\"center-table\\\">\\n                          <span class=\\\"badge badge-{{ data.active_status === true ? 'success' : 'danger' }}\\\">{{\\n                            data.active_status === true ? ('ROOT.active' | translate) : ('ROOT.nonactive' | translate)\\n                            }}\\n                          </span>\\n                        </td>\\n                        <td class=\\\"center-table\\\">\\n                          <button class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\" [placement]=\\\"'top'\\\"\\n                            ngbTooltip=\\\"{{'ROOT.edit' | translate}}\\\" (click)=\\\"openFormStudyProgram(data, 'edit')\\\">\\n                            <i class=\\\"icofont icofont-ui-edit\\\"></i> <span class=\\\"d-sm-none\\\"> {{'ROOT.edit' |\\n                              translate}}</span>\\n                          </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableStudyProgram?.length == 0 && !loadtableMappStudyProgramData\\\">\\n                      <tr>\\n                        <td colspan=\\\"8\\\" class=\\\"no-data-available text-center\\\">Data tidak ditemukan!</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                    <tbody *ngIf=\\\"tableStudyProgram?.length == 0 && loadtableMappStudyProgramData\\\">\\n                      <tr>\\n                        <td colspan=\\\"8\\\" class=\\\"no-data-available text-center\\\">Loading Data....</td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                        <td class=\\\"hidden\\\"></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </app-card>\\n            </div>\\n          </div>\\n          <div class=\\\"col text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" previousStep><i\\n                class=\\\"icofont icofont-curved-left\\\"></i> {{'ROOT.back' | translate}}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm m-1\\\" routerLink=\\\"/adm-ms-selection-data\\\"\\n              [disabled]=\\\"loadtableMappStudyProgramData\\\">{{'ROOT.finish' | translate}}\\n              <i class=\\\"icofont icofont-racing-flag-alt\\\"></i> </button>\\n            </div>\\n        </wizard-step>\\n      </wizard>\\n    </app-card>\\n  </div>\\n</div>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #examLocModal [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'CONTENT.add-exam-location' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"examLocModal.hide();\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examLocMappingDataForm\\\"\\n      (ngSubmit)=\\\"createExamLocationData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-location' | translate }}</label>\\n            <ng-select name=\\\"exam_location_id\\\" [placeholder]=\\\"'CONTENT.choose-exam-location'|translate\\\"\\n              [ngClass]=\\\"'custom bg-white'\\\" formControlName=\\\"exam_location_id\\\"\\n              [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"locationTime\\\" [options]=\\\"listExamLocation\\\">\\n            </ng-select>\\n            <label *ngIf=\\\"!locationTime\\\" id=\\\"validation-email-error\\\"\\n              class=\\\"error jquery-validation-error small form-text invalid-feedback\\\">{{ 'CONTENT.please-choose' |\\n              translate }}{{ 'CONTENT.exam-location' | translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"examLocModal.hide()\\\"\\n                [disabled]=\\\"!examLocMappingDataForm.valid || !locationTime\\\">\\n                <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #cbtModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\" [loading]=\\\"loading\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"view\\\" ? (\\\"ROOT.detail\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{'CONTENT.exam-scheduled' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeModalCBT()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examCbtDataForm\\\"\\n      (ngSubmit)=\\\"createCBTData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam_type' | translate }}</label>\\n            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam_type' | translate\\\" required\\n              formControlName=\\\"exam_type\\\" readonly> -->\\n              <ng-select [(ngModel)]=\\\"exampSheduler\\\" name=\\\"exam_type\\\" [allowClear]=\\\"true\\\" [options]=\\\"listSettingUjianId\\\"\\n                  [placeholder]=\\\"'ROOT.choose' | translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                  [notFoundMsg]=\\\"'ROOT.no_data_found' | translate\\\" [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                  (selected)=\\\"examStatusChanged($event)\\\">\\n                </ng-select>\\n                \\n          </div>\\n          <div class=\\\"form-row\\\" *ngIf=\\\"exampSheduler != 1\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.range-time' | translate }}</label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"start_date\\\">\\n              <label\\n                *ngIf=\\\"fps.start_date.errors && fps.start_date.errors.required && (fps.start_date.touched || fps.start_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\"></label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"end_date\\\" step=\\\"900\\\">\\n              <label *ngIf=\\\"fps.end_date.errors && fps.end_date.errors.required && (fps.end_date.touched || fps.end_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-date' | translate }} <span class=\\\"required\\\">*</span></label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam-date' | translate\\\" required [readonly]=\\\"formType === 'view'\\\"\\n              formControlName=\\\"exam_date\\\" (change)=\\\"changeDateCbt($event)\\\">\\n            <label\\n              *ngIf=\\\"fcbt.exam_date.errors && fcbt.exam_date.errors.required && (fcbt.exam_date.touched || fcbt.exam_date.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.exam-date' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }} <span class=\\\"required\\\">*</span></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\" min=\\\"0\\\" maxlength=\\\"5\\\" [readonly]=\\\"formType === 'view'\\\">\\n            <label *ngIf=\\\"fcbt.quota.errors && fcbt.quota.errors.required && (fcbt.quota.touched || fcbt.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' |\\n              translate }}</label>\\n            <label *ngIf=\\\"fcbt.quota.errors && fcbt.quota.errors.pattern && (fcbt.quota.touched || fcbt.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.number-only' | translate}}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"closeModalCBT()\\\">\\n              <i class=\\\"ti-close\\\"></i> {{ 'ROOT.close' | translate }}\\n            </button>\\n              <button *ngIf=\\\"formType === 'input'\\\" type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!examCbtDataForm.valid || loading || haveNoDataCbt\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n                <span *ngIf=\\\"loading\\\" class=\\\"load-text\\\"> Loading...</span>\\n                <span *ngIf=\\\"!loading\\\" class=\\\"btn-text\\\">\\n                  <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n                </span>\\n              </button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<app-ui-modal #cbtDetailsModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-lg\\\" [hideFooter]=\\\"true\\\"\\n  [loading]=\\\"loadtableExamCBTDetails || loadingSection\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'CONTENT.session' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeCbtModalsDetails()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\">\\n      <div *ngIf=\\\"!isRaportCategory\\\" class=\\\"row align-items-center mb-2 mt-1 pr-2\\\">\\n        <div class=\\\"col-12 text-center text-md-right\\\">\\n          <button class=\\\"btn btn-success btn-sm btn-round has-ripple\\\" (click)=\\\"createMoodleGroup()\\\" [disabled]=\\\"haveMoodleGroup\\\">\\n            <i class=\\\"icofont icofont-check-circled\\\"></i> {{'CONTENT.moodle-group' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive pb-6\\\">\\n        <table class=\\\"table table-striped table-hover table-sm\\\">\\n          <thead class=\\\"thead-light bg-primarys\\\">\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n              <th class=\\\"center-table\\\" scope=\\\"col\\\">{{ 'CONTENT.session' | translate}}</th>\\n              <th class=\\\"center-table\\\" scope=\\\"col\\\">{{ 'CONTENT.start-time' | translate}}</th>\\n              <th class=\\\"center-table\\\" scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.end-time' | translate}}</th>\\n              <th class=\\\"center-table\\\" scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"tableExamCBTDetails?.length != 0\\\">\\n            <tr *ngFor=\\\"let data of tableExamCBTDetails; let i = index;\\\">\\n              <th class=\\\"center-table\\\" scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n              <td class=\\\"center-table\\\">\\n                <span *ngIf=\\\"data.type === '1'\\\">Sesi 1</span>\\n                <span *ngIf=\\\"data.type === '2'\\\">Sesi 2</span>\\n                <span *ngIf=\\\"data.type === '3'\\\">Sesi 3</span>\\n              </td>\\n              <td class=\\\"center-table\\\">{{ data.session_start }}</td>\\n              <td class=\\\"center-table\\\">{{ data.session_end }}</td>\\n              <td class=\\\"center-table\\\">\\n                <button *ngIf=\\\"data.session_start == null && data.session_end == null\\\" class=\\\"btn btn-warning btn-sm btn-round has-ripple\\\" (click)=\\\"openDetailsCBTForm(data, 'edit')\\\">\\n                  <i class=\\\"icofont icofont-ui-edit\\\"></i>\\n                </button>\\n                <button *ngIf=\\\"data.session_start !== null && data.session_end !== null\\\" class=\\\"btn btn-primary btn-sm btn-round has-ripple\\\" (click)=\\\"openDetailsCBTForm(data, 'view')\\\">\\n                  <i class=\\\"icofont icofont-eye-alt\\\"></i>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div *ngIf=\\\"!isRaportCategory\\\">\\n        <app-alert *ngIf=\\\"!haveDataSessionOneTwoThree && !haveMoodleGroup\\\" type=\\\"warning\\\" class=\\\"text-justify\\\">\\n          {{ 'CONTENT.warning' | translate}} <br> {{ 'CONTENT.info-cbt-data-1' | translate}} {{'CONTENT.moodle-group' | translate }}!</app-alert>\\n        <app-alert *ngIf=\\\"haveDataSessionOneTwoThree && !haveMoodleGroup\\\" type=\\\"success\\\" class=\\\"text-justify\\\">\\n          {{ 'CONTENT.success' | translate}} <br> {{ 'CONTENT.info-cbt-data-2' | translate}} {{'CONTENT.moodle-group' | translate }}!</app-alert>\\n        <app-alert *ngIf=\\\"haveMoodleGroup\\\" type=\\\"primary\\\" class=\\\"text-justify\\\">\\n          {{ 'CONTENT.info' | translate}}! <br> {{ 'CONTENT.info-cbt-data-3' | translate}}.</app-alert>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #cbtSessionModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\"\\n  [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType == 'edit' ? (\\\"ROOT.edit\\\" | translate) : ('ROOT.detail' | translate) }} {{'CONTENT.add-exam-time' | translate}} </h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeDetailsCBTSession()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examCbtDetailsDataForm\\\"\\n      (ngSubmit)=\\\"createCBTDetailsDataSession()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <app-alert *ngIf=\\\"formType == 'edit'\\\" type=\\\"warning\\\" class=\\\"text-justify\\\">\\n            {{ 'CONTENT.warning' | translate}} <br> {{ 'CONTENT.info-cbt-data' | translate}}</app-alert>\\n         \\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.start-time' | translate }} <span\\n              class=\\\"required\\\">*</span></label>\\n            <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"session_start_time\\\" required\\n              formControlName=\\\"session_start_time\\\" [readonly]=\\\"formType == 'view'\\\">\\n            <label\\n              *ngIf=\\\"fcbtdet.session_start_time.errors && fcbtdet.session_start_time.errors.required && (fcbtdet.session_start_time.touched || fcbtdet.session_start_time.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.start-time'\\n              | translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.end-time' | translate }} <span\\n              class=\\\"required\\\">*</span></label>\\n            <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"session_end_time\\\" required formControlName=\\\"session_end_time\\\" [readonly]=\\\"formType == 'view'\\\">\\n            <label\\n              *ngIf=\\\"fcbtdet.session_end_time.errors && fcbtdet.session_end_time.errors.required && (fcbtdet.session_end_time.touched || fcbtdet.session_end_time.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.end-time' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <button *ngIf=\\\"formType ==='view'\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"closeDetailsCBTSession()\\\">\\n              <i class=\\\"ti-close\\\"></i> {{ 'ROOT.close' | translate }}\\n          </button>\\n              <button *ngIf=\\\"formType ==='edit'\\\" type=\\\"submit\\\" class=\\\"btn btn-warning btn-sm\\\" [disabled]=\\\"loading ||examCbtDetailsDataForm.invalid\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n                <span *ngIf=\\\"loading\\\" class=\\\"load-text\\\"> Loading...</span>\\n                <span *ngIf=\\\"!loading\\\" class=\\\"btn-text\\\">\\n                  <i class=\\\"ti-pencil\\\"></i> {{ 'ROOT.edit' | translate }}\\n                </span>\\n              </button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #psikotestModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{'CONTENT.add-exam-time' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closePsikotestModals()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examPsikotestDataForm\\\"\\n      (ngSubmit)=\\\"createPsikotestData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam_type' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam_type' | translate\\\" required\\n              formControlName=\\\"exam_type\\\" readonly>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-date' | translate }}</label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam-date' | translate\\\" required\\n              formControlName=\\\"exam_date\\\">\\n            <label\\n              *ngIf=\\\"fps.exam_date.errors && fps.exam_date.errors.required && (fps.exam_date.touched || fps.exam_date.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.exam-date' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.range-time' | translate }}</label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"start_date\\\">\\n              <label\\n                *ngIf=\\\"fps.start_date.errors && fps.start_date.errors.required && (fps.start_date.touched || fps.start_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\"></label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"end_date\\\" step=\\\"900\\\">\\n              <label\\n                *ngIf=\\\"fps.end_date.errors && fps.end_date.errors.required && (fps.end_date.touched || fps.end_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }}</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\" min=\\\"1\\\" max=\\\"32767\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label *ngIf=\\\"fps.quota.errors && fps.quota.errors.required && (fps.quota.touched || fps.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!examPsikotestDataForm.valid || loading\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n                <span *ngIf=\\\"loading\\\" class=\\\"load-text\\\"> Loading...</span>\\n                <span *ngIf=\\\"!loading\\\" class=\\\"btn-text\\\">\\n                  <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #interviewModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{'CONTENT.add-exam-time' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeInterviewModals()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examInterviewDataForm\\\"\\n      (ngSubmit)=\\\"createInterviewData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam_type' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam_type' | translate\\\" required\\n              formControlName=\\\"exam_type\\\" readonly>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-date' | translate }}</label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam-date' | translate\\\" required\\n              formControlName=\\\"exam_date\\\">\\n            <label\\n              *ngIf=\\\"fint.exam_date.errors && fint.exam_date.errors.required && (fint.exam_date.touched || fint.exam_date.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.exam-date' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.range-time' | translate }}</label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"start_date\\\">\\n              <label\\n                *ngIf=\\\"fint.start_date.errors && fint.start_date.errors.required && (fint.start_date.touched || fint.start_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\"></label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"end_date\\\" step=\\\"900\\\">\\n              <label\\n                *ngIf=\\\"fint.end_date.errors && fint.end_date.errors.required && (fint.end_date.touched || fint.end_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }}</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\" min=\\\"1\\\" max=\\\"32767\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label *ngIf=\\\"fint.quota.errors && fint.quota.errors.required && (fint.quota.touched || fint.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!examInterviewDataForm.valid || loading\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n                <span *ngIf=\\\"loading\\\" class=\\\"load-text\\\"> Loading...</span>\\n                <span *ngIf=\\\"!loading\\\" class=\\\"btn-text\\\">\\n                  <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #tpaModals [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{'CONTENT.add-exam-time' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeTPAModals()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examTPADataForm\\\"\\n      (ngSubmit)=\\\"createTPAData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam_type' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam_type' | translate\\\" required\\n              formControlName=\\\"exam_type\\\" readonly>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-date' | translate }}</label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam-date' | translate\\\" required\\n              formControlName=\\\"exam_date\\\">\\n            <label\\n              *ngIf=\\\"ftpa.exam_date.errors && ftpa.exam_date.errors.required && (ftpa.exam_date.touched || ftpa.exam_date.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.exam-date' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.range-time' | translate }}</label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"start_date\\\">\\n              <label\\n                *ngIf=\\\"ftpa.start_date.errors && ftpa.start_date.errors.required && (ftpa.start_date.touched || ftpa.start_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\"></label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"end_date\\\" step=\\\"900\\\">\\n              <label\\n                *ngIf=\\\"ftpa.end_date.errors && ftpa.end_date.errors.required && (ftpa.end_date.touched || ftpa.end_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }}</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\" min=\\\"1\\\" max=\\\"32767\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label *ngIf=\\\"ftpa.quota.errors && ftpa.quota.errors.required && (ftpa.quota.touched || ftpa.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!examTPADataForm.valid || loading\\\">\\n                <span *ngIf=\\\"loading\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\"></span>\\n                <span *ngIf=\\\"loading\\\" class=\\\"load-text\\\"> Loading...</span>\\n                <span *ngIf=\\\"!loading\\\" class=\\\"btn-text\\\">\\n                  <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n                </span>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #examTimeModal [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{'CONTENT.add-exam-time' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"examTimeModal.hide();\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"examTimeMappingDataForm\\\"\\n      (ngSubmit)=\\\"createExamTimeData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.exam-date' | translate }}</label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [placeholder]=\\\"'CONTENT.exam-date' | translate\\\" required\\n              formControlName=\\\"exam_date\\\">\\n            <label\\n              *ngIf=\\\"fet.exam_date.errors && fet.exam_date.errors.required && (fet.exam_date.touched || fet.exam_date.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.exam-date' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.session' | translate }}</label>\\n            <ng-select name=\\\"session\\\" [placeholder]=\\\"'CONTENT.session'|translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n              formControlName=\\\"session\\\" [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"session\\\"\\n              [options]=\\\"listSession\\\"></ng-select>\\n            <label *ngIf=\\\"!session\\\" id=\\\"validation-email-error\\\"\\n              class=\\\"error jquery-validation-error small form-text invalid-feedback\\\">{{ 'ROOT.required' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.range-time' | translate }}</label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"start_date\\\">\\n              <label\\n                *ngIf=\\\"fet.start_date.errors && fet.start_date.errors.required && (fet.start_date.touched || fet.start_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"form-label m-b-0 f-w-600\\\"></label>\\n              <input type=\\\"time\\\" class=\\\"form-control\\\" required formControlName=\\\"end_date\\\" step=\\\"900\\\">\\n              <label\\n                *ngIf=\\\"fet.end_date.errors && fet.end_date.errors.required && (fet.end_date.touched || fet.end_date.dirty)\\\"\\n                class=\\\"error text-danger small form-text\\\">\\n                {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.range-time' | translate }}\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }}</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\" min=\\\"1\\\" max=\\\"32767\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label *ngIf=\\\"fet.quota.errors && fet.quota.errors.required && (fet.quota.touched || fet.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">{{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"examTimeModal.hide()\\\"\\n                [disabled]=\\\"!examTimeMappingDataForm.valid || !session\\\">\\n                <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<app-ui-modal #documentRequirementsModal [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\" [loading]=\\\"loadingModals\\\"\\n  [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }}\\n      {{ 'CONTENT.add-document-requirements' | translate }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeDocumentReqModals()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"documentRequirementsForm\\\"\\n      (ngSubmit)=\\\"createDocumentRequirementsData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.choose-document-type' | translate }}</label>\\n            <ng-select name=\\\"document_type\\\" [placeholder]=\\\"'CONTENT.choose-document-type' | translate\\\"\\n              [ngClass]=\\\"'custom bg-white index-up'\\\" required formControlName=\\\"document_type_id\\\"\\n              [(ngModel)]=\\\"documentType\\\" (selected)=\\\"changeDocumentRequirementType($event)\\\"\\n              [options]=\\\"listDocumentType\\\"></ng-select>\\n            <label *ngIf=\\\"!documentType\\\" class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.document-type' | translate }}\\n            </label>\\n            <label id=\\\"validation-email-error\\\" class=\\\"error jquery-validation-error small form-text invalid-feedback\\\">{{\\n              'CONTENT.please-choose' | translate }} {{ 'CONTENT.document-type' | translate }}</label>\\n          </div>\\n          <div *ngIf=\\\"isReport || isUtbkDocument\\\" class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group mb-2\\\">\\n                <label class=\\\"form-label ml-1 m-b-0 f-w-600\\\">{{ isUtbkDocument === true ? ('CONTENT.saintek' | translate) : ('CONTENT.technic' | translate) }}</label>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck1\\\" formControlName=\\\"math\\\"\\n                    (change)=\\\"onCheckMath($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck1\\\">Matematika</label>\\n                </div>\\n                <div [hidden]=\\\"isUtbkDocument\\\" class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck2\\\" formControlName=\\\"bahasa\\\"\\n                    (change)=\\\"onCheckBahasa($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck2\\\">Bahasa</label>\\n                </div>\\n                <div [hidden]=\\\"isUtbkDocument\\\"  class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck3\\\" formControlName=\\\"eng\\\"\\n                    (change)=\\\"onCheckEnglish($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck3\\\">English</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck4\\\" formControlName=\\\"physics\\\"\\n                    (change)=\\\"onCheckPhysics($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck4\\\">Fisika</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck5\\\" formControlName=\\\"chemicals\\\"\\n                    (change)=\\\"onCheckChemical($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck5\\\">Kimia</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck6\\\" formControlName=\\\"biology\\\"\\n                    (change)=\\\"onCheckBiology($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck6\\\">Biologi</label>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group mb-2 m\\\">\\n                <label class=\\\"form-label ml-1 m-b-0 f-w-600\\\">{{isUtbkDocument === true ? ('CONTENT.soshum' | translate) : ('CONTENT.non-technic' | translate)}}</label>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck7\\\" formControlName=\\\"math2\\\"\\n                    (change)=\\\"onCheckMathNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck7\\\">Matematika</label>\\n                </div>\\n                <div [hidden]=\\\"isUtbkDocument\\\"  class=\\\"form-check  ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck8\\\" formControlName=\\\"bahasa2\\\"\\n                    (change)=\\\"onCheckBahasaNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck8\\\">Bahasa</label>\\n                </div>\\n                <div [hidden]=\\\"isUtbkDocument\\\" class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck9\\\" formControlName=\\\"eng2\\\"\\n                    (change)=\\\"onCheckEnglishNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck9\\\">English</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck10\\\" formControlName=\\\"economy\\\"\\n                    (change)=\\\"onCheckEconomyNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck10\\\">Ekonomi</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck11\\\" formControlName=\\\"sosiology\\\"\\n                    (change)=\\\"onCheckSociologicalNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck11\\\">Sosiologi</label>\\n                </div>\\n                <div class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck12\\\" formControlName=\\\"geography\\\"\\n                    (change)=\\\"onCheckGeographyNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck12\\\">Geografi</label>\\n                </div>\\n                <div *ngIf=\\\"isUtbkDocument\\\" class=\\\"form-check ml-4\\\">\\n                  <input class=\\\"form-check-input mt-0\\\" type=\\\"checkbox\\\" id=\\\"gridCheck13\\\" formControlName=\\\"sejarah\\\"\\n                    (change)=\\\"onSejarahNonTechnic($event)\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"gridCheck13\\\">Sejarah</label>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.active-status'| translate}}</h6> <br>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status1\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\"\\n                formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label \\\" for=\\\"active_status1\\\">{{ 'ROOT.yes' | translate }}</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status2\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\"\\n                [checked]=\\\"true\\\" formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label\\\" for=\\\"active_status2\\\">{{ 'ROOT.no' | translate }}</label>\\n            </div>\\n            <label\\n              *ngIf=\\\"fdr.active_status.errors && fdr.active_status.errors.required && (fdr.active_status.touched || fdr.active_status.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.active-status' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.mandatory-doc'| translate}}</h6> <br>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"mandatory\\\" name=\\\"mandatory_doc\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\"\\n                formControlName=\\\"mandatory_doc\\\" required>\\n              <label class=\\\"custom-control-label \\\" for=\\\"mandatory\\\">{{ 'ROOT.yes' | translate }}</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"mandatory2\\\" name=\\\"mandatory_doc\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\"\\n                [checked]=\\\"true\\\" formControlName=\\\"mandatory_doc\\\" required>\\n              <label class=\\\"custom-control-label\\\" for=\\\"mandatory2\\\">{{ 'ROOT.no' | translate }}</label>\\n            </div>\\n            <label\\n              *ngIf=\\\"fdr.mandatory_doc.errors && fdr.mandatory_doc.errors.required && (fdr.mandatory_doc.touched || fdr.mandatory_doc.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.mandatory-doc' | translate }}\\n            </label>\\n          </div>\\n          <div *ngIf=\\\"isTranscriptDocument\\\" class=\\\"form-group mb-2\\\">\\n            <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.input-nilai'| translate}}</h6> <br>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"inputNilai\\\" name=\\\"is_input_nilai\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\"\\n                formControlName=\\\"is_input_nilai\\\" required>\\n              <label class=\\\"custom-control-label \\\" for=\\\"inputNilai\\\">{{ 'ROOT.yes' | translate }}</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"inputNilai2\\\" name=\\\"is_input_nilai\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\"\\n                formControlName=\\\"is_input_nilai\\\" required>\\n              <label class=\\\"custom-control-label\\\" for=\\\"inputNilai2\\\">{{ 'ROOT.no' | translate }}</label>\\n            </div>\\n            <label\\n              *ngIf=\\\"fdr.is_input_nilai.errors && fdr.is_input_nilai.errors.required && (fdr.is_input_nilai.touched || fdr.is_input_nilai.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.input-nilai' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"documentRequirementsForm.invalid\\\">\\n                <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #pinPriceDataModal [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\"\\n  [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }}\\n      {{ 'CONTENT.pin-price-data' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"pinPriceDataModal.hide();\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"pinPriceForm\\\"\\n      (ngSubmit)=\\\"createDetailPINPriceData()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.medical-type' | translate }}</label>\\n            <ng-select name=\\\"is_medical\\\" [placeholder]=\\\"'CONTENT.medical-type'|translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n              formControlName=\\\"is_medical\\\" [notFoundMsg]=\\\"'ROOT.no_data_found'|translate\\\" [(ngModel)]=\\\"isMedical\\\"\\n              [options]=\\\"listMedical\\\"></ng-select>\\n            <label *ngIf=\\\"!isMedical\\\" id=\\\"validation-email-error\\\"\\n              class=\\\"error jquery-validation-error small form-text invalid-feedback\\\">{{ 'ROOT.required' |\\n              translate }}</label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.pin-price' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pinPrice\\\" required formControlName=\\\"price\\\" currencyMask\\n              [options]=\\\"{prefix: 'Rp', allowZero: true, align: 'left', precision: 0 }\\\"\\n              [placeholder]=\\\"'CONTENT.pin-price'|translate\\\">\\n            <label *ngIf=\\\"fpp.price.errors && fpp.price.errors.required && (fpp.price.touched || fpp.price.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.pin-price' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.max-program-study' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" required formControlName=\\\"maks_study_program\\\"\\n              [placeholder]=\\\"'CONTENT.max-program-study'|translate\\\" min=\\\"1\\\" max=\\\"5\\\" maxlength=\\\"1\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label\\n              *ngIf=\\\"fpp.maks_study_program.errors && fpp.maks_study_program.errors.required && (fpp.maks_study_program.touched || fpp.maks_study_program.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.max-program-study' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.active-status'| translate}}</h6> <br>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status1\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\"\\n                formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label \\\" for=\\\"active_status1\\\">{{ 'ROOT.yes' | translate }}</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status2\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\"\\n                [checked]=\\\"true\\\" formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label\\\" for=\\\"active_status2\\\">{{ 'ROOT.no' | translate }}</label>\\n            </div>\\n            <label\\n              *ngIf=\\\"fpp.active_status.errors && fpp.active_status.errors.required && (fpp.active_status.touched || fpp.active_status.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.active-status' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"pinPriceDataModal.hide()\\\"\\n                [disabled]=\\\"pinPriceForm.invalid\\\">\\n                <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<!-- Forms Modal -->\\n<app-ui-modal #studyProgramDataModal [containerClick]=\\\"false\\\" dialogClass=\\\"modal-dialog-centered modal-l\\\"\\n  [hideFooter]=\\\"true\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n      {{ formType === \\\"edit\\\" ? (\\\"ROOT.edit\\\" | translate)\\n      : (\\\"ROOT.add\\\" | translate)\\n      }} {{ 'CONTENT.study-program-data' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"studyProgramDataModal.hide(); \\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"studyProgramForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.study-program' | translate }}</label>\\n            <ng-select [placeholder]=\\\"'CONTENT.choose-study-program'|translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n              formControlName=\\\"program_study_id\\\" required [(ngModel)]=\\\"studyProgram\\\"\\n              (deselected)=\\\"onDeselected('studyProgram')\\\" [options]=\\\"listStudyProgram\\\"></ng-select>\\n            <label *ngIf=\\\"!studyProgram\\\" class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.study-program' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.is-technic' | translate }}</label>\\n            <ng-select [placeholder]=\\\"'CONTENT.is-technic'|translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n              formControlName=\\\"is_technic\\\" required [(ngModel)]=\\\"isTechnic\\\" [options]=\\\"listTechnic\\\"></ng-select>\\n            <label *ngIf=\\\"!isTechnic\\\" class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.is-technic' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.quota' | translate }}</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quota\\\" required formControlName=\\\"quota\\\"\\n              [placeholder]=\\\"'CONTENT.quota'|translate\\\" min=\\\"1\\\" max=\\\"32767\\\"\\n              oninput=\\\"this.value=this.value.replace(/[^0-9]/g,'');\\\">\\n            <label *ngIf=\\\"fsp.quota.errors && fsp.quota.errors.required && (fsp.quota.touched || fsp.quota.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.quota' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.min-SDP2' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"minimum_donation\\\" required formControlName=\\\"minimum_donation\\\"\\n              [placeholder]=\\\"'CONTENT.min-SDP2'|translate\\\" currencyMask\\n              [options]=\\\"{prefix: 'Rp', allowZero: true, align: 'left', precision: 0 }\\\">\\n            <label\\n              *ngIf=\\\"fsp.minimum_donation.errors && fsp.minimum_donation.errors.required && (fsp.minimum_donation.touched || fsp.minimum_donation.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.min-SDP2' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-2\\\">\\n            <h6 class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.active-status'| translate}}</h6> <br>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status1\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\"\\n                formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label \\\" for=\\\"active_status1\\\">{{ 'ROOT.yes' | translate }}</label>\\n            </div>\\n            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n              <input type=\\\"radio\\\" id=\\\"active_status2\\\" name=\\\"active_status\\\" class=\\\"custom-control-input\\\" value=\\\"0\\\"\\n                [checked]=\\\"true\\\" formControlName=\\\"active_status\\\" required>\\n              <label class=\\\"custom-control-label\\\" for=\\\"active_status2\\\">{{ 'ROOT.no' | translate }}</label>\\n            </div>\\n            <label\\n              *ngIf=\\\"fsp.active_status.errors && fsp.active_status.errors.required && (fsp.active_status.touched || fsp.active_status.dirty)\\\"\\n              class=\\\"error text-danger small form-text\\\">\\n              {{ 'CONTENT.please-input' | translate }}{{ 'CONTENT.active-status' | translate }}\\n            </label>\\n          </div>\\n          <div class=\\\"form-group mb-0 mt-4 text-right\\\">\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"createDetailStudyProgramMappingData1()\\\"\\n                [disabled]=\\\"studyProgramForm.invalid || !studyProgram || !isTechnic\\\">\\n                <i class=\\\"ti-save\\\"></i> {{ 'ROOT.save' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\\n<app-ui-modal #studyProgramMappingData [containerClick]=\\\"false\\\" [dialogClass]=\\\"'modal-xl'\\\" [hideFooter]=\\\"true\\\"\\n  [loading]=\\\"loadTableMapping\\\">\\n  <div class=\\\"app-modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'ROOT.add' | translate }} {{ 'CONTENT.study-program-data' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"close basic-close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\n      (click)=\\\"closeStudyProgramMapping()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n  </div>\\n  <div class=\\\"app-modal-body\\\">\\n    <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup]=\\\"mappingStudyProgramForm\\\">\\n      <div class=\\\"table-responsive pb-6\\\">\\n        <table datatable class=\\\"table table-striped table-hover\\\" [dtOptions]=\\\"dtOptions[7]\\\" [dtTrigger]=\\\"dtTrigger7\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\" style=\\\"padding-left: 10px\\\">{{ 'CONTENT.no' | translate}}</th>\\n              <th scope=\\\"col\\\">{{ 'CONTENT.faculty-name' | translate}}</th>\\n              <th scope=\\\"col\\\">{{ 'CONTENT.study-program-name' | translate}}</th>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.is-technic' | translate}}</th>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.quota' | translate}}</th>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.min-SDP2' | translate}}</th>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.active-status' | translate}}</th>\\n              <th scope=\\\"col\\\" class=\\\"center-table\\\">{{ 'CONTENT.action' | translate}}</th>\\n            </tr>\\n          </thead>\\n          <tbody *ngIf=\\\"tableStudyProgramMapping?.length != 0\\\">\\n            <tr *ngFor=\\\"let data of tableStudyProgramMapping; let i = index;\\\">\\n              <th scope=\\\"row\\\" style=\\\"padding-left: 10px\\\">{{ i+1 }}</th>\\n              <td>{{ data.faculty_name }}</td>\\n              <td>{{ data.study_program_name }}</td>\\n              <td class=\\\"center-table\\\">\\n                <ng-select [placeholder]=\\\"'CONTENT.is-technic'|translate\\\" [ngClass]=\\\"'custom bg-white'\\\"\\n                  formControlName=\\\"is_technic_mapp\\\" id=\\\"select{{data.id}}\\\" (selected)=\\\"addTechnic($event)\\\"\\n                  [options]=\\\"listTechnic\\\"></ng-select>\\n              </td>\\n              <td class=\\\"center-table\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"quota\\\"\\n                  [placeholder]=\\\"'CONTENT.quota'|translate\\\">\\n              </td>\\n              <td class=\\\"center-table\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"sdp\\\"\\n                  [placeholder]=\\\"'CONTENT.min-SDP2'|translate\\\" currencyMask\\n                  [options]=\\\"{prefix: 'Rp', allowZero: true, align: 'left', precision: 0 }\\\">\\n              </td>\\n              <td class=\\\"center-table\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"switch switch-success d-inline m-r-10\\\">\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"active_status\\\" id=\\\"switch-s-1{{data.id}}\\\" [checked]=\\\"checks\\\"\\n                      (change)=\\\"changeSwitch(data.id, $event)\\\">\\n                    <label for=\\\"switch-s-1{{data.id}}\\\" class=\\\"cr\\\">\\n                    </label>\\n                  </div>\\n                  <!-- <label for=\\\"switch-s-1{{data.id}}\\\" *ngIf=\\\"checksTechnic2\\\">Teknik</label> -->\\n                  <!-- <label for=\\\"switch-s-1{{data.id}}\\\" *ngIf=\\\"!checksTechnic2\\\">Non Teknik</label> -->\\n                </div>\\n                <!-- <div class=\\\"custom-control custom-switch text-center\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"activeStatus{{ data.id}}\\\" [value]=\\\"data.id\\\"\\n                    formControlName=\\\"active_status\\\" [checked]=\\\"checks\\\" (change)=\\\"changeSwitch(data.id, $event)\\\">\\n                    <label class=\\\"custom-control-label\\\" for=\\\"activeStatus{{ data.id }}\\\"></label>\\n                  </div> -->\\n              </td>\\n              <td class=\\\"center-table\\\">\\n                <button id=\\\"{{ data.id}}\\\" class=\\\"btn btn-primary btn-sm btn-round has-ripple\\\" [placement]=\\\"'top'\\\"\\n                  [disabled]=\\\"mappingStudyProgramForm.invalid\\\" ngbTooltip=\\\"{{'ROOT.edit' | translate}}\\\"\\n                  (click)=\\\"createMappingAllStudyProgram(data);\\\">\\n                  <i class=\\\"icofont icofont-ui-save\\\"></i> <span class=\\\"d-sm-none\\\"></span> {{'ROOT.save' | translate}}\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"app-modal-footer\\\"></div>\\n</app-ui-modal>\\n\"","import { NgModule } from '@angular/core';\nimport { SelectionDataComponent } from './selection-data.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectionDataComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SelectionDataRoutingModule { }\n","export default \"td {\\n  table-layout: fixed;\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n}\\n\\nth {\\n  table-layout: fixed;\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n}\\n\\n.center-table {\\n  text-align: center;\\n}\\n\\n.width-mapping-table {\\n  max-width: 200px;\\n}\\n\\n.width-mapping-table-quota {\\n  max-width: 100px;\\n}\\n\\n.index-up {\\n  z-index: 2 !important;\\n}\\n\\n.required {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZXYvRG9jdW1lbnRzL2FkbS10cmlzYWt0aS9zcmMvYXBwL3RoZW1lL2FkbS1tcy1zZWxlY3Rpb24tZGF0YS9zZWxlY3Rpb24tZGF0YS9zZWxlY3Rpb24tZGF0YS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGhlbWUvYWRtLW1zLXNlbGVjdGlvbi1kYXRhL3NlbGVjdGlvbi1kYXRhL3NlbGVjdGlvbi1kYXRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLHFCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxtQkFBQTtFQUNBLHFCQUFBO0VBQ0EscUJBQUE7QUNFRjs7QURBQTtFQUNFLGtCQUFBO0FDR0Y7O0FEREE7RUFDRSxnQkFBQTtBQ0lGOztBREZBO0VBQ0UsZ0JBQUE7QUNLRjs7QURIQTtFQUNFLHFCQUFBO0FDTUY7O0FESkE7RUFDRSxVQUFBO0FDT0YiLCJmaWxlIjoic3JjL2FwcC90aGVtZS9hZG0tbXMtc2VsZWN0aW9uLWRhdGEvc2VsZWN0aW9uLWRhdGEvc2VsZWN0aW9uLWRhdGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZHtcbiAgdGFibGUtbGF5b3V0OmZpeGVkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbn1cbnRoe1xuICB0YWJsZS1sYXlvdXQ6Zml4ZWQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuLmNlbnRlci10YWJsZXtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuIH1cbi53aWR0aC1tYXBwaW5nLXRhYmxlIHtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbn1cbi53aWR0aC1tYXBwaW5nLXRhYmxlLXF1b3RhIHtcbiAgbWF4LXdpZHRoOiAxMDBweDtcbn1cbi5pbmRleC11cCB7XG4gIHotaW5kZXg6IDIgIWltcG9ydGFudDtcbn1cbi5yZXF1aXJlZCB7XG4gIGNvbG9yOiByZWQ7XG59XG4iLCJ0ZCB7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuXG50aCB7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxuXG4uY2VudGVyLXRhYmxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ud2lkdGgtbWFwcGluZy10YWJsZSB7XG4gIG1heC13aWR0aDogMjAwcHg7XG59XG5cbi53aWR0aC1tYXBwaW5nLXRhYmxlLXF1b3RhIHtcbiAgbWF4LXdpZHRoOiAxMDBweDtcbn1cblxuLmluZGV4LXVwIHtcbiAgei1pbmRleDogMiAhaW1wb3J0YW50O1xufVxuXG4ucmVxdWlyZWQge1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ViewChildren, QueryList, OnDestroy } from '@angular/core';\nimport { AdminManagementService } from 'src/app/_services/admin-management.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BroadcasterService } from 'src/app/_services/broadcaster.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CurrencyPipe, formatDate, Location } from '@angular/common';\nimport Swal from 'sweetalert2';\nimport { forEach, identity } from 'underscore';\nimport { data } from 'jquery';\nimport { WizardComponent } from 'ng2-archwizard/dist';\nimport * as moment from 'moment/moment';\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-selection-data',\n  templateUrl: './selection-data.component.html',\n  styleUrls: ['./selection-data.component.scss']\n})\nexport class SelectionDataComponent implements OnInit {\n  @ViewChild(WizardComponent, { static: true }) public wizard: WizardComponent;\n  @ViewChild('examLocModal', { static: true }) public examLocModal: any;\n  @ViewChild('cbtModals', { static: true }) public cbtModals: any;\n  @ViewChild('cbtDetailsModals', { static: true }) public cbtDetailsModals: any;\n  @ViewChild('cbtSessionModals', { static: true }) public cbtSessionModals: any;\n  @ViewChild('psikotestModals', { static: true }) public psikotestModals: any;\n  @ViewChild('interviewModals', { static: true }) public interviewModals: any;\n  @ViewChild('tpaModals', { static: true }) public tpaModals: any;\n  @ViewChild('examTypeModals', { static: true }) public examTypeModals: any;\n  @ViewChild('examTimeModal', { static: true }) public examTimeModal: any;\n  @ViewChild('deleteExamTimeModal', { static: true }) public deleteExamTimeModal: any;\n  @ViewChild('regStepModal', { static: true }) public regStepModal: any;\n  @ViewChild('documentRequirementsModal', { static: true }) public documentRequirementsModal: any;\n  @ViewChild('pinPriceDataModal', { static: true }) public pinPriceDataModal: any;\n  @ViewChild('studyProgramDataModal', { static: true }) public studyProgramDataModal: any;\n  @ViewChild('studyProgramMappingData', { static: true }) public studyProgramMappingData: any;\n  public pageType: string;\n  public pageTypeInit: string;\n  public id: string;\n  public activestatusid: string;\n  public resetWizard: boolean;\n  public checks: boolean;\n  public checksTechnic: boolean;\n  public checksTechnic2: boolean;\n  public formDetailStep1: FormGroup;\n  public examLocMappingDataForm: FormGroup;\n  public examTimeMappingDataForm: FormGroup;\n  public mappingStudyProgramForm: FormGroup;\n  public registrationStepForm: FormGroup;\n  public examCbtDataForm: FormGroup;\n  public examCbtDetailsDataForm: FormGroup;\n  public examTypeMappingDataForm: FormGroup;\n  public examInterviewDataForm: FormGroup;\n  public examPsikotestDataForm: FormGroup;\n  public examTPADataForm: FormGroup;\n  public documentRequirementsForm: FormGroup;\n  public pinPriceForm: FormGroup;\n  public studyProgramForm: FormGroup;\n  public loading: boolean;\n  public loadingCard: boolean;\n  public loadFilter: boolean;\n  public listSelectionProgram: any;\n  public selectionProgram: string;\n  public listCity: any;\n  public city: string;\n  public listExamLocation: any;\n  public examLocation: string;\n  public locationTime: string;\n  public registrationStep: string;\n  public listRegistrationStep: any;\n  public documentType: string;\n  public listDocumentType: any;\n  public studyProgram: string;\n  public listStudyProgram: any;\n  public faculty: string;\n  public listFaculty: any;\n  public examType: string;\n  public categoryId: string;\n  public listExamType: any;\n  public listCategoryId: Array<any>;\n  public listSettingUjianId: Array<any>;\n  public listMedical: Array<any>;\n  public isLocHidden: boolean;\n  public hiddenTime: boolean;\n  public idSelectionPath: string;\n  public toggleAll: boolean;\n  public selectedData: Array<any>;\n  public checkedData: Array<any>;\n  public checkedTrue: boolean;\n  public textValueQuota: string;\n  public textValueStatus: string;\n  public textValueSdp: string;\n  public textValueSdpArray: any;\n  public sdptamp: any;\n  public textValueSdpID: any;\n  public textListQuota: Array<any>;\n  public checked: boolean;\n  public idProdi: string;\n  public arrayMapping: Array<any>;\n  public listActiveStatusFilters: Array<any>;\n  public type = 'default';\n  public formType: any;\n  public formTypeCBT: any;\n  public formTypeselectionstep: any;\n  public activeStatusStep3: string;\n  public activeStatusStep4: string;\n  public activeStatusStep5: string;\n  public loc: any;\n  public loadingModals: boolean;\n  public examLocationSelectionAddress: any;\n  @ViewChildren(DataTableDirective)\n  dtElements: QueryList<DataTableDirective>;\n  dtOptions: any = [];\n  public dtTrigger = new Subject();\n  public dtTrigger1 = new Subject();\n  public dtTrigger2 = new Subject();\n  public dtTrigger3 = new Subject();\n  public dtTrigger4 = new Subject();\n  public dtTrigger5 = new Subject();\n  public dtTrigger6 = new Subject();\n  public dtTrigger7 = new Subject();\n  public tableExamPsikotest: Array<any>;\n  public tableExamInterview: Array<any>;\n  public tableExamCBT: Array<any>;\n  public tableExamTPA: Array<any>;\n  public tableExamCBTDetails: Array<any>;\n  public tableSelectionPath: Array<any>;\n  public tableDocumentReq: Array<any>;\n  public tablePinPrice: Array<any>;\n  public tableStudyProgram: Array<any>;\n  public tableStudyProgramMapping: Array<any>;\n  public loadtableExamLocData: boolean;\n  public loadtableExamTimeData: boolean;\n  public loadtableSelectionStepData: boolean;\n  public loadtableSelectionDocumentData: boolean;\n  public loadtableMappStudyProgramData: boolean;\n  public loadTableMappingAllStudyProgramData: boolean;\n  public isHiddenLoc: boolean;\n  public loadtablePINPriceData: boolean;\n  public loadTableMapping: boolean;\n  public examLocationSelectionId: any;\n  public statusChecked: string;\n  public isTechnicChecked: string;\n  public examLocId: any;\n  public examTimeId: any;\n  public selectionStepId: any;\n  public documentSelectionId: any;\n  public pinPriceId: any;\n  public studyProgramId: any;\n  public selectionPathId: any;\n  public locationExamId: any;\n  public examTimeStartDate: any;\n  public examTimeEndDate: any;\n  public examDate: any;\n  public hideCheckBox: boolean;\n  public selectedProdiMap: any;\n  public selectedItems: any;\n  public mappingAllId: string;\n  public IDx: string;\n  public statusfilter: string;\n  public isMedical: string;\n  public activeStatusBool: boolean;\n  public isDataPinPriceActive: boolean;\n  public loadtableExamTPA: boolean;\n  public loadtableExamInterview: boolean;\n  public loadtableExamPsikotest: boolean;\n  public loadtableExamCBT: boolean;\n  public formattedAmount: any;\n  public session: string;\n  public isTechnic: string;\n  public isTechnicMapp: string;\n  public listSession: Array<any>;\n  public listTechnic: Array<any>;\n  public isTechnicMapping: any;\n  public studyProgramSelected: string;\n  public examId: any;\n  public loadtableExamCBTDetails: boolean;\n  public isPsikotest: boolean;\n  public isInterview: boolean;\n  public isTPA: boolean;\n  public isReport: boolean;\n  public mappingTechnic: Array<any>;\n  public mappingNonTechnic: Array<any>;\n  public mappingUtbkScience: Array<any>;\n  public mappingUtbkNonScience: Array<any>;\n  public mappingTechnicId: any;\n  public mappingNonTechnicId: any;\n  public cbtId: any;\n  public isTranscriptDocument: boolean;\n  public disabledGotoMapingProdi: boolean;\n  public isUtbkDocument: boolean;\n  public isBackStep: boolean;\n  public isApplyFilter: boolean;\n  public typeCbtData: string;\n  public isRaportCategory: boolean;\n  public categoryMoodleId: number;\n  public moodleCourseId: number;\n  public moodleSectionSession1Id: number;\n  public moodleSectionSession2Id: number;\n  public moodleSectionSession3Id: number;\n  public selectionPathName: string;\n  public enableMoodleGroup: boolean;\n  public sectionArrays: Array<any>;\n  public isSessionOne: boolean;\n  public isSessionTwo: boolean;\n  public isSessionThree: boolean;\n  public loadingSection: boolean;\n  public dateCbt: string;\n  public haveNoDataCbt: boolean;\n  public moodleGroupArrays: Array<any>;\n  public haveDataSessionOneTwoThree: boolean;\n  public haveMoodleGroup: boolean;\n  // LANG\n  public confirmation: string;\n  public sure: string;\n  public yes: string;\n  public no: string;\n  public successDel: string;\n  public failedDel: string;\n  public warning: string;\n  public mappingGrupText: string;\n  constructor(\n    public translate: TranslateService,\n    private broadcasterService: BroadcasterService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private chartService: AdminManagementService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    translate.setDefaultLang(localStorage.getItem('lang'));\n    this.translate.get('ROOT.no').subscribe((l) => { this.no = l; });\n    this.translate.get('ROOT.yes').subscribe((l) => { this.yes = l; });\n    this.translate.get('ROOT.delete_failed').subscribe((l) => { this.failedDel = l; });\n    this.translate.get('ROOT.delete_confirmation').subscribe((l) => { this.sure = l; });\n    this.translate.get('ROOT.confirmation').subscribe((l) => { this.confirmation = l; });\n    this.translate.get('ROOT.delete_success').subscribe((l) => { this.successDel = l; });\n    this.translate.get('CONTENT.warning').subscribe((l) => { this.warning = l; });\n    this.translate.get('CONTENT.mapping-group-text').subscribe((l) => { this.mappingGrupText = l; });\n    broadcasterService.changeLangBroadcast$.subscribe(res => {\n      translate.setDefaultLang(res.lang);\n      this.translate.get('ROOT.no').subscribe((l) => { this.no = l; });\n      this.translate.get('ROOT.yes').subscribe((l) => { this.yes = l; });\n      this.translate.get('ROOT.delete_failed').subscribe((l) => { this.failedDel = l; });\n      this.translate.get('ROOT.delete_confirmation').subscribe((l) => { this.sure = l; });\n      this.translate.get('ROOT.confirmation').subscribe((l) => { this.confirmation = l; });\n      this.translate.get('ROOT.delete_success').subscribe((l) => { this.successDel = l; });\n      this.translate.get('CONTENT.warning').subscribe((l) => { this.warning = l; });\n      this.translate.get('CONTENT.mapping-group-text').subscribe((l) => { this.mappingGrupText = l; });\n    });\n    this.formDetailStep1 = fb.group({\n      selection_path_id: new FormControl(''),\n      name: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n      category_id: new FormControl(''),\n      // exam_type: new FormControl(''),\n      active_status: new FormControl('', [Validators.required])\n    });\n    this.examLocMappingDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_location_id: new FormControl(''),\n    });\n    this.examCbtDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_type_id: new FormControl(''),\n      exam_type: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(0), Validators.maxLength(5), Validators.pattern('^[0-9]*$')]),\n    });\n    this.examCbtDetailsDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      session_start_time: new FormControl('', [Validators.required]),\n      session_end_time: new FormControl('', [Validators.required]),\n      session: new FormControl(''),\n    });\n    this.examTypeMappingDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_type: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      start_date: new FormControl('', [Validators.required]),\n      end_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n    });\n    this.examInterviewDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_type: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      start_date: new FormControl('', [Validators.required]),\n      end_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n    });\n    this.examPsikotestDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_type: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      start_date: new FormControl('', [Validators.required]),\n      end_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n    });\n    this.examTPADataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      exam_type: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      start_date: new FormControl('', [Validators.required]),\n      end_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n    });\n    this.examTimeMappingDataForm = fb.group({\n      selection_path_id: new FormControl(''),\n      session: new FormControl(''),\n      exam_date: new FormControl('', [Validators.required]),\n      start_date: new FormControl('', [Validators.required]),\n      end_date: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n    });\n    this.registrationStepForm = fb.group({\n      selection_path_id: new FormControl(''),\n      registration_step_id: new FormControl(''),\n      ordering: new FormControl('', [Validators.required, Validators.min(1), Validators.maxLength(32767)]),\n      active_status: new FormControl('', [Validators.required]),\n    });\n    this.documentRequirementsForm = fb.group({\n      selection_path_id: new FormControl(''),\n      document_type_id: new FormControl(''),\n      active_status: new FormControl('', [Validators.required]),\n      mandatory_doc: new FormControl('', [Validators.required]),\n      math: new FormControl(''),\n      eng: new FormControl(''),\n      bahasa: new FormControl(''),\n      math2: new FormControl(''),\n      eng2: new FormControl(''),\n      bahasa2: new FormControl(''),\n      physics: new FormControl(''),\n      biology: new FormControl(''),\n      chemicals: new FormControl(''),\n      geography: new FormControl(''),\n      sosiology: new FormControl(''),\n      economy: new FormControl(''),\n      sejarah: new FormControl(''),\n      is_technic: new FormControl(''),\n      is_input_nilai: new FormControl(''),\n    });\n    this.mappingStudyProgramForm = fb.group({\n      selection_path_id: new FormControl(''),\n      is_technic_mapp: new FormControl(''),\n      quota: new FormControl(''),\n      sdp: new FormControl('', Validators.required),\n      study_program: new FormControl(''),\n      active_status: new FormControl(''),\n    });\n    this.listSession = [\n      {\n        value: '1',\n        label: 'Sesi 1'\n      },\n      {\n        value: '2',\n        label: 'Sesi 2'\n      },\n      {\n        value: '3',\n        label: 'Sesi 3'\n      }\n    ];\n    this.listTechnic = [\n      {\n        value: '1',\n        label: 'Teknik'\n      },\n      {\n        value: '2',\n        label: 'Non Teknik'\n      },\n    ];\n    this.listCategoryId = [\n      {\n        value: '1',\n        label: 'Rapor'\n      },\n      {\n        value: '2',\n        label: 'CBT'\n      },\n      {\n        value: '3',\n        label: 'Beasiswa'\n      },\n      {\n        value: '4',\n        label: 'Portofolio'\n      },\n      {\n        value: '5',\n        label: 'Transfer'\n      },\n      {\n        value: '6',\n        label: 'Perolehan Credit'\n      },\n      {\n        value: '7',\n        label: 'UTBK'\n      }\n    ];\n    this.listSettingUjianId = [\n      {\n        value: '1',\n        label: 'Pengaturan jadwal ujian CBT'\n      },\n      {\n        value: '2',\n        label: 'Pengaturan jadwal ujian Psikotes'\n      },\n      {\n        value: '3',\n        label: 'Pengaturan jadwal ujian wawancara'\n      },\n      {\n        value: '4',\n        label: 'Pengaturan jadwal ujian TPA'\n      },\n      {\n        value: '5',\n        label: 'Transfer'\n      },\n      {\n        value: '6',\n        label: 'Perolehan Credit'\n      },\n      {\n        value: '7',\n        label: 'UTBK'\n      }\n    ];\n    this.listMedical = [\n      {\n        value: '0',\n        label: 'Non Medis'\n      },\n      {\n        value: '1',\n        label: 'Medis'\n      }\n    ];\n    this.pageType = '';\n    this.pageTypeInit = '';\n    this.resetWizard = false;\n    this.loading = false;\n    this.loadingCard = false;\n    this.loadFilter = false;\n    this.loadtableExamTimeData = false;\n    this.loadtableSelectionStepData = false;\n    this.loadtableSelectionDocumentData = false;\n    this.loadtableMappStudyProgramData = false;\n    this.loadTableMappingAllStudyProgramData = false;\n    this.loadtablePINPriceData = false;\n    this.loadTableMapping = false;\n    this.checks = true;\n    this.checksTechnic = false;\n    this.checksTechnic2 = false;\n    this.isDataPinPriceActive = false;\n    this.isHiddenLoc = false;\n    this.isPsikotest = false;\n    this.isInterview = false;\n    this.isTPA = false;\n    this.isReport = false;\n    this.isTranscriptDocument = false;\n    this.isUtbkDocument = false;\n    this.isTranscriptDocument = false;\n    this.isReport = false;\n    this.isBackStep = false;\n    this.isApplyFilter = false;\n    this.haveDataSessionOneTwoThree = false;\n    this.haveMoodleGroup = false;\n    this.tableExamCBT = [];\n    this.tableExamPsikotest = [];\n    this.tableExamInterview = [];\n    // this.tableExamCBTDetails = [];\n    this.tableDocumentReq = [];\n    this.tableExamTPA = [];\n    this.tablePinPrice = [];\n    this.tableStudyProgram = [];\n    this.mappingTechnic = [\n      {\n        math: false,\n        physics: false,\n        biology: false,\n        chemical: false,\n        bahasa: false,\n        english: false,\n        economy: false,\n        geography: false,\n        sociological: false,\n        historical: false\n      }\n    ];\n    this.mappingNonTechnic = [\n      {\n        math: false,\n        physics: false,\n        biology: false,\n        chemical: false,\n        bahasa: false,\n        english: false,\n        economy: false,\n        geography: false,\n        sociological: false,\n        historical: false\n      }\n    ];\n    this.mappingUtbkScience = [\n      {\n        math: false,\n        physics: false,\n        biology: false,\n        chemical: false,\n        economy: false,\n        geography: false,\n        sociological: false,\n        historical: false\n      }\n    ];\n    this.mappingUtbkNonScience = [\n      {\n        math: false,\n        physics: false,\n        biology: false,\n        chemical: false,\n        economy: false,\n        geography: false,\n        sociological: false,\n        historical: false\n      }\n    ];\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.activestatusid = this.route.snapshot.paramMap.get('activestatusid');\n    this.listActiveStatusFilters = [\n      {\n        label: 'ALL',\n        value: '',\n      },\n      {\n        label: 'ACTIVE',\n        value: '1',\n      },\n      {\n        label: 'NONACTIVE',\n        value: '0',\n      }\n    ];\n  }\n\n  get fd() {\n    return this.formDetailStep1.controls;\n  }\n  get fcbt() {\n    return this.examCbtDataForm.controls;\n  }\n  get fcbtdet() {\n    return this.examCbtDetailsDataForm.controls;\n  }\n  get fps() {\n    return this.examPsikotestDataForm.controls;\n  }\n  get fint() {\n    return this.examInterviewDataForm.controls;\n  }\n  get ftpa() {\n    return this.examTPADataForm.controls;\n  }\n  get fet() {\n    return this.examTimeMappingDataForm.controls;\n  }\n  get frs() {\n    return this.registrationStepForm.controls;\n  }\n  get fdr() {\n    return this.documentRequirementsForm.controls;\n  }\n  get fpp() {\n    return this.pinPriceForm.controls;\n  }\n  get fsp() {\n    return this.studyProgramForm.controls;\n  }\n\n  ngOnInit() {\n    this.pageType = this.id ? 'edit' : 'create';\n    this.pageTypeInit = this.id ? 'edit' : 'create';\n    this.pinPriceForm = this.fb.group({\n      selection_path_id: new FormControl(''),\n      price: new FormControl('', [Validators.required]),\n      maks_study_program: new FormControl('', Validators.compose([Validators.required, Validators.min(1), Validators.max(5), Validators.maxLength(1)])),\n      active_status: new FormControl('', [Validators.required]),\n      is_medical: new FormControl('', [Validators.required])\n    });\n    this.studyProgramForm = this.fb.group({\n      selection_path_id: new FormControl(''),\n      program_study_id: new FormControl('', [Validators.required]),\n      is_technic: new FormControl('', [Validators.required]),\n      minimum_donation: new FormControl('', [Validators.required]),\n      quota: new FormControl('', [Validators.required]),\n      active_status: new FormControl('', [Validators.required]),\n    });\n    this.dtOptions[0] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[1] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[2] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[3] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[4] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[5] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[6] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[7] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[8] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    this.dtOptions[9] = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      destroy: true,\n      language: {\n        info: 'Show _START_ to _END_ from _TOTAL_ data',\n        zeroRecords: 'Data yang anda cari tidak ditemukan!',\n        emptyTable: 'Data tidak ditemukan!',\n        lengthMenu: 'Show _MENU_ data',\n        processing: 'Loading . . . . .',\n        infoFiltered: '',\n        infoEmpty: ''\n      },\n      initComplete: () => { }\n    };\n    // this.dtTrigger.next();\n    // this.dtTrigger1.next();\n    // this.dtTrigger2.next();\n    // this.dtTrigger3.next();\n    // this.dtTrigger4.next();\n    // this.dtTrigger5.next();\n    // this.dtTrigger6.next();\n    // this.dtTrigger7.next();\n    // this.dtTrigger8.next();\n    // this.dtTrigger9.next();\n    // filtering list dropdown\n    this.loadRegistrationStepData();\n    this.loadDocumentTypeData();\n    this.loadFacultyData();\n    // this.loadExamTypeDataFilter();\n    this.pageType === 'edit' && this.loadDetailSelectionPath();\n  }\n\n  addTechnic(val) {\n    this.isTechnicMapp = val.value;\n  }\n\n  onDeselected(val) {\n    switch (val) {\n      case 'activeStatusStep3':\n        this.activeStatusStep3 = '1';\n    }\n  }\n\n  loadCityData() { // Pilihan Kota\n    this.loadFilter = true;\n    this.chartService.getCityData('').subscribe((filterArray) => {\n      const dataCity = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id,\n          label: filterArray[i].city\n        };\n        dataCity.push(x);\n        this.listCity = dataCity;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadExamDetailData() { // Pilihan Lokasi Ujian\n    this.loadFilter = true;\n    const data = {\n      filter: ''\n    };\n    this.chartService.getExamLocationData(data).subscribe((filterArray) => {\n      const dataExamLocation = [];\n      let x: any;\n      for (let i = 0; i < filterArray.data.length; i++) {\n        x = {\n          value: filterArray.data[i].id,\n          label: filterArray.data[i].location,\n        };\n        dataExamLocation.push(x);\n        this.listExamLocation = dataExamLocation;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadRegistrationStepData() { // Pilihan Registration Step\n    this.loadFilter = true;\n    this.chartService.getRegistrationStepData().subscribe((filterArray) => {\n      const dataRegistrationStep = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id.toString(),\n          label: filterArray[i].step\n        };\n        dataRegistrationStep.push(x);\n        this.listRegistrationStep = dataRegistrationStep;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadDocumentTypeData() { // Pilihan Tipe-tipe Dokumen\n    this.loadFilter = true;\n    const data = {\n      nama_dokumen: ''\n    };\n    this.chartService.getDocumentTypeData(data).subscribe((filterArray) => {\n      const dataDocumentType = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id.toString(),\n          label: filterArray[i].name,\n        };\n        dataDocumentType.push(x);\n        this.listDocumentType = dataDocumentType;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadStudyProgramData() { // Pilihan Registration Step\n    this.loadFilter = true;\n    this.chartService.getProgramStudyDataWithParams(`?selection_path_id=${this.id}&show_all=1`).subscribe((filterArray) => {\n      const dataStudyProgram = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id.toString(),\n          label: filterArray[i].study_program_name\n        };\n        dataStudyProgram.push(x);\n        this.listStudyProgram = dataStudyProgram;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadFacultyData() { // Pilihan Registration Step\n    this.loadFilter = true;\n    this.chartService.getFacultyData().subscribe((filterArray) => {\n      const dataFaculty = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id.toString(),\n          label: filterArray[i].faculty_name\n        };\n        dataFaculty.push(x);\n        this.listFaculty = dataFaculty;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadExamDetailAdressData() { // Pilihan Lokasi Ujian\n    this.loadFilter = true;\n    const data = {\n      filter: ''\n    };\n    this.chartService.getExamLocationData(data).subscribe((result) => {\n      this.examLocationSelectionAddress = result.address;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  loadExamTypeDataFilter() { // Pilihan Selection Program\n    this.loadFilter = true;\n    this.chartService.getExamTypeData().subscribe((filterArray) => {\n      const dataExamType = [];\n      let x: any;\n      for (let i = 0; i < filterArray.length; i++) {\n        x = {\n          value: filterArray[i].id.toString(),\n          label: filterArray[i].name\n        };\n        dataExamType.push(x);\n        this.listExamType = dataExamType;\n      }\n      this.loadFilter = false;\n    }, err => {\n      this.loadError();\n      this.loadFilter = false;\n    });\n  }\n\n  // loadCategoryIdDataFilter() { // Pilihan CategoryId\n  //   this.loadFilter = true;\n  //   this.chartService.getCategoryIdData().subscribe((filterArray) => {\n  //     const dataCategoryId = [];\n  //     let x: any;\n  //     for (let i = 0; i < filterArray.length; i++) {\n  //       x = {\n  //         value: filterArray[i].id.toString(),\n  //         label: filterArray[i].name\n  //       };\n  //       dataCategoryId.push(x);\n  //       this.listCategoryId = dataCategoryId;\n  //     }\n  //     this.loadFilter = false;\n  //   }, err => {\n  //     this.loadError();\n  //     this.loadFilter = false;\n  //   });\n  // }\n\n  loadError() {\n    this.broadcasterService.notifBroadcast(true, {\n      title: 'Gagal',\n      msg: 'Terjadi kesalahan sistem',\n      timeout: 5000,\n      theme: 'default',\n      position: 'top-right',\n      type: 'error'\n    });\n  }\n\n  loadSuccess() {\n    this.broadcasterService.notifBroadcast(true, {\n      title: 'Success',\n      msg: 'Data yang anda masukkan sudah tersimpan',\n      timeout: 5000,\n      theme: 'default',\n      position: 'top-right',\n      type: 'success'\n    });\n  }\n\n  changeSelectionTestType() {\n    if (this.examType !== '') {\n      if (this.examType === '1') {\n        this.isLocHidden = false;\n        this.hiddenTime = false;\n      } else if (this.examType === '2') {\n        this.isLocHidden = true;\n        this.hiddenTime = false;\n      } else {\n        this.isLocHidden = true;\n        this.hiddenTime = true;\n      }\n    } else {\n      this.isLocHidden = true;\n    }\n  }\n\n  examStatusChanged(event) {\n    const value = event.value;\n    if (value == '1') {\n      this.isRaportCategory = true;\n    } else {\n      this.isRaportCategory = false;\n    }\n  }\n\n  // for Edit mode step 1\n  loadDetailSelectionPath() {\n    this.loadingCard = true;\n    if (this.id == '0') {\n      this.pageType = 'input';\n      this.loadingCard = false;\n    }\n    else if (this.id != '0') {\n      this.pageType = 'edit';\n      this.loadStudyProgramData();\n      this.chartService.getSelectionPathAdmin(`?selection_path_id=${this.id}&active_status=${this.activestatusid === '1' ? true : false}`).subscribe(result => {\n        if (result) {\n          this.loadingCard = false;\n          const {\n            selection_path_id,\n            category_id,\n            name,\n            exam_status_id,\n            active_status,\n            active_status_name,\n          } = result[0];\n          this.formDetailStep1.patchValue({ name: name });\n          this.selectionPathName = name;\n          if (active_status === '1') {\n            this.formDetailStep1.patchValue({ active_status: '1' });\n          } else if (active_status === '0') {\n            this.formDetailStep1.patchValue({ active_status: '0' });\n          } else {\n            this.formDetailStep1.patchValue({ active_status: '0' });\n          }\n          this.examType = exam_status_id && exam_status_id.toString();\n          if (exam_status_id == 1) {\n            this.isRaportCategory = true;\n          } else {\n            this.isRaportCategory = false;\n          }\n        }\n        this.loadingCard = false;\n      }, err => {\n        this.broadcasterService.notifBroadcast(true, {\n          title: 'Gagal',\n          msg: err.error.message,\n          timeout: 5000,\n          theme: 'default',\n          position: 'top-right',\n          type: 'error'\n        });\n        this.loadingCard = false;\n      });\n    }\n  }\n\n  // edit step 2 location\n  openFormExamLocData(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.loading = false;\n      this.loadExamDetailData();\n      this.id = data.selection_path_id;\n      this.examLocMappingDataForm.patchValue({ selection_path_id: this.id });\n      this.locationTime = data.location_exam_id && data.location_exam_id.toString();\n    } else {\n      this.loadExamDetailData();\n      this.examLocModal.show();\n      this.examLocMappingDataForm.reset();\n    }\n    this.examLocModal.show();\n  }\n\n  openFormCBTData(data, type) {\n    this.formType = type;\n    if (type === 'view') {\n      this.examId = data.id;\n      this.loading = false;\n      this.id = data.selection_path_id;\n      this.cbtModals.show();\n      this.examCbtDataForm.patchValue({ exam_type: data.exam_type });\n      this.examCbtDataForm.patchValue({ exam_date: data.exam_date });\n      this.examCbtDataForm.patchValue({ start_date: data.exam_start_date });\n      this.examCbtDataForm.patchValue({ quota: data.quota });\n    } else {\n      this.examCbtDataForm.patchValue({ exam_type: 'CBT' });\n      this.cbtModals.show();\n      this.loading = false;\n    }\n  }\n\n  closeModalCBT() {\n    this.examCbtDataForm.reset();\n    this.cbtModals.hide();\n  }\n\n  changeDateCbt(evnt) {\n    this.loading = true;\n    const x = new Date(evnt.target.value);\n    const dateMonth = x.getMonth() + 1;\n    const dateYear = x.getFullYear();\n    const dateYearMonth = dateYear + ' ' + dateMonth;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1&exam_type_id=1`).subscribe(response => {\n      if (response.data !== 0) {\n        const getYearMonth = _.findWhere(response.data, { exam_month_year: dateYearMonth });\n        if (getYearMonth !== undefined) {\n          this.haveNoDataCbt = true;\n          Swal.fire({\n            position: 'center',\n            type: 'warning',\n            title: 'Perhatian!',\n            text: 'Anda telah memiliki data CBT di bulan dan tahun yang sama. Silakan menambahkan data di bulan selanjutnya atau menghapus data yang sudah ada!',\n            showConfirmButton: true,\n          });\n          this.examCbtDataForm.controls.exam_date.reset();\n          this.loading = false;\n        } else {\n          this.haveNoDataCbt = false\n          this.loading = false;\n        }\n      }\n    });\n  }\n\n  openDetailsCBTDatas(data) {\n    this.examId = data.id;\n    this.loadDetailsCBTData(this.examId);\n    this.cbtDetailsModals.show();\n  }\n\n  loadMoodleCourse() {\n    this.chartService.getMoodleCourse(`?selection_path_id=${this.id}&path_exam_detail_id=${this.examId}`).subscribe(resp => {\n      if (resp.length !== 0) {\n        this.moodleCourseId = resp[0].id;\n        const moodleCourseId = resp[0].id;\n        this.loadSectionId(moodleCourseId);\n        this.loadMoodleGroup();\n      }\n    });\n  }\n\n  loadMoodleGroup() {\n    this.chartService.getMoodleGroup(`?moodle_course_id=${this.moodleCourseId}`).subscribe(resp => {\n      if (resp.length !== 0) {\n        this.haveMoodleGroup = true;\n        this.loadtableExamCBTDetails = false;\n      } else {\n        this.haveMoodleGroup = false;\n        this.loadtableExamCBTDetails = false;\n      }\n    });\n  }\n\n  closeCbtModalsDetails() {\n    this.cbtDetailsModals.hide();\n    this.haveDataSessionOneTwoThree = false;\n    this.enableMoodleGroup = false;\n    this.haveMoodleGroup = false;\n  }\n\n  openDetailsCBTForm(data, type) {\n    this.cbtId = data.id;\n    this.typeCbtData = data.type;\n    this.formType = type;\n    if (this.formType == 'edit') {\n      this.loading = false;\n      this.examCbtDetailsDataForm.patchValue({ session: data.type });\n      this.examCbtDetailsDataForm.patchValue({ session_start_time: data.session_start });\n      this.examCbtDetailsDataForm.patchValue({ session_end_time: data.session_end });\n      this.cbtSessionModals.show();\n    } else {\n      this.loading = false;\n      this.examCbtDetailsDataForm.patchValue({ session: data.type });\n      this.examCbtDetailsDataForm.patchValue({ session_start_time: data.session_start });\n      this.examCbtDetailsDataForm.patchValue({ session_end_time: data.session_end });\n      this.cbtSessionModals.show();\n    }\n  }\n\n  closeDetailsCBTSession() {\n    this.cbtSessionModals.hide();\n    this.examCbtDetailsDataForm.reset();\n    this.typeCbtData = '';\n    document.querySelector('body').classList.add('modal-open');\n  }\n\n  loadDetailsCBTData(id) {\n    this.loadtableExamCBTDetails = true;\n    this.chartService.getSessionPathExamDetails(`?selection_path_id=${this.id}&active_status=1&exam_type_id=1&id=${id}`).subscribe(response => {\n      this.tableExamCBTDetails = response ? response : [];\n      if (this.isRaportCategory) {\n        this.loadingSection = false;\n      } else {\n        if (response.length != 0) {\n          this.loadMoodleCourse();\n        } else {\n          this.loadingSection = false;\n        }\n      }\n      this.loadtableExamCBTDetails = false;\n      this.loadingSection = false;\n    }, err => {\n      this.loadtableExamCBTDetails = false;\n      this.loadingSection = false;\n    });\n  }\n\n  openFormTypeDataPsikotest(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.loading = false;\n      this.examId = data.id;\n      this.id = data.selection_path_id;\n      this.examPsikotestDataForm.patchValue({ exam_type: data.exam_type });\n      this.examPsikotestDataForm.patchValue({ exam_date: data.exam_date });\n      this.examPsikotestDataForm.patchValue({ start_date: data.exam_start_date });\n      this.examPsikotestDataForm.patchValue({ end_date: data.exam_end_date });\n      this.examPsikotestDataForm.patchValue({ quota: data.quota });\n      this.psikotestModals.show();\n    } else {\n      this.examPsikotestDataForm.patchValue({ exam_type: 'Psikotest' });\n      this.psikotestModals.show();\n      this.loading = false;\n    }\n  }\n\n  closePsikotestModals() {\n    this.examPsikotestDataForm.reset();\n    this.psikotestModals.hide();\n  }\n\n  openFormTypeDataInterview(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.loading = false;\n      this.examId = data.id;\n      this.id = data.selection_path_id;\n      this.examInterviewDataForm.patchValue({ exam_type: data.exam_type });\n      this.examInterviewDataForm.patchValue({ exam_date: data.exam_date });\n      this.examInterviewDataForm.patchValue({ start_date: data.exam_start_date });\n      this.examInterviewDataForm.patchValue({ end_date: data.exam_end_date });\n      this.examInterviewDataForm.patchValue({ quota: data.quota });\n      this.interviewModals.show();\n    } else {\n      this.loading = false;\n      this.examInterviewDataForm.patchValue({ exam_type: 'Interview' });\n      this.interviewModals.show();\n    }\n  }\n\n  closeInterviewModals() {\n    this.examInterviewDataForm.reset();\n    this.interviewModals.hide();\n  }\n\n  openFormTypeDataTPA(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.examId = data.id;\n      this.loading = false;\n      this.id = data.selection_path_id;\n      this.examTPADataForm.patchValue({ exam_type: data.exam_type });\n      this.examTPADataForm.patchValue({ exam_date: data.exam_date });\n      this.examTPADataForm.patchValue({ start_date: data.exam_start_date });\n      this.examTPADataForm.patchValue({ end_date: data.exam_end_date });\n      this.examTPADataForm.patchValue({ quota: data.quota });\n      this.tpaModals.show();\n    } else {\n      this.loading = false;\n      this.examTPADataForm.patchValue({ exam_type: 'TPA' });\n      this.tpaModals.show();\n    }\n  }\n\n  closeTPAModals() {\n    this.examTPADataForm.reset();\n    this.tpaModals.hide();\n  }\n\n  // edit step 2 time\n  openFormExamTimeData(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.loadExamDetailData();\n      this.examTimeId = data.id;\n      this.examTimeMappingDataForm.patchValue({ selection_path_id: this.id });\n      this.examTimeMappingDataForm.patchValue({ exam_date: data.exam_date });\n      this.examTimeMappingDataForm.patchValue({ start_date: data.exam_start_date });\n      this.examTimeMappingDataForm.patchValue({ end_date: data.exam_end_date });\n      this.examTimeMappingDataForm.patchValue({ quota: data.quota });\n      this.session = data && data.session.toString();\n    } else {\n      this.loadExamDetailData();\n      this.examTimeModal.show();\n      this.session = '';\n      this.examTimeMappingDataForm.reset();\n    }\n    this.examTimeModal.show();\n  }\n\n  // edit step 3\n  openFormDetailRegStep(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.selectionStepId = data.id;\n      this.registrationStepForm.patchValue({ registration_step_id: data.step_id });\n      this.registrationStepForm.patchValue({ ordering: data.ordering });\n      if (data.active_status === '1') {\n        this.registrationStepForm.patchValue({ active_status: '1' });\n      } else {\n        this.registrationStepForm.patchValue({ active_status: '0' });\n      }\n    } else {\n      this.registrationStepForm.reset();\n      this.regStepModal.show();\n    }\n    this.regStepModal.show();\n  }\n\n\n  // edit step 4\n  openFormDocument(data, type) {\n    this.formType = type;\n    this.loadingModals = true;\n    if (type === 'edit') {\n      this.documentSelectionId = data.id;\n      this.documentRequirementsForm.patchValue({ document_type_id: data.document_type_id && data.document_type_id.toString() });\n      if (data.active_status === true) {\n        this.documentRequirementsForm.patchValue({ active_status: '1' });\n      } else {\n        this.documentRequirementsForm.patchValue({ active_status: '0' });\n      }\n      if (data.required === true) {\n        this.documentRequirementsForm.patchValue({ mandatory_doc: '1' });\n      } else {\n        this.documentRequirementsForm.patchValue({ mandatory_doc: '0' });\n      }\n      if (data.document_type_id === 7) {\n        this.isReport = true;\n        this.isTranscriptDocument = false;\n        this.isUtbkDocument = false;\n        this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n        this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n        this.documentRequirementsForm.controls.is_input_nilai.reset();\n        this.chartService.getRaportRequirementDocument(`?selection_path_id=${this.id}&document_type_id=7&active_status=true`).subscribe(response => {\n          this.mappingTechnicId = response.mapping_report_subject_path_technic.id;\n          this.mappingNonTechnicId = response.mapping_report_subject_path_non_technic.id;\n          this.loadingModals = false;\n          if (response.mapping_report_subject_path_non_technic.math === true) {\n            this.documentRequirementsForm.patchValue({ math2: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.math = true\n            });\n          } else {\n            this.mappingNonTechnic.map(x => {\n              x.math = false\n            });\n          }\n          if (response.mapping_report_subject_path_non_technic.bahasa === true) {\n            this.documentRequirementsForm.patchValue({ bahasa2: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.bahasa = true\n            });\n          } else {\n            this.mappingNonTechnic.map(x => {\n              x.bahasa = false\n            });\n          }\n          if (response.mapping_report_subject_path_non_technic.english === true) {\n            this.documentRequirementsForm.patchValue({ eng2: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.english = true\n            });\n          } else {\n            this.mappingNonTechnic.map(x => {\n              x.english = false\n            });\n          }\n          if (response.mapping_report_subject_path_non_technic.sociological === true) {\n            this.documentRequirementsForm.patchValue({ sosiology: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.sociological = true\n            });\n          } else if (response.mapping_report_subject_path_non_technic.sociological === false) {\n            this.mappingNonTechnic.map(x => {\n              x.sociological = false\n            });\n          }\n          if (response.mapping_report_subject_path_non_technic.economy === true) {\n            this.documentRequirementsForm.patchValue({ economy: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.economy = true\n            });\n          } else {\n            this.mappingNonTechnic.map(x => {\n              x.economy = false\n            });\n          }\n          if (response.mapping_report_subject_path_non_technic.geography === true) {\n            this.documentRequirementsForm.patchValue({ geography: '1' });\n            this.mappingNonTechnic.map(x => {\n              x.geography = true\n            });\n          } else {\n            this.mappingNonTechnic.map(x => {\n              x.geography = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.math === true) {\n            this.documentRequirementsForm.patchValue({ math: '1' });\n            this.mappingTechnic.map(x => {\n              x.math = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.math = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.english === true) {\n            this.documentRequirementsForm.patchValue({ eng: '1' });\n            this.mappingTechnic.map(x => {\n              x.english = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.english = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.bahasa === true) {\n            this.documentRequirementsForm.patchValue({ bahasa: '1' });\n            this.mappingTechnic.map(x => {\n              x.bahasa = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.bahasa = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.physics === true) {\n            this.documentRequirementsForm.patchValue({ physics: '1' });\n            this.mappingTechnic.map(x => {\n              x.physics = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.physics = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.chemical === true) {\n            this.documentRequirementsForm.patchValue({ chemicals: '1' });\n            this.mappingTechnic.map(x => {\n              x.chemical = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.chemical = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.biology === true) {\n            this.documentRequirementsForm.patchValue({ biology: '1' });\n            this.mappingTechnic.map(x => {\n              x.biology = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.biology = false\n            });\n          }\n          if (response.mapping_report_subject_path_technic.historical === true) {\n            this.documentRequirementsForm.patchValue({ sejarah: '1' });\n            this.mappingTechnic.map(x => {\n              x.historical = true\n            });\n          } else {\n            this.mappingTechnic.map(x => {\n              x.historical = false\n            });\n          }\n        });\n      } else if (data.document_type_id === 25) {\n        this.isUtbkDocument = false;\n        this.isReport = false;\n        this.isTranscriptDocument = true;\n        this.loadingModals = false;\n        if (data.is_value === true) {\n          this.documentRequirementsForm.patchValue({ is_input_nilai: '1' });\n        } else {\n          this.documentRequirementsForm.patchValue({ is_input_nilai: '0' });\n        }\n      } else if (data.document_type_id === 12) {\n        this.isUtbkDocument = true;\n        this.isReport = false;\n        this.isTranscriptDocument = false;\n        this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n        this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n        this.documentRequirementsForm.controls.is_input_nilai.reset();\n        this.chartService.getUtbkRequirementDocument(`?selection_path_id=${this.id}&document_type_id=12&active_status=true`).subscribe(response => {\n          this.mappingTechnicId = response.mapping_utbk_path_science.id;\n          this.mappingNonTechnicId = response.mapping_utbk_path_non_science.id;\n          this.loadingModals = false;\n          if (response.mapping_utbk_path_non_science.math === true) {\n            this.documentRequirementsForm.patchValue({ math2: '1' });\n            this.mappingUtbkNonScience.map(x => {\n              x.math = true\n            });\n          } else {\n            this.mappingUtbkNonScience.map(x => {\n              x.math = false\n            });\n          }\n          if (response.mapping_utbk_path_non_science.sociological === true) {\n            this.documentRequirementsForm.patchValue({ sosiology: '1' });\n            this.mappingUtbkNonScience.map(x => {\n              x.sociological = true\n            });\n          } else {\n            this.mappingUtbkNonScience.map(x => {\n              x.sociological = false\n            });\n          }\n          if (response.mapping_utbk_path_non_science.economy === true) {\n            this.documentRequirementsForm.patchValue({ economy: '1' });\n            this.mappingUtbkNonScience.map(x => {\n              x.economy = true\n            });\n          } else {\n            this.mappingUtbkNonScience.map(x => {\n              x.economy = false\n            });\n          }\n          if (response.mapping_utbk_path_non_science.geography === true) {\n            this.documentRequirementsForm.patchValue({ geography: '1' });\n            this.mappingUtbkNonScience.map(x => {\n              x.geography = true\n            });\n          } else {\n            this.mappingUtbkNonScience.map(x => {\n              x.geography = false\n            });\n          }\n          if (response.mapping_utbk_path_non_science.historical === true) {\n            this.documentRequirementsForm.patchValue({ sejarah: '1' });\n            this.mappingUtbkNonScience.map(x => {\n              x.historical = true\n            });\n          } else {\n            this.mappingUtbkNonScience.map(x => {\n              x.historical = false\n            });\n          }\n          if (response.mapping_utbk_path_science.math === true) {\n            this.documentRequirementsForm.patchValue({ math: '1' });\n            this.mappingUtbkScience.map(x => {\n              x.math = true\n            });\n          } else {\n            this.mappingUtbkScience.map(x => {\n              x.math = false\n            });\n          }\n          if (response.mapping_utbk_path_science.physics === true) {\n            this.documentRequirementsForm.patchValue({ physics: '1' });\n            this.mappingUtbkScience.map(x => {\n              x.physics = true\n            });\n          } else {\n            this.mappingUtbkScience.map(x => {\n              x.physics = false\n            });\n          }\n          if (response.mapping_utbk_path_science.chemical === true) {\n            this.documentRequirementsForm.patchValue({ chemicals: '1' });\n            this.mappingUtbkScience.map(x => {\n              x.chemical = true\n            });\n          } else {\n            this.mappingUtbkScience.map(x => {\n              x.chemical = false\n            });\n          }\n          if (response.mapping_utbk_path_science.biology === true) {\n            this.documentRequirementsForm.patchValue({ biology: '1' });\n            this.mappingUtbkScience.map(x => {\n              x.biology = true\n            });\n          } else {\n            this.mappingUtbkScience.map(x => {\n              x.biology = false\n            });\n          }\n        });\n      } else {\n        this.loadingModals = false;\n        this.isUtbkDocument = false;\n        this.isReport = false;\n        this.isTranscriptDocument = false;\n        this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n        this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n      }\n    } else {\n      this.loadingModals = false;\n      this.documentRequirementsForm.reset();\n    }\n    this.documentRequirementsModal.show();\n  }\n\n  changeDocumentRequirementType(event) {\n    if (event.value === '7') {\n      this.isReport = true;\n      this.isTranscriptDocument = false;\n      this.isUtbkDocument = false;\n      this.documentRequirementsForm.controls.math.reset();\n      this.documentRequirementsForm.controls.eng.reset();\n      this.documentRequirementsForm.controls.bahasa.reset();\n      this.documentRequirementsForm.controls.math2.reset();\n      this.documentRequirementsForm.controls.eng2.reset();\n      this.documentRequirementsForm.controls.bahasa2.reset();\n      this.documentRequirementsForm.controls.physics.reset();\n      this.documentRequirementsForm.controls.biology.reset();\n      this.documentRequirementsForm.controls.chemicals.reset();\n      this.documentRequirementsForm.controls.geography.reset();\n      this.documentRequirementsForm.controls.sosiology.reset();\n      this.documentRequirementsForm.controls.economy.reset();\n      this.documentRequirementsForm.controls.sejarah.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n      this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n      this.documentRequirementsForm.get('sejarah').updateValueAndValidity();\n      this.documentRequirementsForm.get('sejarah').clearValidators();\n      this.documentRequirementsForm.controls.is_input_nilai.reset();\n      this.documentRequirementsForm.controls.is_technic.reset();\n      this.documentRequirementsForm.controls.mandatory_doc.reset();\n    } else if (event.value === '25') {\n      this.isReport = false;\n      this.isTranscriptDocument = true;\n      this.isUtbkDocument = false;\n      this.documentRequirementsForm.controls.mandatory_doc.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.controls.is_input_nilai.reset();\n      this.documentRequirementsForm.controls.is_technic.reset();\n      this.documentRequirementsForm.controls.math.reset();\n      this.documentRequirementsForm.controls.eng.reset();\n      this.documentRequirementsForm.controls.bahasa.reset();\n      this.documentRequirementsForm.controls.math2.reset();\n      this.documentRequirementsForm.controls.eng2.reset();\n      this.documentRequirementsForm.controls.bahasa2.reset();\n      this.documentRequirementsForm.controls.physics.reset();\n      this.documentRequirementsForm.controls.biology.reset();\n      this.documentRequirementsForm.controls.chemicals.reset();\n      this.documentRequirementsForm.controls.geography.reset();\n      this.documentRequirementsForm.controls.sosiology.reset();\n      this.documentRequirementsForm.controls.economy.reset();\n      this.documentRequirementsForm.controls.sejarah.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.get('math2').updateValueAndValidity();\n      this.documentRequirementsForm.get('math2').clearValidators();\n      this.documentRequirementsForm.get('bahasa2').updateValueAndValidity();\n      this.documentRequirementsForm.get('bahasa2').clearValidators();\n      this.documentRequirementsForm.get('eng2').updateValueAndValidity();\n      this.documentRequirementsForm.get('eng2').clearValidators();\n      this.documentRequirementsForm.get('math').updateValueAndValidity();\n      this.documentRequirementsForm.get('math').clearValidators();\n      this.documentRequirementsForm.get('bahasa').updateValueAndValidity();\n      this.documentRequirementsForm.get('bahasa').clearValidators();\n      this.documentRequirementsForm.get('eng').updateValueAndValidity();\n      this.documentRequirementsForm.get('eng').clearValidators();\n      this.documentRequirementsForm.get('physics').updateValueAndValidity();\n      this.documentRequirementsForm.get('physics').clearValidators();\n      this.documentRequirementsForm.get('biology').updateValueAndValidity();\n      this.documentRequirementsForm.get('biology').clearValidators();\n      this.documentRequirementsForm.get('chemicals').updateValueAndValidity();\n      this.documentRequirementsForm.get('chemicals').clearValidators();\n      this.documentRequirementsForm.get('sosiology').updateValueAndValidity();\n      this.documentRequirementsForm.get('sosiology').clearValidators();\n      this.documentRequirementsForm.get('geography').updateValueAndValidity();\n      this.documentRequirementsForm.get('geography').clearValidators();\n      this.documentRequirementsForm.get('economy').updateValueAndValidity();\n      this.documentRequirementsForm.get('economy').clearValidators();\n      this.documentRequirementsForm.get('sejarah').updateValueAndValidity();\n      this.documentRequirementsForm.get('sejarah').clearValidators();\n      this.documentRequirementsForm.get('is_input_nilai').setValidators(Validators.required);\n      this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n    } else if (event.value === '12') {\n      this.isReport = false;\n      this.isTranscriptDocument = false;\n      this.isUtbkDocument = true;\n      this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n      this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n      this.documentRequirementsForm.controls.mandatory_doc.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.controls.is_input_nilai.reset();\n      this.documentRequirementsForm.controls.math.reset();\n      this.documentRequirementsForm.controls.eng.reset();\n      this.documentRequirementsForm.controls.bahasa.reset();\n      this.documentRequirementsForm.controls.math2.reset();\n      this.documentRequirementsForm.controls.eng2.reset();\n      this.documentRequirementsForm.controls.bahasa2.reset();\n      this.documentRequirementsForm.controls.physics.reset();\n      this.documentRequirementsForm.controls.biology.reset();\n      this.documentRequirementsForm.controls.chemicals.reset();\n      this.documentRequirementsForm.controls.geography.reset();\n      this.documentRequirementsForm.controls.sosiology.reset();\n      this.documentRequirementsForm.controls.economy.reset();\n      this.documentRequirementsForm.controls.sejarah.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n    } else {\n      this.isReport = false;\n      this.isTranscriptDocument = false;\n      this.isUtbkDocument = false;\n      this.documentRequirementsForm.get('math2').updateValueAndValidity();\n      this.documentRequirementsForm.get('math2').clearValidators();\n      this.documentRequirementsForm.get('bahasa2').updateValueAndValidity();\n      this.documentRequirementsForm.get('bahasa2').clearValidators();\n      this.documentRequirementsForm.get('eng2').updateValueAndValidity();\n      this.documentRequirementsForm.get('eng2').clearValidators();\n      this.documentRequirementsForm.get('math').updateValueAndValidity();\n      this.documentRequirementsForm.get('math').clearValidators();\n      this.documentRequirementsForm.get('bahasa').updateValueAndValidity();\n      this.documentRequirementsForm.get('bahasa').clearValidators();\n      this.documentRequirementsForm.get('eng').updateValueAndValidity();\n      this.documentRequirementsForm.get('eng').clearValidators();\n      this.documentRequirementsForm.get('physics').updateValueAndValidity();\n      this.documentRequirementsForm.get('physics').clearValidators();\n      this.documentRequirementsForm.get('biology').updateValueAndValidity();\n      this.documentRequirementsForm.get('biology').clearValidators();\n      this.documentRequirementsForm.get('chemicals').updateValueAndValidity();\n      this.documentRequirementsForm.get('chemicals').clearValidators();\n      this.documentRequirementsForm.get('sosiology').updateValueAndValidity();\n      this.documentRequirementsForm.get('sosiology').clearValidators();\n      this.documentRequirementsForm.get('geography').updateValueAndValidity();\n      this.documentRequirementsForm.get('geography').clearValidators();\n      this.documentRequirementsForm.get('economy').updateValueAndValidity();\n      this.documentRequirementsForm.get('economy').clearValidators();\n      this.documentRequirementsForm.get('is_input_nilai').updateValueAndValidity();\n      this.documentRequirementsForm.get('is_input_nilai').clearValidators();\n      this.documentRequirementsForm.controls.mandatory_doc.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.controls.math.reset();\n      this.documentRequirementsForm.controls.eng.reset();\n      this.documentRequirementsForm.controls.bahasa.reset();\n      this.documentRequirementsForm.controls.math2.reset();\n      this.documentRequirementsForm.controls.eng2.reset();\n      this.documentRequirementsForm.controls.bahasa2.reset();\n      this.documentRequirementsForm.controls.physics.reset();\n      this.documentRequirementsForm.controls.biology.reset();\n      this.documentRequirementsForm.controls.chemicals.reset();\n      this.documentRequirementsForm.controls.geography.reset();\n      this.documentRequirementsForm.controls.sosiology.reset();\n      this.documentRequirementsForm.controls.economy.reset();\n      this.documentRequirementsForm.controls.sejarah.reset();\n      this.documentRequirementsForm.controls.active_status.reset();\n      this.documentRequirementsForm.controls.is_input_nilai.reset();\n    }\n  }\n\n  onCheckMath(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.math = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.math = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.math = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.math = false;\n        });\n      }\n    }\n  }\n\n  onCheckBahasa(event) {\n    if (event.target.checked) {\n      this.mappingTechnic.map(x => {\n        x.bahasa = true;\n      });\n    } else {\n      this.mappingTechnic.map(x => {\n        x.bahasa = false;\n      });\n    }\n  }\n\n  onCheckEnglish(event) {\n    if (event.target.checked) {\n      this.mappingTechnic.map(x => {\n        x.english = true;\n      });\n    } else {\n      this.mappingTechnic.map(x => {\n        x.english = false;\n      });\n    }\n  }\n\n  onCheckBiology(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.biology = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.biology = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.biology = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.biology = false;\n        });\n      }\n    }\n  }\n\n  onCheckPhysics(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.physics = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.physics = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.physics = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.physics = false;\n        });\n      }\n    }\n  }\n\n  onCheckChemical(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.chemical = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.chemical = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingTechnic.map(x => {\n          x.chemical = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkScience.map(x => {\n          x.chemical = false;\n        });\n      }\n    }\n  }\n\n  onCheckMathNonTechnic(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.math = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.math = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.math = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.math = false;\n        });\n      }\n    }\n  }\n\n  onCheckBahasaNonTechnic(event) {\n    if (event.target.checked) {\n      this.mappingNonTechnic.map(x => {\n        x.bahasa = true;\n      });\n    } else {\n      this.mappingNonTechnic.map(x => {\n        x.bahasa = false;\n      });\n    }\n  }\n\n  onCheckEnglishNonTechnic(event) {\n    if (event.target.checked) {\n      this.mappingNonTechnic.map(x => {\n        x.english = true;\n      });\n    } else {\n      this.mappingNonTechnic.map(x => {\n        x.english = false;\n      });\n    }\n  }\n\n  onCheckEconomyNonTechnic(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.economy = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.economy = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.economy = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.economy = false;\n        });\n      }\n    }\n  }\n\n  onCheckGeographyNonTechnic(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.geography = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.geography = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.geography = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.geography = false;\n        });\n      }\n    }\n  }\n\n  onCheckSociologicalNonTechnic(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.sociological = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.sociological = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.sociological = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.sociological = false;\n        });\n      }\n    }\n  }\n\n  onSejarahNonTechnic(event) {\n    if (event.target.checked) {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.historical = true;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.historical = true;\n        });\n      }\n    } else {\n      if (this.isReport) {\n        this.mappingNonTechnic.map(x => {\n          x.historical = false;\n        });\n      } else if (this.isUtbkDocument) {\n        this.mappingUtbkNonScience.map(x => {\n          x.historical = false;\n        });\n      }\n    }\n  }\n\n  closeDocumentReqModals() {\n    this.documentRequirementsModal.hide();\n    this.isReport = false;\n    this.isTranscriptDocument = false;\n    this.isUtbkDocument = false;\n    this.loadingModals = false;\n    this.mappingTechnicId = [];\n    this.mappingNonTechnicId = [];\n  }\n\n  // edit step 5\n  openFormPinPrice(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.pinPriceId = data.id;\n      if (data.is_medical === false) {\n        this.isMedical = '0';\n      } else {\n        this.isMedical = '1';\n      }\n      this.pinPriceForm.patchValue({ price: data.price })\n      this.pinPriceForm.patchValue({ price: data.price });\n      this.pinPriceForm.patchValue({ maks_study_program: data.maks_study_program });\n      if (data.active_status === true) {\n        this.pinPriceForm.patchValue({ active_status: '1' });\n      } else {\n        this.pinPriceForm.patchValue({ active_status: '0' });\n      }\n    } else {\n      this.pinPriceForm.reset();\n      this.pinPriceDataModal.show();\n    }\n    this.pinPriceDataModal.show();\n  }\n\n  // edit step 6\n  openFormStudyProgram(data, type) {\n    this.formType = type;\n    if (type === 'edit') {\n      this.studyProgramId = data.id;\n      if (data.is_technic === true) {\n        this.isTechnic = '1';\n      } else if (data.is_technic === false) {\n        this.isTechnic = '2';\n      }\n      this.studyProgramForm.patchValue({ program_study_id: data.study_program_id.toString() });\n      this.studyProgramForm.patchValue({ minimum_donation: data.minimum_donation });\n      this.studyProgramForm.patchValue({ quota: data.quota });\n      if (data.active_status === true) {\n        this.studyProgramForm.patchValue({ active_status: '1' });\n      } else {\n        this.studyProgramForm.patchValue({ active_status: '0' });\n      }\n    } else {\n      this.studyProgramForm.reset();\n    }\n    this.studyProgramDataModal.show();\n  }\n\n  // tambah data study program all\n  openFormMappingDataProdi(type) {\n    this.formType = type;\n    if (type === 'input') {\n      this.studyProgramMappingData.show();\n      this.mappingStudyProgramForm.patchValue({ quota: '' })\n      this.mappingStudyProgramForm.patchValue({ sdp: '' })\n      this.mappingStudyProgramForm.patchValue({ is_technic_mapp: '' })\n      this.getTableStudyProgramAll();\n    }\n  }\n\n  // create step 1\n  createSelectionData() {\n    this.loadingCard = true;\n    switch (this.pageType) {\n      case 'create':\n        this.activeStatusStep3 = '1';\n        const data = {\n          name: this.formDetailStep1.controls['name'].value,\n          active_status: this.formDetailStep1.controls['active_status'].value,\n          selection_program_id: this.selectionProgram,\n          exam_status: this.examType,\n          category_id: this.categoryId,\n        };\n        this.chartService.postSelectionPathData(data).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              this.idSelectionPath = res.selection_path_id;\n              this.id = res.selection_path_id;\n              this.selectionPathName = this.formDetailStep1.controls['name'].value;\n              if (!this.isRaportCategory) {\n                const payloadMoodle = {\n                  selection_path_id: res.selection_path_id\n                }\n                this.chartService.createMoodleCategory(payloadMoodle).subscribe(resp => {\n                  if (resp.status == 'Success') {\n                    this.loadSuccess();\n                    this.pageType = 'edit';\n                    this.createSelectionData();\n                    this.loadingCard = false;\n                  } else {\n                    this.loadingCard = false;\n                    this.broadcasterService.notifBroadcast(true, {\n                      title: resp.status,\n                      msg: resp.message,\n                      timeout: 5000,\n                      theme: 'default',\n                      position: 'top-right',\n                      type: 'error'\n                    });\n                  }\n                });\n              } else {\n                this.loadSuccess();\n                this.pageType = 'edit';\n                this.createSelectionData();\n                this.loadingCard = false;\n              }\n            } else {\n              this.broadcasterService.notifBroadcast(true, {\n                title: res.status,\n                msg: res.message,\n                timeout: 5000,\n                theme: 'default',\n                position: 'top-right',\n                type: 'error'\n              });\n              this.loadingCard = false;\n            }\n          } else {\n            this.loadingCard = false;\n            this.broadcasterService.notifBroadcast(true, {\n              title: 'Gagal',\n              msg: res.message,\n              timeout: 5000,\n              theme: 'default',\n              position: 'top-right',\n              type: 'error'\n            });\n          }\n        }, (reason) => {\n          this.broadcasterService.notifBroadcast(true, {\n            title: 'Gagal',\n            msg: reason.err.message,\n            timeout: 5000,\n            theme: 'default',\n            position: 'top-right',\n            type: 'error'\n          });\n        });\n        break;\n      case 'edit':\n        this.activeStatusStep3 = '1';\n        const dataUpdate = {\n          id: this.id,\n          name: this.formDetailStep1.value.name,\n          active_status: this.formDetailStep1.value.active_status,\n          exam_status: this.examType,\n        };\n        this.chartService.updSelectionPathData(dataUpdate).subscribe(res => {\n          if (res != null) {\n            if (res.status === 'Success') {\n              if (!this.isRaportCategory) {\n                this.chartService.getCategoryMoodle(`?selection_path_id=${this.id}`).subscribe(resp => {\n                  if (resp.length == 0) {\n                    const payloadMoodle = {\n                      selection_path_id: this.id\n                    }\n                    this.chartService.createMoodleCategory(payloadMoodle).subscribe(response => {\n                      if (response.status == 'Success') {\n                        this.loadSuccess();\n                        this.goToStep1();\n                        this.loadingCard = false;\n                      } else {\n                        this.loadingCard = false;\n                        this.broadcasterService.notifBroadcast(true, {\n                          title: resp.status,\n                          msg: resp.message,\n                          timeout: 5000,\n                          theme: 'default',\n                          position: 'top-right',\n                          type: 'error'\n                        });\n                      }\n                    });\n                  } else {\n                    this.loadSuccess();\n                    this.goToStep1();\n                    this.loadingCard = false;\n                  }\n                });\n              } else {\n                this.chartService.getCategoryMoodle(`?selection_path_id=${this.id}`).subscribe(resp => {\n                  if (resp.length == 0) {\n                    this.loadSuccess();\n                    this.goToStep1();\n                    this.loadingCard = false;\n                  } else {\n                    const deleteMoodle = {\n                      selection_path_id: this.id\n                    }\n                    this.chartService.deleteMoodleCategory(deleteMoodle).subscribe(resp => {\n                      if (resp.status == 'Success') {\n                        this.loadSuccess();\n                        this.goToStep1();\n                        this.loadingCard = false;\n                      } else {\n                        this.loadingCard = false;\n                        this.broadcasterService.notifBroadcast(true, {\n                          title: resp.status,\n                          msg: resp.message,\n                          timeout: 5000,\n                          theme: 'default',\n                          position: 'top-right',\n                          type: 'error'\n                        });\n                      }\n                    });\n                  }\n                });\n              }\n            } else {\n              this.loadError();\n              this.loadingCard = false;\n            }\n          } else {\n            this.loadError();\n            this.loading = false;\n          }\n        }, (reason) => {\n          this.loadError();\n          this.loadingCard = false;\n        });\n        break;\n      default: break;\n    }\n  }\n\n  // create step 2\n  createExamLocationData() {\n    if (this.examLocMappingDataForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          const data = {\n            selection_path_id: this.id,\n            location_exam_id: this.locationTime,\n            active_status: '1'\n          };\n          this.chartService.postExamLocationSelectionData(data).subscribe(res => {\n            if (res.status == 'Success') {\n              this.loadSuccess();\n              // this.examLocModal.hide();\n              this.createSelectionData();\n            } else {\n              this.loadError();\n            }\n          });\n          break;\n        case 'edit':\n          const datas = {\n            id: this.examLocationSelectionId,\n            selection_path_id: this.id,\n            location_exam_id: this.locationTime,\n            active_status: '1'\n          };\n          this.chartService.updExamLocationSelectionData(datas).subscribe(res => {\n            if (res.status == 'Success') {\n              this.loadSuccess();\n              this.examLocModal.hide();\n              // this.renderLocation();\n              this.createSelectionData();\n            } else {\n              this.loadError();\n            }\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  // create step 2\n  createCBTData() {\n    if (this.examCbtDataForm.valid) {\n      this.loading = true;\n      const dataCreate = {\n        selection_path_id: this.id,\n        exam_type_id: 1,\n        start_date: this.examCbtDataForm.controls['exam_date'].value,\n        quota: this.examCbtDataForm.controls['quota'].value,\n        active_status: '1',\n      };\n      let startdate = this.examCbtDataForm.controls['exam_date'].value;\n      let enddate = this.examCbtDataForm.controls['exam_date'].value;\n      let timestartdate = startdate.concat(\" \", '00:00:00');\n      let timeenddate = enddate.concat(\" \", '23:59:59');\n      this.chartService.postExamTimeData(dataCreate).subscribe(res => {\n        if (res != null) {\n          if (res.status == 'Success') {\n            this.examId = res.id;\n            if (!this.isRaportCategory) {\n              this.chartService.getCategoryMoodle(`?selection_path_id=${this.id}`).subscribe(resp => {\n                if (resp.length !== 0) {\n                  this.categoryMoodleId = resp[0].id;\n                  const payloadMoodleCategory = {\n                    moodle_category_id: this.categoryMoodleId,\n                    start_date: timestartdate,\n                    end_date: timeenddate,\n                    path_exam_detail_id: this.examId\n                  }\n                  this.chartService.insertMoodleCourse(payloadMoodleCategory).subscribe(response => {\n                    if (response.status == 'Success') {\n                      this.moodleCourseId = response.response.data[0].id;\n                      this.loadSuccess();\n                      this.closeModalCBT();\n                      this.renderExamTimeCBT();\n                    } else {\n                      this.loadSuccess();\n                      this.closeModalCBT();\n                      this.renderExamTimeCBT();\n                    }\n                  });\n                } else {\n                  this.broadcasterService.notifBroadcast(true, {\n                    title: resp.status,\n                    msg: resp.message,\n                    timeout: 5000,\n                    theme: 'default',\n                    position: 'top-right',\n                    type: 'error'\n                  });\n                  this.loading = false;\n                }\n              });\n            } else {\n              this.loadSuccess();\n              this.renderExamTimeCBT();\n              this.closeModalCBT();\n            }\n          } else {\n            this.broadcasterService.notifBroadcast(true, {\n              title: res.status,\n              msg: res.message,\n              timeout: 5000,\n              theme: 'default',\n              position: 'top-right',\n              type: 'error'\n            });\n            this.loading = false;\n          }\n        } else {\n          this.loadError();\n          this.loading = false;\n        }\n      }, (reason) => {\n        this.loading = false;\n        this.broadcasterService.notifBroadcast(true, {\n          title: reason.err.status,\n          msg: reason.err.message,\n          timeout: 5000,\n          theme: 'default',\n          position: 'top-right',\n          type: 'error'\n        });\n      });\n    }\n  }\n\n  deleteExamsCBTDatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      start_date: data.origin_start_date,\n      exam_type_id: 1\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamCBT = true;\n        this.chartService.updExamTimeData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              if (!this.isRaportCategory) {\n                this.chartService.getMoodleCourse(`?selection_path_id=${this.id}`).subscribe(resp => {\n                  if (resp.length !== 0) {\n                    const deleteCourse = {\n                      moodle_course_id: resp[0].id\n                    }\n                    this.chartService.deleteMoodleCourse(deleteCourse).subscribe(response => {\n                      if (response.status == 'Success') {\n                        Swal.fire({\n                          position: 'center',\n                          type: 'success',\n                          title: this.successDel,\n                          showConfirmButton: false,\n                          timer: 2000\n                        });\n                        this.examCbtDataForm.reset();\n                        this.renderExamTimeCBT();\n                        this.loadtableExamCBT = false;\n                        this.haveDataSessionOneTwoThree = false;\n                        this.enableMoodleGroup = false;\n                      } else {\n                        Swal.fire({\n                          position: 'center',\n                          type: 'error',\n                          title: this.failedDel,\n                          showConfirmButton: false,\n                          timer: 2000\n                        });\n                        this.examCbtDataForm.reset();\n                        this.loadtableExamCBT = false;\n                        this.haveDataSessionOneTwoThree = false;\n                        this.enableMoodleGroup = false;\n                      }\n                    });\n                  } else {\n                    Swal.fire({\n                      position: 'center',\n                      type: 'success',\n                      title: this.successDel,\n                      showConfirmButton: false,\n                      timer: 2000\n                    });\n                    this.renderExamTimeCBT();\n                    this.loadtableExamCBT = false;\n                    this.examCbtDataForm.reset();\n                  }\n                })\n              } else {\n                Swal.fire({\n                  position: 'center',\n                  type: 'success',\n                  title: this.successDel,\n                  showConfirmButton: false,\n                  timer: 2000\n                });\n                this.renderExamTimeCBT();\n                this.loadtableExamCBT = false;\n                this.examCbtDataForm.reset();\n              }\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamCBT = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          Swal.fire({\n            position: 'center',\n            type: 'error',\n            text: reason.err.message,\n            title: this.failedDel,\n            showConfirmButton: false,\n            timer: 2000\n          });\n          this.loadtableExamCBT = false;\n        });\n      }\n    });\n  }\n\n  createCBTDetailsDataSession() {\n    if (this.examCbtDetailsDataForm.valid) {\n      this.loading = true;\n      let data = {\n        id: this.cbtId,\n      };\n      let dataCreate = {};\n      let moodleSection1 = {\n        moodle_course_id: this.moodleCourseId,\n      }\n      let moodleSection2 = {};\n      if (this.typeCbtData == '1') {\n        dataCreate = {\n          ...data,\n          session_one_start: this.examCbtDetailsDataForm.value.session_start_time,\n          session_one_end: this.examCbtDetailsDataForm.value.session_end_time\n        }\n        moodleSection2 = {\n          ...moodleSection1,\n          section_name: 'Sesi 1'\n        }\n      } else if (this.typeCbtData == '2') {\n        dataCreate = {\n          ...data,\n          session_two_start: this.examCbtDetailsDataForm.value.session_start_time,\n          session_two_end: this.examCbtDetailsDataForm.value.session_end_time\n        }\n        moodleSection2 = {\n          ...moodleSection1,\n          section_name: 'Sesi 2'\n        }\n      } else if (this.typeCbtData == '3') {\n        dataCreate = {\n          ...data,\n          session_three_start: this.examCbtDetailsDataForm.value.session_start_time,\n          session_three_end: this.examCbtDetailsDataForm.value.session_end_time\n        }\n        moodleSection2 = {\n          ...moodleSection1,\n          section_name: 'Sesi 3'\n        }\n      }\n      this.chartService.createOrUpdateSessionPathExamDetails(dataCreate).subscribe(res => {\n        if (res != null) {\n          if (res.status == 'Success') {\n            if (!this.isRaportCategory) {\n              this.chartService.insertMoodleSection(moodleSection2).subscribe(response => {\n                if (response.status == 'Success') {\n                  const sectionMoodleId = response.response.data[0].id;\n                  const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];;\n                  const date = new Date();\n                  const getCurrentMonth = months[date.getMonth()];\n                  const payloadQuizMoodle = {\n                    moodle_course_id: this.moodleCourseId,\n                    moodle_section_id: sectionMoodleId,\n                    name: 'Moodle Section' + ' ' + this.selectionPathName + ' ' + getCurrentMonth,\n                    description: 'Moodle Section' + ' ' + this.selectionPathName + ' ' + getCurrentMonth,\n                    timeopen: this.examCbtDetailsDataForm.value.session_start_time,\n                    timeclose: this.examCbtDetailsDataForm.value.session_end_time\n                  }\n                  this.chartService.insertMoodleQuiz(payloadQuizMoodle).subscribe(response2 => {\n                    if (response2.status == 'Success') {\n                      this.loadSuccess();\n                      this.loading = false;\n                      this.closeDetailsCBTSession();\n                      this.loadDetailsCBTData(this.cbtId);\n                    } else {\n                      this.broadcasterService.notifBroadcast(true, {\n                        title: response.status,\n                        msg: response.message,\n                        timeout: 5000,\n                        theme: 'default',\n                        position: 'top-right',\n                        type: 'error'\n                      });\n                      this.loading = false;\n                    }\n                  });\n                } else {\n                  this.broadcasterService.notifBroadcast(true, {\n                    title: response.status,\n                    msg: response.message,\n                    timeout: 5000,\n                    theme: 'default',\n                    position: 'top-right',\n                    type: 'error'\n                  });\n                  this.loading = false;\n                }\n              });\n            } else {\n              this.loadSuccess();\n              this.loading = false;\n              this.closeDetailsCBTSession();\n              this.loadDetailsCBTData(this.cbtId);\n            }\n          } else {\n            this.broadcasterService.notifBroadcast(true, {\n              title: res.status,\n              msg: res.message,\n              timeout: 5000,\n              theme: 'default',\n              position: 'top-right',\n              type: 'error'\n            });\n            this.loading = false;\n          }\n        } else {\n          this.broadcasterService.notifBroadcast(true, {\n            title: res.status,\n            msg: res.message,\n            timeout: 5000,\n            theme: 'default',\n            position: 'top-right',\n            type: 'error'\n          });\n          this.loading = false;\n          this.loading = false;\n        }\n      }, (reason) => {\n        this.broadcasterService.notifBroadcast(true, {\n          title: reason.err.status,\n          msg: reason.err.message,\n          timeout: 5000,\n          theme: 'default',\n          position: 'top-right',\n          type: 'error'\n        });\n        this.loading = false;\n      });\n    }\n  }\n\n  loadSectionId(moodleCourseId) {\n    this.loadingSection = true;\n    this.chartService.getMoodleSection(`?moodle_course_id=${moodleCourseId}`).subscribe(response => {\n      if (response.length !== 0) {\n        for (let i = 0; i < response.length; i++) {\n          if (response[i].name == 'Sesi 1') {\n            this.moodleSectionSession1Id = response[i].id;\n          } else if (response[i].name == 'Sesi 2') {\n            this.moodleSectionSession2Id = response[i].id;\n          } else if (response[i].name == 'Sesi 3') {\n            this.moodleSectionSession3Id = response[i].id;\n          }\n        }\n        if (response.length == 3) {\n          this.loadingSection = false;\n          this.loadtableExamCBTDetails = false;\n          this.haveDataSessionOneTwoThree = true;\n          this.enableMoodleGroup = true;\n        }\n        else {\n          this.loadingSection = false;\n          this.loadtableExamCBTDetails = false;\n          this.haveDataSessionOneTwoThree = false;\n          this.enableMoodleGroup = false;\n        }\n      } else {\n        this.loadingSection = false;\n        this.loadtableExamCBTDetails = false;\n      }\n    });\n  }\n\n  createMoodleGroup() {\n    this.loading = true;\n    if (this.enableMoodleGroup) {\n      const moodleGroupArrays =\n      {\n        moodle_course_id: this.moodleCourseId,\n        path_exam_detail_id: this.examId,\n        sections: [\n          {\n            moodle_section_id: this.moodleSectionSession1Id,\n            increment: 1\n          },\n          {\n            moodle_section_id: this.moodleSectionSession2Id,\n            increment: 2\n          },\n          {\n            moodle_section_id: this.moodleSectionSession3Id,\n            increment: 3\n          }\n        ]\n      }\n      const jsonGroup = JSON.stringify(moodleGroupArrays);\n      const payload = {\n        json: jsonGroup\n      }\n      this.chartService.insertMoodleGroup(payload).subscribe(response => {\n        if (response.status == 'Success') {\n          Swal.fire({\n            position: 'center',\n            type: 'success',\n            title: response.status,\n            text: response.message,\n            showConfirmButton: true,\n            allowOutsideClick: false\n          });\n          this.loading = false;\n          this.haveMoodleGroup = true;\n        }\n        else {\n          this.broadcasterService.notifBroadcast(true, {\n            title: response.status,\n            msg: response.message,\n            timeout: 5000,\n            theme: 'default',\n            position: 'top-right',\n            type: 'error'\n          });\n          this.loading = false;\n        }\n      }, (reason) => {\n        this.broadcasterService.notifBroadcast(true, {\n          title: reason.err.status,\n          msg: reason.err.message,\n          timeout: 5000,\n          theme: 'default',\n          position: 'top-right',\n          type: 'error'\n        });\n        this.loading = false;\n      });\n    } else {\n      Swal.fire({\n        position: 'center',\n        type: 'warning',\n        title: this.warning,\n        text: this.mappingGrupText,\n        showConfirmButton: true,\n        allowOutsideClick: false\n      });\n      this.loading = false;\n    }\n  }\n\n  createPsikotestData() {\n    if (this.examPsikotestDataForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          let dataCreate = {};\n          dataCreate = {\n            selection_path_id: this.id,\n            exam_type_id: 2,\n            start_date: this.examPsikotestDataForm.controls['exam_date'].value + \" \" + this.examPsikotestDataForm.controls['start_date'].value,\n            end_date: this.examPsikotestDataForm.controls['exam_date'].value + \" \" + this.examPsikotestDataForm.controls['end_date'].value,\n            quota: this.examPsikotestDataForm.controls['quota'].value,\n            active_status: '1',\n          };\n          this.chartService.postExamTimeData(dataCreate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimePsikotest();\n                this.closePsikotestModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          let dataUpdate = {};\n          dataUpdate = {\n            id: this.examId,\n            selection_path_id: this.id,\n            start_date: this.examPsikotestDataForm.value.exam_date + \" \" + this.examPsikotestDataForm.value.start_date,\n            end_date: this.examPsikotestDataForm.value.exam_date + \" \" + this.examPsikotestDataForm.value.end_date,\n            quota: this.examPsikotestDataForm.controls['quota'].value,\n            active_status: '1',\n            exam_type_id: 2,\n          };\n          this.chartService.updExamTimeData(dataUpdate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimePsikotest();\n                this.closePsikotestModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        default: break;\n      }\n    }\n  }\n\n  deleteExamsPsikotestDatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      start_date: data.origin_start_date,\n      exam_type_id: 2\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamPsikotest = true;\n        this.chartService.updExamTimeData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              Swal.fire({\n                position: 'center',\n                type: 'success',\n                title: this.successDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.renderExamTimePsikotest();\n              this.loadtableExamPsikotest = false;\n              this\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamPsikotest = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          this.loadError();\n        });\n      }\n    });\n  }\n\n  createInterviewData() {\n    if (this.examInterviewDataForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          let dataCreate = {};\n          dataCreate = {\n            selection_path_id: this.id,\n            exam_type_id: 3,\n            start_date: this.examInterviewDataForm.controls['exam_date'].value + \" \" + this.examInterviewDataForm.controls['start_date'].value,\n            end_date: this.examInterviewDataForm.controls['exam_date'].value + \" \" + this.examInterviewDataForm.controls['end_date'].value,\n            quota: this.examInterviewDataForm.controls['quota'].value,\n            active_status: '1',\n          };\n          this.chartService.postExamTimeData(dataCreate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimeInterview();\n                this.closeInterviewModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          let dataUpdate = {};\n          dataUpdate = {\n            id: this.examId,\n            selection_path_id: this.id,\n            start_date: this.examInterviewDataForm.value.exam_date + \" \" + this.examInterviewDataForm.value.start_date,\n            end_date: this.examInterviewDataForm.value.exam_date + \" \" + this.examInterviewDataForm.value.end_date,\n            quota: this.examInterviewDataForm.controls['quota'].value,\n            active_status: '1',\n            exam_type_id: 3,\n          };\n          this.chartService.updExamTimeData(dataUpdate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimeInterview();\n                this.closeInterviewModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        default: break;\n      }\n    }\n  }\n\n  deleteExamsInterviewDatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      start_date: data.origin_start_date,\n      exam_type_id: 3\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamInterview = true;\n        this.chartService.updExamTimeData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              Swal.fire({\n                position: 'center',\n                type: 'success',\n                title: this.successDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.renderExamTimeInterview();\n              this.loadtableExamInterview = false;\n              this\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamInterview = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          this.loadError();\n        });\n      }\n    });\n  }\n\n  createTPAData() {\n    if (this.examTPADataForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          let dataCreate = {};\n          dataCreate = {\n            selection_path_id: this.id,\n            exam_type_id: 4,\n            start_date: this.examTPADataForm.controls['exam_date'].value + \" \" + this.examTPADataForm.controls['start_date'].value,\n            end_date: this.examTPADataForm.controls['exam_date'].value + \" \" + this.examTPADataForm.controls['end_date'].value,\n            quota: this.examTPADataForm.controls['quota'].value,\n            active_status: '1',\n          };\n          this.chartService.postExamTimeData(dataCreate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimeTPA();\n                this.closeTPAModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          let dataUpdate = {};\n          dataUpdate = {\n            id: this.examId,\n            selection_path_id: this.id,\n            start_date: this.examTPADataForm.value.exam_date + \" \" + this.examTPADataForm.value.start_date,\n            end_date: this.examTPADataForm.value.exam_date + \" \" + this.examTPADataForm.value.end_date,\n            quota: this.examTPADataForm.controls['quota'].value,\n            active_status: '1',\n            exam_type_id: 4,\n          };\n          this.chartService.updExamTimeData(dataUpdate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.renderExamTimeTPA();\n                this.closeTPAModals();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        default: break;\n      }\n    }\n  }\n\n  deleteExamsTPADatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      start_date: data.origin_start_date,\n      exam_type_id: 4\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamTPA = true;\n        this.chartService.updExamTimeData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              Swal.fire({\n                position: 'center',\n                type: 'success',\n                title: this.successDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.renderExamTimeTPA();\n              this.loadtableExamTPA = false;\n              this\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamTPA = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          this.loadError();\n        });\n      }\n    });\n  }\n\n  // create step 2\n  createExamTimeData() {\n    if (this.examTimeMappingDataForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          const dataCreate = {\n            selection_path_id: this.id,\n            start_date: this.examTimeMappingDataForm.controls['exam_date'].value + \" \" + this.examTimeMappingDataForm.controls['start_date'].value,\n            end_date: this.examTimeMappingDataForm.controls['exam_date'].value + \" \" + this.examTimeMappingDataForm.controls['end_date'].value,\n            quota: this.examTimeMappingDataForm.controls['quota'].value,\n            active_status: '1',\n            session: this.session\n          };\n          this.chartService.postExamTimeData(dataCreate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.loading = false;\n                this.examTimeModal.hide();\n                // this.renderExamTime();\n                // this.renderLocation();\n                this.createSelectionData();\n                this.activeStatusStep3 = '1';\n                // this.loadExamLocationSelectionData();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          const data = {\n            id: this.examTimeId,\n            selection_path_id: this.id,\n            start_date: this.examTimeMappingDataForm.value.exam_date + \" \" + this.examTimeMappingDataForm.value.start_date,\n            end_date: this.examTimeMappingDataForm.value.exam_date + \" \" + this.examTimeMappingDataForm.value.end_date,\n            quota: this.examTimeMappingDataForm.controls['quota'].value,\n            active_status: '1',\n            session: this.session\n          };\n          this.chartService.updExamTimeData(data).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.activeStatusStep3 = '1';\n                this.examTimeModal.hide();\n                // this.renderExamTime();\n                // this.renderLocation();\n                this.createSelectionData();\n                this.loading = false;\n                // this.renderExamLocation();\n                // this.loadExamLocationSelectionData();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        default: break;\n      }\n    }\n  }\n\n  // delete step 2\n  deleteExamsLocDatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      location_exam_id: this.locationTime,\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamLocData = true;\n        this.chartService.updExamLocationSelectionData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              Swal.fire({\n                position: 'center',\n                type: 'success',\n                title: this.successDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              // this.renderLocation();\n              this.createSelectionData();\n              this.loadtableExamLocData = false;\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamLocData = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          this.loadError();\n        });\n      }\n    });\n  }\n\n  // delete step 2\n  deleteExamsTimeDatas(data) {\n    const datas = {\n      id: data.id,\n      active_status: \"0\",\n      selection_path_id: data.selection_path_id,\n      start_date: data.origin_start_date,\n      end_date: data.origin_end_date\n    };\n    Swal.fire({\n      title: this.confirmation,\n      text: this.sure,\n      type: 'question',\n      showConfirmButton: true,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#ffba57',\n      confirmButtonText: this.yes,\n      cancelButtonText: this.no\n    }).then((confirm) => {\n      if (confirm.value) {\n        this.loadtableExamTimeData = true;\n        this.chartService.updExamTimeData(datas).subscribe(res => {\n          if (res != null) {\n            if (res.status == 'Success') {\n              Swal.fire({\n                position: 'center',\n                type: 'success',\n                title: this.successDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              // this.renderExamTime();\n              this.createSelectionData();\n              this.loadtableExamTimeData = false;\n            } else {\n              Swal.fire({\n                position: 'center',\n                type: 'error',\n                title: this.failedDel,\n                showConfirmButton: false,\n                timer: 2000\n              });\n              this.loadtableExamTimeData = false;\n            }\n          } else {\n            this.loadError();\n          }\n        }, (reason) => {\n          this.loadError();\n        });\n      }\n    });\n  }\n\n  // create step 4\n  createDocumentRequirementsData() {\n    if (this.documentRequirementsForm.valid) {\n      this.loading = true;\n      if (this.isReport) {\n        switch (this.formType) {\n          case 'input':\n            let arrayToObjectTechnic = Object.assign({}, ...this.mappingTechnic);\n            let arrayToObjectNonTechnic = Object.assign({}, ...this.mappingNonTechnic);\n            let dataCreate = {};\n            dataCreate =\n            {\n              selection_path_id: this.id,\n              document_type_id: this.documentType,\n              active_status: this.documentRequirementsForm.value.active_status === '1' ? true : false,\n              required: this.documentRequirementsForm.value.mandatory_doc === '1' ? true : false,\n              mapping_report_subject_path_technic: arrayToObjectTechnic,\n              mapping_report_subject_path_non_technic: arrayToObjectNonTechnic\n            }\n            const myJson = JSON.stringify(dataCreate);\n            let payload = {\n              json: myJson\n            }\n            this.chartService.createRaportRequirementDocument(payload).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.documentRequirementsModal.hide();\n                  this.renderDocumentRequirements();\n                  this.documentRequirementsForm.reset();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          case 'edit':\n            this.mappingTechnic.map(x => {\n              x.id = this.mappingTechnicId,\n                x.selection_path_id = this.id,\n                x.active_status = this.documentRequirementsForm.value.active_status === '1' ? true : false,\n                x.is_technic = true\n            });\n            this.mappingNonTechnic.map(y => {\n              y.id = this.mappingNonTechnicId,\n                y.selection_path_id = this.id,\n                y.active_status = this.documentRequirementsForm.value.active_status === '1' ? true : false,\n                y.is_technic = false\n            });\n            let arrayToObjectTechnicUpd = Object.assign({}, ...this.mappingTechnic);\n            let arrayToObjectNonTechnicUpd = Object.assign({}, ...this.mappingNonTechnic);\n            let dataUpdate = {};\n            dataUpdate =\n            {\n              id: this.documentSelectionId,\n              selection_path_id: this.id,\n              document_type_id: this.documentType,\n              active_status: this.documentRequirementsForm.value.active_status === '1' ? true : false,\n              required: this.documentRequirementsForm.value.mandatory_doc === '1' ? true : false,\n              mapping_report_subject_path_technic: arrayToObjectTechnicUpd,\n              mapping_report_subject_path_non_technic: arrayToObjectNonTechnicUpd\n            }\n            const myJsonUpdate = JSON.stringify(dataUpdate);\n            let payloadUpdate = {\n              json: myJsonUpdate\n            }\n            this.chartService.updateRaportRequirementDocument(payloadUpdate).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.documentRequirementsModal.hide();\n                  this.renderDocumentRequirements();\n                  this.documentRequirementsForm.reset();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          default: break;\n        }\n      } else if (this.isUtbkDocument) {\n        switch (this.formType) {\n          case 'input':\n            let arrayToObjectScience = Object.assign({}, ...this.mappingUtbkScience);\n            let arrayToObjectNonScience = Object.assign({}, ...this.mappingUtbkNonScience);\n            let dataCreate = {};\n            dataCreate =\n            {\n              selection_path_id: this.id,\n              document_type_id: this.documentType,\n              active_status: this.documentRequirementsForm.value.active_status === '1' ? true : false,\n              required: this.documentRequirementsForm.value.mandatory_doc === '1' ? true : false,\n              mapping_utbk_path_science: arrayToObjectScience,\n              mapping_utbk_path_non_science: arrayToObjectNonScience\n            }\n            const myJson = JSON.stringify(dataCreate);\n            let payload = {\n              json: myJson\n            }\n            this.chartService.createUtbkRequirementDocument(payload).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.closeDocumentReqModals();\n                  this.renderDocumentRequirements();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          case 'edit':\n            this.mappingUtbkScience.map(x => {\n              x.id = this.mappingTechnicId,\n                x.selection_path_id = this.id,\n                x.active_status = this.documentRequirementsForm.value.active_status === '1' ? true : false,\n                x.is_science = true\n            });\n            this.mappingUtbkNonScience.map(y => {\n              y.id = this.mappingNonTechnicId,\n                y.selection_path_id = this.id,\n                y.active_status = this.documentRequirementsForm.value.active_status === '1' ? true : false,\n                y.is_science = false\n            });\n            let arrayToObjectTechnicUpd = Object.assign({}, ...this.mappingUtbkScience);\n            let arrayToObjectNonTechnicUpd = Object.assign({}, ...this.mappingUtbkNonScience);\n            let dataUpdate = {};\n            dataUpdate =\n            {\n              id: this.documentSelectionId,\n              selection_path_id: this.id,\n              document_type_id: this.documentType,\n              active_status: this.documentRequirementsForm.value.active_status === '1' ? true : false,\n              required: this.documentRequirementsForm.value.mandatory_doc === '1' ? true : false,\n              mapping_utbk_path_science: arrayToObjectTechnicUpd,\n              mapping_utbk_path_non_science: arrayToObjectNonTechnicUpd\n            }\n            const myJsonUpdate = JSON.stringify(dataUpdate);\n            let payloadUpdate = {\n              json: myJsonUpdate\n            }\n            this.chartService.updateUtbkRequirementDocument(payloadUpdate).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.renderDocumentRequirements();\n                  this.closeDocumentReqModals();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          default: break;\n        }\n\n      } else {\n        switch (this.formType) {\n          case 'input':\n            let payload = {};\n            const data = {\n              selection_path_id: this.id,\n              document_type_id: this.documentRequirementsForm.controls['document_type_id'].value,\n              active_status: this.documentRequirementsForm.controls['active_status'].value,\n              required: this.documentRequirementsForm.controls['mandatory_doc'].value,\n              is_value: this.documentRequirementsForm.controls['is_input_nilai'].value,\n            };\n            this.chartService.postSelectionDocument(data).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.documentRequirementsModal.hide();\n                  this.documentRequirementsForm.reset();\n                  this.renderDocumentRequirements();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          case 'edit':\n            const dataUpdate = {\n              id: this.documentSelectionId,\n              selection_path_id: this.id,\n              document_type_id: this.documentRequirementsForm.value.document_type_id,\n              active_status: this.documentRequirementsForm.value.active_status,\n              required: this.documentRequirementsForm.value.mandatory_doc,\n              is_value: this.documentRequirementsForm.controls['is_input_nilai'].value,\n            };\n            this.chartService.updSelectionDocument(dataUpdate).subscribe(res => {\n              if (res != null) {\n                if (res.status == 'Success') {\n                  this.loadSuccess();\n                  this.documentRequirementsModal.hide();\n                  this.documentRequirementsForm.reset();\n                  this.renderDocumentRequirements();\n                } else {\n                  this.loadError();\n                }\n              } else {\n                this.loadError();\n              }\n            }, (reason) => {\n              this.loadError();\n            });\n            break;\n          default: break;\n        }\n      }\n    }\n  }\n\n  // create step 5\n  createDetailPINPriceData() {\n    if (this.pinPriceForm.valid) {\n      this.loading = true;\n      switch (this.formType) {\n        case 'input':\n          const data = {\n            selection_path_id: this.id,\n            price: this.pinPriceForm.controls['price'].value,\n            maks_study_program: this.pinPriceForm.controls['maks_study_program'].value,\n            active_status: this.pinPriceForm.controls['active_status'].value,\n            // category: this.categoryFormPrice,\n            is_medical: this.isMedical\n          };\n          this.chartService.postPINPriceData(data).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.pinPriceDataModal.hide();\n                this.renderDetailPINPrice();\n                this.checkActivePinPrice();\n                this.loading = false;\n              } else {\n                this.loadError();\n                this.loading = false;\n              }\n            } else {\n              this.loadError();\n              this.loading = false;\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          const dataUpdate = {\n            id: this.pinPriceId,\n            selection_path_id: this.id,\n            price: this.pinPriceForm.value.price,\n            maks_study_program: this.pinPriceForm.value.maks_study_program,\n            active_status: this.pinPriceForm.value.active_status,\n            is_medical: this.isMedical\n          };\n          this.chartService.updPINPriceData(dataUpdate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.pinPriceDataModal.hide();\n                this.renderDetailPINPrice();\n                this.checkActivePinPrice();\n                this.loading = false;\n              } else {\n                this.loadError();\n                this.loading = false;\n              }\n            } else {\n              this.loadError();\n              this.loading = false;\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        default: break;\n      }\n    }\n  }\n\n  // create step 6\n  createDetailStudyProgramMappingData1() {\n    if (this.studyProgramForm.valid) {\n      switch (this.formType) {\n        case 'input':\n          let dataCreate = {\n            selection_path_id: this.id,\n            program_study_id: this.studyProgramForm.controls['program_study_id'].value,\n            is_technic: this.isTechnic === '1' ? 'true' : 'false',\n            minimum_donation: this.studyProgramForm.controls['minimum_donation'].value,\n            quota: this.studyProgramForm.controls['quota'].value,\n            active_status: this.studyProgramForm.controls['active_status'].value\n          };\n          this.chartService.postMappingProgramStudyData(dataCreate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.studyProgramDataModal.hide();\n                this.renderDetailStudyProgramMapping();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n        case 'edit':\n          const dataUpdate = {\n            id: this.studyProgramId,\n            selection_path_id: this.id,\n            program_study_id: this.studyProgramForm.value.program_study_id,\n            is_technic: this.isTechnic === '1' ? 'true' : 'false',\n            minimum_donation: this.studyProgramForm.controls['minimum_donation'].value,\n            quota: this.studyProgramForm.value.quota,\n            active_status: this.studyProgramForm.value.active_status\n          };\n          this.chartService.updMappingProgramStudyData(dataUpdate).subscribe(res => {\n            if (res != null) {\n              if (res.status == 'Success') {\n                this.loadSuccess();\n                this.studyProgramDataModal.hide();\n                this.renderDetailStudyProgramMapping();\n              } else {\n                this.loadError();\n              }\n            } else {\n              this.loadError();\n            }\n          }, (reason) => {\n            this.loadError();\n          });\n          break;\n      }\n    }\n  }\n\n  // Change status aktif in modal mapping study program all\n  changeSwitch(id, e) {\n    if (e.target.checked === true) {\n      this.statusChecked = '1';\n    } else if (e.target.checked === false) {\n      this.statusChecked = '0';\n    } else {\n      this.statusChecked = '1';\n    }\n  }\n\n  // Change is technic in modal mapping study program all\n  changeTechnic(id, e) {\n    if (e.target.checked === true) {\n      this.isTechnicChecked = '1';\n      this.checksTechnic2 = true;\n    } else if (e.target.checked === false) {\n      this.isTechnicChecked = '0';\n      this.checksTechnic2 = false;\n    } else {\n      this.isTechnicChecked = '0';\n      this.checksTechnic2 = false;\n    }\n  }\n\n  // Create data mapping all study program\n  createMappingAllStudyProgram(data) {\n    this.loadTableMapping = true;\n    let dataCreate = {\n      selection_path_id: this.id,\n      program_study_id: data.id,\n      is_technic: this.isTechnicMapp === '1' ? 'true' : 'false',\n      quota: this.mappingStudyProgramForm.controls['quota'].value,\n      minimum_donation: this.mappingStudyProgramForm.controls['sdp'].value,\n      active_status: this.statusChecked ? this.statusChecked : '1'\n    };\n    this.chartService.postMappingProgramStudyData(dataCreate).subscribe(res => {\n      if (res != null) {\n        if (res.status == 'Success') {\n          this.loadTableMapping = false;\n          this.mappingStudyProgramForm.reset();\n          this.loadSuccess();\n          this.renderDetailStudyProgramMapping();\n          this.getTableStudyProgramAll();\n          this.renderMappStudyProgramForm();\n          this.statusChecked = '1';\n          this.checks = true;\n        } else {\n          this.loadError();\n        }\n      } else {\n        this.loadError();\n      }\n    }, (reason) => {\n      this.loadError();\n    });\n  }\n\n  // apply filter step 4\n  applyFiltersDocumentReq(activeStatusStep4) {\n    this.loadtableSelectionDocumentData = true;\n    if (this.activeStatusStep4 === '1') {\n      this.renderDocumentRequirements();\n    } else if (this.activeStatusStep4 === '0') {\n      this.renderDocumentRequirements();\n    } else {\n      this.renderDocumentRequirements();\n    }\n  }\n\n  // apply filter step 5\n  applyFiltersPinPrice(activeStatusStep5) {\n    this.loadtablePINPriceData = true;\n    this.activeStatusStep5 = activeStatusStep5;\n    this.renderDetailPINPrice();\n  }\n\n  // apply filter step 6\n  applyFilter(statusfilter) {\n    this.loadtableMappStudyProgramData = true;\n    this.statusfilter = statusfilter;\n    this.renderDetailStudyProgramMapping();\n  }\n\n  goToStep1() {\n    this.wizard.navigation.goToStep(1);\n    this.renderExamTimeCBT();\n    this.renderExamTimePsikotest();\n    this.renderExamTimeInterview();\n    this.renderExamTimeTPA();\n    // this.renderExamTimeCBTDetails();\n    // this.dtTrigger5.next();\n    this.tableExamCBTDetails = [];\n  }\n\n  goToStep2() {\n    this.wizard.navigation.goToStep(1);\n    this.loadtableExamTimeData = true;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1`).subscribe(response => {\n      setTimeout(() => {\n        this.dtTrigger1.next();\n        this.loadtableExamTimeData = false;\n      }, 3000);\n    }, err => {\n      this.loadtableExamTimeData = false;\n    });\n  }\n\n  goToStep3() {\n    this.wizard.navigation.goToStep(2);\n    this.activeStatusStep4 = '1';\n    this.renderDocumentRequirements();\n  }\n\n  goToStep5() {\n    this.wizard.navigation.goToStep(3);\n    this.activeStatusStep5 = '1';\n    this.renderDetailPINPrice();\n    this.checkActivePinPrice();\n  }\n\n  goToStep6() {\n    this.wizard.navigation.goToStep(4);\n    this.statusfilter = '1';\n    this.renderDetailStudyProgramMapping();\n    this.loadStudyProgramData();\n  }\n\n  getTableExamCBT() {\n    this.loadtableExamCBT = true;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1&exam_type_id=1`).subscribe(response => {\n      this.tableExamCBT = response.data;\n      this.dtTrigger.next();\n      this.loadtableExamCBT = false;\n    }, err => {\n      this.loadtableExamCBT = false;\n    });\n  }\n\n  getTableExamPsikotest() {\n    this.loadtableExamPsikotest = true;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1&exam_type_id=2`).subscribe(response => {\n      this.tableExamPsikotest = response.data;\n      this.dtTrigger1.next();\n      this.loadtableExamPsikotest = false;\n    }, err => {\n      this.loadtableExamPsikotest = false;\n    });\n  }\n\n  getTableExamInterview() {\n    this.loadtableExamInterview = true;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1&exam_type_id=3`).subscribe(response => {\n      this.tableExamInterview = response.data;\n      this.dtTrigger2.next();\n      this.loadtableExamInterview = false;\n    }, err => {\n      this.loadtableExamInterview = false;\n    });\n  }\n\n  getTableExamTPA() {\n    this.loadtableExamTPA = true;\n    this.chartService.getExamTimeDatas(`selection_path_id=${this.id}&active_status=1&exam_type_id=4`).subscribe(response => {\n      this.tableExamTPA = response.data;\n      this.dtTrigger3.next();\n      this.loadtableExamTPA = false;\n    }, err => {\n      this.loadtableExamTPA = false;\n    });\n  }\n\n  // load table step 4\n  getTableDocument() {\n    this.loadtableSelectionDocumentData = true;\n    if (this.activeStatusStep4 === '1') {\n      this.chartService.getSelectionDocument(`selection_id=${this.id}&active_status=true`).subscribe(response => {\n        this.tableDocumentReq = response.data;\n        this.dtTrigger4.next();\n        this.loadtableSelectionDocumentData = false;\n      }, err => {\n        this.loadtableSelectionDocumentData = false;\n      });\n    } else if (this.activeStatusStep4 === '0') {\n      this.chartService.getSelectionDocument(`selection_id=${this.id}&active_status=false`).subscribe(response => {\n        this.tableDocumentReq = response.data;\n        this.dtTrigger4.next();\n        this.loadtableSelectionDocumentData = false;\n      }, err => {\n        this.loadtableSelectionDocumentData = false;\n      });\n    } else {\n      this.chartService.getSelectionDocument(`selection_id=${this.id}`).subscribe(response => {\n        this.tableDocumentReq = response.data;\n        this.dtTrigger4.next();\n        this.loadtableSelectionDocumentData = false;\n      }, err => {\n        this.loadtableSelectionDocumentData = false;\n      });\n    }\n  }\n\n  // load table step 5\n  getTablePinPrice() {\n    this.loadtablePINPriceData = true;\n    if (this.activeStatusStep5 === '1' || this.activeStatusStep5 === '0') {\n      this.chartService.getPINPriceData(`selection_path_id=${this.id}&active_status=${this.activeStatusStep5 === '1' ? 'true' : 'false'}`).subscribe(response => {\n        setTimeout(() => {\n          this.tablePinPrice = response.data;\n          this.dtTrigger5.next();\n          this.loadtablePINPriceData = false;\n        }, 3000);\n      }, err => {\n        this.loadtablePINPriceData = false;\n      });\n    } else {\n      this.chartService.getPINPriceData(`selection_path_id=${this.id}`).subscribe(response => {\n        setTimeout(() => {\n          this.tablePinPrice = response.data;\n          this.dtTrigger5.next();\n          this.loadtablePINPriceData = false;\n        }, 3000);\n      }, err => {\n        this.loadtablePINPriceData = false;\n      });\n    }\n  }\n\n  // load table step 6\n  getTableStudyProgram() {\n    this.loadtableMappStudyProgramData = true;\n    if (this.statusfilter == '1' || this.statusfilter == '0') {\n      this.chartService.getMappingProgramStudyData(`selection_path_id=${this.id}&active_status=${this.statusfilter === '1' ? 'true' : 'false'}`).subscribe(response => {\n        setTimeout(() => {\n          this.tableStudyProgram = response.data;\n          this.dtTrigger6.next();\n          this.loadtableMappStudyProgramData = false;\n        }, 3000);\n      }, err => {\n        this.loadtableMappStudyProgramData = false;\n      });\n    } else {\n      this.chartService.getMappingProgramStudyData(`selection_path_id=${this.id}`).subscribe(response => {\n        setTimeout(() => {\n          this.tableStudyProgram = response.data;\n          this.dtTrigger6.next();\n          this.loadtableMappStudyProgramData = false;\n        }, 3000);\n      }, err => {\n        this.loadtableMappStudyProgramData = false;\n      });\n    }\n  }\n\n  getTableStudyProgramAll() {\n    this.loadTableMapping = true;\n    this.chartService.getProgramStudyDataWithParams(`?selection_path_id=${this.id}&show_all=0`).subscribe(response => {\n      setTimeout(() => {\n        this.tableStudyProgramMapping = response;\n        this.dtTrigger7.next();\n        this.loadTableMapping = false;\n      }, 3000);\n    }, err => {\n      this.loadTableMapping = false;\n    });\n  }\n\n  // check length active data pin price in step 4\n  checkActivePinPrice() {\n    this.chartService.getPINPriceData(`selection_path_id=${this.id}&active_status=true`).subscribe(response => {\n      if (response.data.length === 2) {\n        this.isDataPinPriceActive = true;\n        this.disabledGotoMapingProdi = false;\n      } else {\n        this.isDataPinPriceActive = false;\n        this.disabledGotoMapingProdi = true;\n      }\n    });\n  }\n\n  // load table step 6 -- button mapping all\n  getTableStudyProgramMappingData() {\n    this.loadTableMapping = true;\n\n    // Check jika pada api ini ada studi program yg aktif\n    this.chartService.getMappingProgramStudyData(`selection_path_id=${this.id}&active_status=true`).subscribe(response => {\n      if (response.data.length !== 0) {\n        const dataProdiMappingBefore = response.data;\n        const obj = {};\n        dataProdiMappingBefore.forEach(o => obj[o.id] = o);\n        const unique_array2 = Object.keys(obj).map(k => obj[k]);\n        const matches = [];\n\n        // Check jika id prodi telah digunakan pada api diatas dan slice jika datanya sudah ada\n        this.chartService.getProgramStudyData().subscribe(response => {\n          let dataMappingProdiAfter = response;\n          // this.dtTrigger5.next();\n          dataMappingProdiAfter.forEach(o1 => unique_array2.forEach(o2 => {\n            if (o1.id == o2.study_program_id) {\n              matches.push(o1);\n              this.chartService.getProgramStudyData().subscribe(resp => {\n                let dataMappingCheck = resp;\n                if (matches.length !== 0) {\n                  for (let i = 0; i < matches.length; i++) {\n                    const findIndexStudyProgram = dataMappingCheck.findIndex(x => x.id === matches[i].id);\n                    if (findIndexStudyProgram > -1) {\n                      dataMappingCheck.splice(findIndexStudyProgram, 1);\n                      this.tableStudyProgramMapping = dataMappingCheck;\n                      this.loadTableMapping = false;\n                    }\n                  }\n                }\n              });\n            }\n          }))\n        });\n      } else {\n        this.chartService.getProgramStudyData().subscribe(response => {\n          setTimeout(() => {\n            this.tableStudyProgramMapping = response;\n            this.dtTrigger7.next();\n            this.loadTableMapping = false;\n          }, 3000);\n        }, err => {\n          this.loadTableMapping = false;\n        });\n      }\n    });\n  }\n\n  closeStudyProgramMapping() {\n    this.studyProgramMappingData.hide();\n    this.mappingStudyProgramForm.patchValue({ quota: '' })\n    this.mappingStudyProgramForm.patchValue({ sdp: '' });\n    this.renderMappStudyProgramForm();\n  }\n\n  // render table location step 2\n  renderExamTimeCBT(): void {\n    if (this.tableExamCBT.length === 0) {\n      this.getTableExamCBT();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 0) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableExamCBT();\n          });\n        }\n      });\n    }\n  }\n\n  // renderExamTimeCBTDetails(): void {\n  //   if (this.tableExamCBTDetails.length == 0) {\n  //     this.loadDetailsCBTData(this.examId);\n  //   } else {\n  //     this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n  //       if (index == 4) {\n  //         dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n  //           dtInstance.destroy();\n  //           this.loadDetailsCBTData(this.examId);\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n\n  // render table exam time step 2\n  renderExamTimePsikotest(): void {\n    if (this.tableExamPsikotest.length === 0) {\n      this.getTableExamPsikotest();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 1) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableExamPsikotest();\n          });\n        }\n      });\n    }\n  }\n\n  renderExamTimeInterview(): void {\n    if (this.tableExamInterview.length === 0) {\n      this.getTableExamInterview();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 2) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableExamInterview();\n          });\n        }\n      });\n    }\n  }\n\n  renderExamTimeTPA(): void {\n    if (this.tableExamTPA.length === 0) {\n      this.getTableExamTPA();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 3) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableExamTPA();\n          });\n        }\n      });\n    }\n  }\n\n  // render table registration steps step 3\n  // renderRegStep(): void {\n  //   this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n  //     if (index == 2) {\n  //       dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n  //         dtInstance.destroy();\n  //       });\n  //     }\n  //   });\n  // }\n\n  // render table document requirements step 4\n  renderDocumentRequirements(): void {\n    if (this.tableDocumentReq.length == 0) {\n      this.getTableDocument();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 4) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableDocument();\n          });\n        }\n      });\n    }\n  }\n\n  // render table pin price step 5\n  renderDetailPINPrice(): void {\n    if (this.tablePinPrice.length == 0) {\n      this.getTablePinPrice();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 5) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTablePinPrice();\n          });\n        }\n      });\n    }\n  }\n\n  // render table mapping study step 6\n  renderDetailStudyProgramMapping(): void {\n    if (this.tableStudyProgram.length == 0) {\n      this.getTableStudyProgram();\n    } else {\n      this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n        if (index == 6) {\n          dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n            dtInstance.destroy();\n            this.getTableStudyProgram();\n          });\n        }\n      });\n    }\n  }\n\n  // render table mapping study all step 6\n  renderMappStudyProgramForm(): void {\n    this.dtElements.forEach((dtElement: DataTableDirective, index: number) => {\n      if (index == 7) {\n        dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n          dtInstance.destroy();\n        });\n      }\n    });\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectionDataComponent } from './selection-data.component';\nimport { SelectionDataRoutingModule } from './selection-data-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ArchwizardModule } from 'ng2-archwizard/dist';\nimport { DataTablesModule } from 'angular-datatables';\nimport { NgbTooltipModule ,NgbDatepickerModule, NgbTimepicker } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CurrencyPipe } from '@angular/common';\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\n@NgModule({\n  declarations: [SelectionDataComponent],\n  imports: [\n    CommonModule,\n    SelectionDataRoutingModule,\n    SharedModule,\n    ArchwizardModule,\n    DataTablesModule,\n    NgbTooltipModule,NgbDatepickerModule,\n    FormsModule,ReactiveFormsModule,\n    CurrencyMaskModule\n  ],\n  providers: [CurrencyPipe]\n})\nexport class SelectionDataModule { }\n"],"sourceRoot":"webpack:///","file":"selection-data-selection-data-module-es5.js"}