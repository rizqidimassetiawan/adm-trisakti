{"version":3,"sources":["src/app/_services/admin-management.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TokenFactory } from '../_classes/token.factory';\nimport { HttpClient } from '@angular/common/http';\nimport { BaseService } from './base.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminManagementService extends BaseService{\n  private namespace = 'admin_manage';\n  private tokenFactory = new TokenFactory();\n\n  constructor(\n    http: HttpClient,\n    private router: Router\n  ) {\n    super(http);\n  }\n\n  getProgramData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_program_data');\n    return this.http.post(url, body);\n  }\n\n  postProgramData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_program_data');\n    return this.http.post(url, body);\n  }\n\n  updProgramData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_program_data');\n    return this.http.post(url, body);\n  }\n\n  getSelectionPathData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_selection_path',contextParams);\n    return this.http.get(url);\n  }\n\n  getSelectionPathDetailData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_selection_path_detail',contextParams);\n    return this.http.get(url);\n  }\n\n  postSelectionPathData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_selection_path');\n    return this.http.post(url, body);\n  }\n\n  updSelectionPathData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_selection_path');\n    return this.http.post(url, body);\n  }\n\n  getExamLocationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_location_data');\n    return this.http.post(url, body);\n  }\n\n  postExamLocationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_exam_location_data');\n    return this.http.post(url, body);\n  }\n\n  updExamLocationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_exam_location_data');\n    return this.http.post(url, body);\n  }\n\n  getNationalityData(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_nationality');\n    return this.http.get(url);\n  }\n\n  getCityData(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_city', params);\n    return this.http.get(url);\n  }\n\n  getRegistrationStepData(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_registration_step');\n    return this.http.get(url);\n  }\n\n  getSelectionStepData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_selection_step',contextParams);\n    return this.http.get(url);\n  }\n\n  postSelectionStepData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_registration_step');\n    return this.http.post(url, body);\n  }\n\n  updSelectionStepData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_registration_step');\n    return this.http.post(url, body);\n  }\n\n  getDocumentTypeData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_document_type');\n    return this.http.post(url, body);\n  }\n\n  getSelectionDocument(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_selection_document',contextParams);\n    return this.http.get(url);\n  }\n\n  postSelectionDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_selection_document');\n    return this.http.post(url, body);\n  }\n\n  updSelectionDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_selection_document');\n    return this.http.post(url, body);\n  }\n\n  postMappSelectionLocationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_mapp_selection_location');\n    return this.http.post(url, body);\n  }\n\n  getGender(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_gender');\n    return this.http.get(url);\n  }\n\n  getQuestionnaireData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_questionnaire',contextParams);\n    return this.http.get(url);\n  }\n\n  postQuestionnaireData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_questionnaire');\n    return this.http.post(url, body);\n  }\n\n  updQuestionnaireData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_questionnaire');\n    return this.http.post(url, body);\n  }\n\n  getQuestionAnswerData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_question_answer',contextParams);\n    return this.http.get(url);\n  }\n\n  getExamLocationSelectionData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_location_selection',contextParams);\n    return this.http.get(url);\n  }\n  getExamLocationSelectionDatas(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_location_selections',contextParams);\n    return this.http.get(url);\n  }\n\n  postExamLocationSelectionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_exam_location_selection');\n    return this.http.post(url, body);\n  }\n\n  updExamLocationSelectionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_exam_location_selection');\n    return this.http.post(url, body);\n  }\n\n  getExamTimeData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_time',contextParams);\n    return this.http.get(url);\n  }\n\n  getExamTimeDatas(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_times',contextParams);\n    return this.http.get(url);\n  }\n\n  postExamTimeData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_exam_time');\n    return this.http.post(url, body);\n  }\n\n  updExamTimeData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_exam_time');\n    return this.http.post(url, body);\n  }\n\n  getPINPriceData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_pin_price',contextParams);\n    return this.http.get(url);\n  }\n\n  postPINPriceData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_pin_price');\n    return this.http.post(url, body);\n  }\n\n  updPINPriceData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_pin_price');\n    return this.http.post(url, body);\n  }\n\n  getMappingProgramStudyData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_mapp_study_program',contextParams);\n    return this.http.get(url);\n  }\n\n  postMappingProgramStudyData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_mapp_study_program');\n    return this.http.post(url, body);\n  }\n\n  updMappingProgramStudyData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_mapp_study_program');\n    return this.http.post(url, body);\n  }\n\n  getProgramStudyData(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_study_program');\n    return this.http.get(url);\n  }\n\n  getProgramStudyDataWithParams(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_study_program', params);\n    return this.http.get(url);\n  }\n\n  getFacultyData(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_faculty');\n    return this.http.get(url);\n  }\n\n  getParticipantList(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_list',contextParams);\n    return this.http.get(url);\n  }\n\n  getParticipantListDetail(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_list_detail',contextParams);\n    return this.http.get(url);\n  }\n\n  getParticipantPaymentList(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_payment_list',contextParams);\n    return this.http.get(url);\n  }\n\n  getParticipantRegistApprove(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_approve',contextParams);\n    return this.http.get(url);\n  }\n\n  getRegistrationProgramStudy(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_registration_program_study',contextParams);\n    return this.http.get(url);\n  }\n\n  getRegistrationDocument(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_registration_document',contextParams);\n    return this.http.get(url);\n  }\n\n  getParticipantDetailData(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_detail',contextParams);\n    return this.http.get(url);\n  }\n\n  getPaymentMethodData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_payment_method');\n    return this.http.get(url);\n  }\n\n  getQuestionTypeData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_question_type');\n    return this.http.get(url);\n  }\n\n  getQuestionData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_question',contextParams);\n    return this.http.get(url);\n  }\n\n  postQuestionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_question');\n    return this.http.post(url, body);\n  }\n\n  upQuestionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_question');\n    return this.http.post(url, body);\n  }\n\n  getPaymentStatusData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_payment_status');\n    return this.http.get(url);\n  }\n\n  getParticipantPassData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_pass',contextParams);\n    return this.http.get(url);\n  }\n\n  upRegistrationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_registration');\n    return this.http.post(url, body);\n  }\n\n  getAnswerOptionData(contextParams): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_answer_option',contextParams);\n    return this.http.get(url);\n  }\n\n  postAnswerOptionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_answer_option');\n    return this.http.post(url, body);\n  }\n\n  upAnswerOptionData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_answer_option');\n    return this.http.post(url, body);\n  }\n\n  postupdRegistrationResultData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_up_registration_result');\n    return this.http.post(url, body);\n  }\n\n  updDocumentRegistrationData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_document_participant');\n\n    return this.http.post(url, body);\n  }\n\n  getExamTypeData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_exam_type');\n    return this.http.get(url);\n  }\n\n  getCategoryIdData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_category_id');\n    return this.http.get(url);\n  }\n\n  getExcelParticipantListData(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 'dwn_excel_participant_list',contextParams);\n    return this.http.get(url);\n  }\n\n  getExcelParticipantPaymentListData(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 'dwn_excel_participant_payment',contextParams);\n    return this.http.get(url);\n  }\n\n  getExcelParticipantResultListData(contextParams):Observable<any> {\n    const url = this.getUrl(this.namespace, 'dwn_excel_participant_result',contextParams);\n    return this.http.get(url);\n  }\n\n  getActiveStatusData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_active_status');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerSelectionPathData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_path');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerStudyProgramData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_stupro');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerStudyProgramDataFilters(params):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_stupro_filters', params);\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerGenderData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_gender');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerProvinceData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_prov');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerCityData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_city');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerSchoolData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_school');\n    return this.http.get(url);\n  }\n\n  getReportingSelectionPathActiveData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_selection_path_active');\n    return this.http.get(url);\n  }\n\n  getReportingPINBuyerData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_buyer_PIN');\n    return this.http.get(url);\n  }\n\n  getReportingProgramActiveData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_program_active');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerStepData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_step');\n    return this.http.get(url);\n  }\n\n  getReportingParticipantPerStepDataFilters(params):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_participant_per_step_filters', params);\n    return this.http.get(url);\n  }\n\n  getReportingActiveProgramStudyData():Observable<any> {\n    const url = this.getUrl(this.namespace, 're_reporting_active_program_study');\n    return this.http.get(url);\n  }\n\n  getEducationLast(params):Observable<any> {\n    const url = this.getUrl(this.namespace, 're_education_last', params);\n    return this.http.get(url);\n  }\n\n  insertBulkRegistrationResult(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_insert_bulk_reg_result');\n    return this.http.post(url, body);\n  }\n\n  exportParticipantRegistrationExcel(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_export_participant_reg_excel');\n    return this.http.post(url, body);\n  }\n\n  getParticipantPagination(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_pagination', params);\n    return this.http.get(url);\n  }\n\n  getPaymentPagination(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_payment_pagination', params);\n    return this.http.get(url);\n  }\n\n  getResultPagination(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_result_pagination', params);\n    return this.http.get(url);\n  }\n\n  getSelectionYear(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_path_year', params);\n    return this.http.get(url);\n  }\n\n  getCategorySelectionProgram(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_category_program');\n    return this.http.get(url);\n  }\n\n  getSelectionPathAdmin(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_selection_path_admin', params);\n    return this.http.get(url);\n  }\n\n  getStudyPrograms(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_study_program_all');\n    return this.http.get(url);\n  }\n\n  getMappingPathYear(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_mapping_path_year');\n    return this.http.get(url);\n  }\n\n  postMappingPathYear(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_mapping_path_year');\n    return this.http.post(url, body);\n  }\n\n  updMappingPathYear(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'upd_mapping_path_year');\n    return this.http.post(url, body);\n  }\n\n  delMappingPathYear(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_mapping_path_year');\n    return this.http.post(url, body);\n  }\n\n  exportPostGraduateExcel(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_export_postgraduate_excel');\n    return this.http.post(url, body);\n  }\n\n  getAnnouncementData(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_announcement_card');\n    return this.http.get(url);\n  }\n\n  postAnnouncementData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_announcement_card');\n    return this.http.post(url, body);\n  }\n\n  updateAnnouncementData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_announcement_card');\n    return this.http.post(url, body);\n  }\n  deleteAnnouncementData(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_announcement_card');\n    return this.http.post(url, body);\n  }\n\n  getSessionPathExamDetails(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_session_path_exam', params);\n    return this.http.get(url);\n  }\n\n  createOrUpdateSessionPathExamDetails(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_session_path_exam');\n    return this.http.post(url, body);\n  }\n\n  createRaportRequirementDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_raport_requirement_document');\n    return this.http.post(url, body);\n  }\n\n  updateRaportRequirementDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'upd_raport_requirement_document');\n    return this.http.post(url, body);\n  }\n\n  getRaportRequirementDocument(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_raport_requirement_document', params);\n    return this.http.get(url);\n  }\n  \n  createUtbkRequirementDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_utbk_requirement_document');\n    return this.http.post(url, body);\n  }\n  \n  updateUtbkRequirementDocument(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'upd_utbk_requirement_document');\n    return this.http.post(url, body);\n  }\n\n  getUtbkRequirementDocument(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_utbk_requirement_document', params);\n    return this.http.get(url);\n  }\n  createMappingPathYearIntake(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_mapping_path_year_intake');\n    return this.http.post(url, body);\n  }\n\n  updateMappingPathYearIntake(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'upd_mapping_path_year_intake');\n    return this.http.post(url, body);\n  }\n\n  delMappingPathYearIntake(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_mapping_path_year_intake');\n    return this.http.post(url, body);\n  }\n\n  getMappingPathYearIntake(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 'get_mapping_path_year_intake', params);\n    return this.http.get(url);\n  }\n\n  getVerificationTransactionPicklist(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_verification_transaction_picklist');\n    return this.http.get(url);\n  }\n\n  getPassingGradeData(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_passing_grade', params);\n    return this.http.get(url);\n  }\n\n  updatePassingGrade(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'upd_passing_grade');\n    return this.http.post(url, body);\n  }\n\n  createPassingGrade(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_passing_grade');\n    return this.http.post(url, body);\n  }\n\n  createParticipantPassingGradeFaculty(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_participant_passinggrade_faculty');\n    return this.http.post(url, body);\n  }\n\n  createParticipantPassingGradeUniversity(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_participant_passinggrade_university');\n    return this.http.post(url, body);\n  }\n\n  \n  getPassingGradeUniversity(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_approval_participant_score', params);\n    return this.http.get(url);\n  }\n  \n  createMoodleCategory(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_moodle_category');\n    return this.http.post(url, body);\n  }\n\n  deleteMoodleCategory(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_moodle_category');\n    return this.http.post(url, body);\n  }\n\n  getCategoryMoodle(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_categories_moodle', params);\n    return this.http.get(url);\n  }\n\n  insertMoodleCourse(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_moodle_course');\n    return this.http.post(url, body);\n  }\n\n  deleteMoodleCourse(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_moodle_course');\n    return this.http.post(url, body);\n  }\n\n  getMoodleCourse(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_moodle_course', params);\n    return this.http.get(url);\n  }\n\n  insertMoodleQuiz(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_moodle_quiz');\n    return this.http.post(url, body);\n  }\n\n  deleteMoodleQuiz(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_moodle_quiz');\n    return this.http.post(url, body);\n  }\n\n  getMoodleQuiz(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_moodle_quiz', params);\n    return this.http.get(url);\n  }\n\n  insertMoodleSection(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_moodle_section');\n    return this.http.post(url, body);\n  }\n\n  getMoodleSection(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_moodle_section', params);\n    return this.http.get(url);\n  }\n\n  insertMoodleGroup(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_moodle_group');\n    return this.http.post(url, body);\n  }\n\n  \n  getMoodleGroup(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_moodle_group', params);\n    return this.http.get(url);\n  }\n\n  getDocumentNewStudent(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 'get_document_newstudent', params);\n    return this.http.get(url);\n  }\n\n  getNewStudentDocument(): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_new_student_doc_type');\n    return this.http.get(url);\n  }\n\n  createMappingDocNewStudent(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_mapping_doc_new_student');\n    return this.http.post(url, body);\n  }\n  \n  deleteMappingDocNewStudent(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'del_mapping_doc_new_student');\n    return this.http.post(url, body);\n  }\n  \n  createRegistrationResultProgramStudy(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'cr_registration_result_prodi');\n    return this.http.post(url, body);\n  }\n\n  updateApprovalStatusDocumentStudent(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_approval_status_new_student');\n    return this.http.post(url, body);\n  }\n\n  updateRejectedStatusDocumentStudent(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_rejected_status_new_student');\n    return this.http.post(url, body);\n  }\n  \n  getProgramStudyByFacultyAdmin(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_program_study_by_admin_faculty', params);\n    return this.http.get(url);\n  }\n  \n  updateCreditTransferAdmin(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'up_mapping_credit_transfer');\n    return this.http.post(url, body);\n  }\n  \n  getCreditTransferResult(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 'get_credit_transfer_equalization', params);\n    return this.http.get(url);\n  }\n  \n  getStudyProgramPassingGrade(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 'get_program_study_passing_grade_with_selection_path', params);\n    return this.http.get(url);\n  }\n  \n  insertStudentIdEmailStudent(body): Observable<any> {\n    const url = this.getUrl(this.namespace, 'insert_student_id_and_email');\n    return this.http.post(url, body);\n  }\n\n  getMoodleExamGrades(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 'get_moodle_exam_grades', params);\n    return this.http.get(url);\n  }\n  // dummy data\n  getParticipantScoreData(params): Observable<any> {\n    const url = this.getUrl(this.namespace, 're_participant_score', params);\n    return this.http.get(url);\n  }\n\n  getDataTipeUjian(): Observable<any> {\n    return this.getApi('fake-data/tipe-ujian.json');\n  }\n\n  getDataFormulir(): Observable<any> {\n    return this.getApi('fake-data/list-formulir.json');\n  }\n  getDataMinat(): Observable<any> {\n    return this.getApi('fake-data/list-minat.json');\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~adm-mr-detail-verification-document-data-adm-mr-detail-verification-document-data-module~app~e6f7a6d2-es5.js"}