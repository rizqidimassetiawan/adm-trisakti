{"version":3,"sources":["src/app/theme/auth/reset-password/reset-password.component.html","src/app/theme/auth/reset-password/reset-password-routing.module.ts","src/app/theme/auth/reset-password/reset-password.component.scss","src/app/theme/auth/reset-password/reset-password.component.ts","src/app/theme/auth/reset-password/reset-password.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"auth-wrapper align-items-stretch aut-bg-img\\\">\\n  <app-card cardTitle=\\\"{{'CONTENT.personal_document' | translate}}\\\" headerClass=\\\"text-center text-lg-left\\\" class=\\\"col-md-6 center-cards align-self-center\\\" [hidHeader]=\\\"true\\\">\\n    <div>\\n      <div class=\\\"container row text-center\\\">\\n          <div>\\n            <!-- <img class=\\\"center-block\\\" src=\\\"assets/images/telkom_university.png\\\" style=\\\"max-width: 15%;\\\" /> -->\\n          </div>\\n      </div>\\n      <br>\\n      <div>\\n        <h5 style=\\\"text-align:center\\\">\\n          {{ 'CONTENT.forgot-password-2' | translate }}\\n        </h5>\\n      </div>\\n      <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup] = \\\"resetPasswordForm\\\" (ngSubmit)= \\\"updateResetPassword()\\\">\\n        <div class=\\\"form-group mb-2\\\">\\n          <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.new-password' | translate }}</label>\\n            <input type=\\\"password\\\" maxLength=\\\"12\\\" class=\\\"form-control form-control-sm\\\" id=\\\"password\\\" formControlName=\\\"password\\\" [placeholder]=\\\"'CONTENT.password' | translate\\\" (ngModelChange)=\\\"changeStrengthbar($event)\\\"/>\\n            <div class=\\\"strength\\\">\\n              <ul class=\\\"strengthBar\\\">\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar0\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar1\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar2\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar3\\\"></li>\\n              </ul>\\n              <h6 [style.color]=\\\"msgColor\\\">{{msg}}</h6>\\n              <label *ngIf=\\\"passWeak\\\" class=\\\"error text-danger small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passFair\\\" class=\\\"error text-warning small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passGood\\\" class=\\\"error text-info small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passStrong\\\" class=\\\"error text-success small form-text\\\">{{ messageReturn }}</label>\\n            </div>\\n            <!-- <app-password-strength [passwordToCheck]=\\\"resetPasswordForm.value.password\\\" (passwordStrength)=\\\"passwordValid($event)\\\"></app-password-strength> -->\\n      </div>\\n      <div class=\\\"form-group mb-2\\\">\\n          <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.new-password-confirmation' | translate }}</label>\\n          <input type=\\\"password\\\" (input)=\\\"checkPasswordRepeat($event)\\\" class=\\\"form-control form-control-sm\\\" id=\\\"passwordRepeat\\\" formControlName=\\\"passwordRepeat\\\" placeholder=\\\"Ulangi pengisian password\\\"\\n          />\\n          <div *ngIf=\\\"resetPasswordForm.controls.passwordRepeat.touched\\\">\\n          <label *ngIf=\\\"!passwordRepeatIsValid\\\" class=\\\"small form-text text-danger\\\" id=\\\"validation-passwordRepeat-error\\\"\\n          >{{ 'CONTENT.password-match' | translate}}</label>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group mb-0 mt-4 text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!(resetPasswordForm.valid && passwordIsValid && passwordRepeatIsValid)\\\">\\n          <i class=\\\"icofont icofont-key\\\"></i> {{ 'CONTENT.change-password' | translate }}\\n        </button>\\n      </div>\\n      </form>\\n  </div>\\n  </app-card>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResetPasswordComponent } from './reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ResetPasswordRoutingModule { }\n","export default \".strengthBar {\\n  display: inline;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: 2px;\\n}\\n\\n.point:last-of-type {\\n  margin: 0 !important;\\n}\\n\\n.point {\\n  background: #DDD;\\n  border-radius: 2px;\\n  display: inline-block;\\n  height: 5px;\\n  margin-right: 1px;\\n  width: 62px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZXYvRG9jdW1lbnRzL2FkbS10cmlzYWt0aS9zcmMvYXBwL3RoZW1lL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3RoZW1lL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxvQkFBQTtBQ0VGOztBRENBO0VBQ0UsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvdGhlbWUvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdHJlbmd0aEJhciB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogMnB4O1xufVxuLnBvaW50Omxhc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xufVxuXG4ucG9pbnQge1xuICBiYWNrZ3JvdW5kOiAjREREO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiA1cHg7XG4gIG1hcmdpbi1yaWdodDogMXB4O1xuICB3aWR0aDogNjJweDtcbn1cbiIsIi5zdHJlbmd0aEJhciB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogMnB4O1xufVxuXG4ucG9pbnQ6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5wb2ludCB7XG4gIGJhY2tncm91bmQ6ICNEREQ7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDVweDtcbiAgbWFyZ2luLXJpZ2h0OiAxcHg7XG4gIHdpZHRoOiA2MnB4O1xufSJdfQ== */\"","import { TranslateService } from '@ngx-translate/core';\nimport { BroadcasterService } from 'src/app/_services/broadcaster.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { OauthService } from 'src/app/_services/oauth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport { ParticipantService } from 'src/app/_services/participant.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public email: string;\n  public password: string;\n  public resetPasswordForm: FormGroup;\n  public loading: boolean;\n  public lang: string;\n  public passwordIsValid :boolean;\n  public passwordRepeatIsValid : boolean;\n  public position = 'top-right';\n  public title: string;\n  public msg: string;\n  public showClose = true;\n  public theme = 'bootstrap';\n  public type = 'default';\n  public closeOther = false;\n  public passwordHidden = true\n  public id: string;\n  public token: string;\n  public username:any;\n  public bar0: string;\n  public bar1: string;\n  public bar2: string;\n  public bar3: string;\n  public msgColor: string;\n  public passwordRepeatVar: string;\n\n  // lang\n  public messageReturn: string;\n  public passGood: boolean;\n  public passWeak: boolean;\n  public passFair: boolean;\n  public passStrong: boolean;\n  private colors = ['darkred','orange','steelblue', 'yellowgreen'];\n\n  constructor(\n    private oauthService: OauthService,\n    private router: Router,\n    private fb: FormBuilder,\n    private broadcasterService: BroadcasterService,\n    private translateService: TranslateService,\n    private chartService: ParticipantService,\n    private route: ActivatedRoute,\n  ) {\n    this.resetPasswordForm = this.fb.group ({\n      password: new FormControl('', Validators.required),\n      passwordRepeat:['',Validators.required],\n    });\n    this.passFair = false;\n    this.passGood = false;\n    this.passWeak = false;\n    this.passStrong = false;\n    this.loading = false;\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.lang = localStorage.getItem('lang');\n    translateService.setDefaultLang(localStorage.getItem('lang'));\n    broadcasterService.changeLangBroadcast$.subscribe(res => {\n      translateService.setDefaultLang(res.lang);\n    });\n  }\n\n  ngOnInit() {\n    this.passwordIsValid = false;\n  }\n\n  passwordValid(event) {\n    this.passwordIsValid = event;\n  }\n\n  checkPasswordRepeat(event) {\n      if(event.target.value == this.resetPasswordForm.controls.password.value) {\n        this.passwordRepeatIsValid = true;\n      } else {\n        this.passwordRepeatIsValid = false;\n      }\n\n  }\n\n  checkStrength(p) {\n    // 1\n    let force = 0;\n\n    // 2\n    const regex = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\n    const lowerLetters = /[a-z]+/.test(p);\n    const upperLetters = /[A-Z]+/.test(p);\n    const numbers = /[0-9]+/.test(p);\n    const symbols = regex.test(p);\n\n    // 3\n    const flags = [lowerLetters, upperLetters, numbers, symbols];\n\n    // 4\n    let passedMatches = 0;\n    for (const flag of flags) {\n      passedMatches += flag === true ? 1 : 0;\n    }\n\n    // 5\n    force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n    force += passedMatches * 10;\n\n    // 6\n    force = (p.length <= 7) ? Math.min(force, 10) : force;\n\n    // 7\n    force = (passedMatches === 1) ? Math.min(force, 10) : force;\n    force = (passedMatches === 2) ? Math.min(force, 20) : force;\n    force = (passedMatches === 3) ? Math.min(force, 30) : force;\n    force = (passedMatches === 4) ? Math.min(force, 40) : force;\n\n    return force;\n  }\n\n  changeStrengthbar(x) {\n    const password = x;\n    this.setBarColors(4, '#DDD');\n    if (password) {\n      const c = this.getColor(this.checkStrength(password));\n      if (this.resetPasswordForm.controls.passwordRepeat.value != undefined) {\n        if (this.resetPasswordForm.controls.passwordRepeat.value == this.resetPasswordForm.controls.password.value) {\n          this.passwordRepeatIsValid = true;\n        } else {\n          this.passwordRepeatIsValid = false;\n        }\n      }\n      this.setBarColors(c.index, c.color);\n      const pwdStrength = this.checkStrength(password);\n      pwdStrength === 40 ? true : false;\n      switch (pwdStrength) {\n        case 10:\n          this.passWeak = true;\n          this.passStrong = false;\n          this.passGood = false;\n          this.passFair = false;\n          this.msg = 'Password Strength is Weak';\n          this.messageReturn = 'Password must includes 8-12 characters, at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 20:\n          this.passWeak = false;\n          this.passStrong = false;\n          this.passGood = false;\n          this.passFair = true;\n          this.msg = 'Password Strength is Fair';\n          this.messageReturn = 'Password must includes 8-12 characters at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 30:\n          this.passWeak = false;\n          this.passStrong = false;\n          this.passGood = true;\n          this.passFair = false;\n          this.msg = 'Password Strength is Good';\n          this.messageReturn = 'Password must includes 8-12 characters, at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 40:\n          this.passWeak = false;\n          this.passStrong = true;\n          this.passGood = false;\n          this.passFair = false;\n          this.passwordValid(x);\n          this.msg = 'Password Strength is Strong';\n          this.messageReturn = 'Your password is great. Nice work!'\n          break;\n      }\n    } else {\n      this.msg = '';\n      this.messageReturn = '';\n    }\n  }\n\n  private getColor(s) {\n    let index = 0;\n    if (s === 10) {\n      index = 0;\n    } else if (s === 20) {\n      index = 1;\n    } else if (s === 30) {\n      index = 2;\n    } else if (s === 40) {\n      index = 3;\n    } else {\n      index = 4;\n    }\n    this.msgColor = this.colors[index];\n    return {\n      index: index + 1,\n      color: this.colors[index]\n    };\n  }\n\n  private setBarColors(count, col) {\n    for (let n = 0; n < count; n++) {\n      this['bar' + n] = col;\n    }\n  }\n\n  updateResetPassword() {\n    this.loading = true;\n    const updatePassword = {\n      password: this.resetPasswordForm.controls['password'].value\n    };\n    this.chartService.postResetPassword(`${this.id}/${this.token}`,updatePassword).subscribe(res => {\n      if (res.status == 'Success') {\n        this.loading = false;\n        Swal.fire({\n          title: res.status,\n          text: res.message,\n          type: 'success',\n          showConfirmButton: true,\n          allowOutsideClick: false,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#ffba57',\n        }).then((confirm) => {\n          if (confirm.value) {\n            this.router.navigate(['auth/login']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: res.status,\n          text: res.message,\n          type: 'error',\n          showConfirmButton: true,\n        });\n      }\n    });\n  }\n\n}\n","import { PasswordStrengthModule } from './../signup/password-strength/password-strength.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResetPasswordRoutingModule } from './reset-password-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ParticlesModule } from 'angular-particle';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastyModule } from 'ng2-toasty';\nimport { NgModule } from '@angular/core';\nimport { PasswordStrengthComponent } from './../signup/password-strength/password-strength.component';\n\n@NgModule({\n  declarations: [ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    ResetPasswordRoutingModule,\n    SharedModule,\n    ToastyModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    ParticlesModule,\n  ],\n  // entryComponents: [ResetPasswordComponent, PasswordStrengthComponent],\n  // exports: [PasswordStrengthComponent]\n})\nexport class ResetPasswordModule { }\n"],"sourceRoot":"webpack:///","file":"reset-password-reset-password-module-es5.js"}