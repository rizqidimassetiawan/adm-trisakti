{"version":3,"sources":["src/app/theme/auth/reset-password/reset-password.component.html","src/app/theme/auth/reset-password/reset-password-routing.module.ts","src/app/theme/auth/reset-password/reset-password.component.scss","src/app/theme/auth/reset-password/reset-password.component.ts","src/app/theme/auth/reset-password/reset-password.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"auth-wrapper align-items-stretch aut-bg-img\\\">\\n  <app-card cardTitle=\\\"{{'CONTENT.personal_document' | translate}}\\\" headerClass=\\\"text-center text-lg-left\\\" class=\\\"col-md-6 center-cards align-self-center\\\" [hidHeader]=\\\"true\\\">\\n    <div>\\n      <div class=\\\"container row text-center\\\">\\n          <div>\\n            <!-- <img class=\\\"center-block\\\" src=\\\"assets/images/telkom_university.png\\\" style=\\\"max-width: 15%;\\\" /> -->\\n          </div>\\n      </div>\\n      <br>\\n      <div>\\n        <h5 style=\\\"text-align:center\\\">\\n          {{ 'CONTENT.forgot-password-2' | translate }}\\n        </h5>\\n      </div>\\n      <form class=\\\"md-float-material form-material\\\" action=\\\"javascript:\\\" [formGroup] = \\\"resetPasswordForm\\\" (ngSubmit)= \\\"updateResetPassword()\\\">\\n        <div class=\\\"form-group mb-2\\\">\\n          <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.new-password' | translate }}</label>\\n            <input type=\\\"password\\\" maxLength=\\\"12\\\" class=\\\"form-control form-control-sm\\\" id=\\\"password\\\" formControlName=\\\"password\\\" [placeholder]=\\\"'CONTENT.password' | translate\\\" (ngModelChange)=\\\"changeStrengthbar($event)\\\"/>\\n            <div class=\\\"strength\\\">\\n              <ul class=\\\"strengthBar\\\">\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar0\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar1\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar2\\\"></li>\\n                <li class=\\\"point\\\" [style.background-color]=\\\"bar3\\\"></li>\\n              </ul>\\n              <h6 [style.color]=\\\"msgColor\\\">{{msg}}</h6>\\n              <label *ngIf=\\\"passWeak\\\" class=\\\"error text-danger small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passFair\\\" class=\\\"error text-warning small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passGood\\\" class=\\\"error text-info small form-text\\\">{{ messageReturn }}</label>\\n              <label *ngIf=\\\"passStrong\\\" class=\\\"error text-success small form-text\\\">{{ messageReturn }}</label>\\n            </div>\\n            <!-- <app-password-strength [passwordToCheck]=\\\"resetPasswordForm.value.password\\\" (passwordStrength)=\\\"passwordValid($event)\\\"></app-password-strength> -->\\n      </div>\\n      <div class=\\\"form-group mb-2\\\">\\n          <label class=\\\"form-label m-b-0 f-w-600\\\">{{ 'CONTENT.new-password-confirmation' | translate }}</label>\\n          <input type=\\\"password\\\" (input)=\\\"checkPasswordRepeat($event)\\\" class=\\\"form-control form-control-sm\\\" id=\\\"passwordRepeat\\\" formControlName=\\\"passwordRepeat\\\" placeholder=\\\"Ulangi pengisian password\\\"\\n          />\\n          <div *ngIf=\\\"resetPasswordForm.controls.passwordRepeat.touched\\\">\\n          <label *ngIf=\\\"!passwordRepeatIsValid\\\" class=\\\"small form-text text-danger\\\" id=\\\"validation-passwordRepeat-error\\\"\\n          >{{ 'CONTENT.password-match' | translate}}</label>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group mb-0 mt-4 text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!(resetPasswordForm.valid && passwordIsValid && passwordRepeatIsValid)\\\">\\n          <i class=\\\"icofont icofont-key\\\"></i> {{ 'CONTENT.change-password' | translate }}\\n        </button>\\n      </div>\\n      </form>\\n  </div>\\n  </app-card>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResetPasswordComponent } from './reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ResetPasswordRoutingModule { }\n","export default \".strengthBar {\\n  display: inline;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: 2px; }\\n\\n.point:last-of-type {\\n  margin: 0 !important; }\\n\\n.point {\\n  background: #DDD;\\n  border-radius: 2px;\\n  display: inline-block;\\n  height: 5px;\\n  margin-right: 1px;\\n  width: 62px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL1Byb2plY3QvdHJpc2FrdGkvYWRtLXRyaXNha3RpL3NyYy9hcHAvdGhlbWUvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsU0FBUztFQUNULFVBQVU7RUFDVixtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSxvQkFBb0IsRUFBQTs7QUFHdEI7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RoZW1lL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RyZW5ndGhCYXIge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IDJweDtcbn1cbi5wb2ludDpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbn1cblxuLnBvaW50IHtcbiAgYmFja2dyb3VuZDogI0RERDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDFweDtcbiAgd2lkdGg6IDYycHg7XG59XG4iXX0= */\"","import { TranslateService } from '@ngx-translate/core';\nimport { BroadcasterService } from 'src/app/_services/broadcaster.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { OauthService } from 'src/app/_services/oauth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport { ParticipantService } from 'src/app/_services/participant.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public email: string;\n  public password: string;\n  public resetPasswordForm: FormGroup;\n  public loading: boolean;\n  public lang: string;\n  public passwordIsValid :boolean;\n  public passwordRepeatIsValid : boolean;\n  public position = 'top-right';\n  public title: string;\n  public msg: string;\n  public showClose = true;\n  public theme = 'bootstrap';\n  public type = 'default';\n  public closeOther = false;\n  public passwordHidden = true\n  public id: string;\n  public token: string;\n  public username:any;\n  public bar0: string;\n  public bar1: string;\n  public bar2: string;\n  public bar3: string;\n  public msgColor: string;\n  public passwordRepeatVar: string;\n\n  // lang\n  public messageReturn: string;\n  public passGood: boolean;\n  public passWeak: boolean;\n  public passFair: boolean;\n  public passStrong: boolean;\n  private colors = ['darkred','orange','steelblue', 'yellowgreen'];\n\n  constructor(\n    private oauthService: OauthService,\n    private router: Router,\n    private fb: FormBuilder,\n    private broadcasterService: BroadcasterService,\n    private translateService: TranslateService,\n    private chartService: ParticipantService,\n    private route: ActivatedRoute,\n  ) {\n    this.resetPasswordForm = this.fb.group ({\n      password: new FormControl('', Validators.required),\n      passwordRepeat:['',Validators.required],\n    });\n    this.passFair = false;\n    this.passGood = false;\n    this.passWeak = false;\n    this.passStrong = false;\n    this.loading = false;\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.lang = localStorage.getItem('lang');\n    translateService.setDefaultLang(localStorage.getItem('lang'));\n    broadcasterService.changeLangBroadcast$.subscribe(res => {\n      translateService.setDefaultLang(res.lang);\n    });\n  }\n\n  ngOnInit() {\n    this.passwordIsValid = false;\n  }\n\n  passwordValid(event) {\n    this.passwordIsValid = event;\n  }\n\n  checkPasswordRepeat(event) {\n      if(event.target.value == this.resetPasswordForm.controls.password.value) {\n        this.passwordRepeatIsValid = true;\n      } else {\n        this.passwordRepeatIsValid = false;\n      }\n\n  }\n\n  checkStrength(p) {\n    // 1\n    let force = 0;\n\n    // 2\n    const regex = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\n    const lowerLetters = /[a-z]+/.test(p);\n    const upperLetters = /[A-Z]+/.test(p);\n    const numbers = /[0-9]+/.test(p);\n    const symbols = regex.test(p);\n\n    // 3\n    const flags = [lowerLetters, upperLetters, numbers, symbols];\n\n    // 4\n    let passedMatches = 0;\n    for (const flag of flags) {\n      passedMatches += flag === true ? 1 : 0;\n    }\n\n    // 5\n    force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\n    force += passedMatches * 10;\n\n    // 6\n    force = (p.length <= 7) ? Math.min(force, 10) : force;\n\n    // 7\n    force = (passedMatches === 1) ? Math.min(force, 10) : force;\n    force = (passedMatches === 2) ? Math.min(force, 20) : force;\n    force = (passedMatches === 3) ? Math.min(force, 30) : force;\n    force = (passedMatches === 4) ? Math.min(force, 40) : force;\n\n    return force;\n  }\n\n  changeStrengthbar(x) {\n    const password = x;\n    this.setBarColors(4, '#DDD');\n    if (password) {\n      const c = this.getColor(this.checkStrength(password));\n      if (this.resetPasswordForm.controls.passwordRepeat.value != undefined) {\n        if (this.resetPasswordForm.controls.passwordRepeat.value == this.resetPasswordForm.controls.password.value) {\n          this.passwordRepeatIsValid = true;\n        } else {\n          this.passwordRepeatIsValid = false;\n        }\n      }\n      this.setBarColors(c.index, c.color);\n      const pwdStrength = this.checkStrength(password);\n      pwdStrength === 40 ? true : false;\n      switch (pwdStrength) {\n        case 10:\n          this.passWeak = true;\n          this.passStrong = false;\n          this.passGood = false;\n          this.passFair = false;\n          this.msg = 'Password Strength is Weak';\n          this.messageReturn = 'Password must includes 8-12 characters, at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 20:\n          this.passWeak = false;\n          this.passStrong = false;\n          this.passGood = false;\n          this.passFair = true;\n          this.msg = 'Password Strength is Fair';\n          this.messageReturn = 'Password must includes 8-12 characters at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 30:\n          this.passWeak = false;\n          this.passStrong = false;\n          this.passGood = true;\n          this.passFair = false;\n          this.msg = 'Password Strength is Good';\n          this.messageReturn = 'Password must includes 8-12 characters, at least one uppercase letter (A-Z), at least one lowercase letter (a-z), at least one number (0-9), and at least one special character (@!*)'\n          break;\n        case 40:\n          this.passWeak = false;\n          this.passStrong = true;\n          this.passGood = false;\n          this.passFair = false;\n          this.passwordValid(x);\n          this.msg = 'Password Strength is Strong';\n          this.messageReturn = 'Your password is great. Nice work!'\n          break;\n      }\n    } else {\n      this.msg = '';\n      this.messageReturn = '';\n    }\n  }\n\n  private getColor(s) {\n    let index = 0;\n    if (s === 10) {\n      index = 0;\n    } else if (s === 20) {\n      index = 1;\n    } else if (s === 30) {\n      index = 2;\n    } else if (s === 40) {\n      index = 3;\n    } else {\n      index = 4;\n    }\n    this.msgColor = this.colors[index];\n    return {\n      index: index + 1,\n      color: this.colors[index]\n    };\n  }\n\n  private setBarColors(count, col) {\n    for (let n = 0; n < count; n++) {\n      this['bar' + n] = col;\n    }\n  }\n\n  updateResetPassword() {\n    this.loading = true;\n    const updatePassword = {\n      password: this.resetPasswordForm.controls['password'].value\n    };\n    this.chartService.postResetPassword(`${this.id}/${this.token}`,updatePassword).subscribe(res => {\n      if (res.status == 'Success') {\n        this.loading = false;\n        Swal.fire({\n          title: res.status,\n          text: res.message,\n          type: 'success',\n          showConfirmButton: true,\n          allowOutsideClick: false,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#ffba57',\n        }).then((confirm) => {\n          if (confirm.value) {\n            this.router.navigate(['auth/login']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: res.status,\n          text: res.message,\n          type: 'error',\n          showConfirmButton: true,\n        });\n      }\n    });\n  }\n\n}\n","import { PasswordStrengthModule } from './../signup/password-strength/password-strength.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResetPasswordRoutingModule } from './reset-password-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ParticlesModule } from 'angular-particle';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastyModule } from 'ng2-toasty';\nimport { NgModule } from '@angular/core';\nimport { PasswordStrengthComponent } from './../signup/password-strength/password-strength.component';\n\n@NgModule({\n  declarations: [ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    ResetPasswordRoutingModule,\n    SharedModule,\n    ToastyModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    ParticlesModule,\n  ],\n  // entryComponents: [ResetPasswordComponent, PasswordStrengthComponent],\n  // exports: [PasswordStrengthComponent]\n})\nexport class ResetPasswordModule { }\n"],"sourceRoot":"webpack:///","file":"reset-password-reset-password-module-es5.js"}