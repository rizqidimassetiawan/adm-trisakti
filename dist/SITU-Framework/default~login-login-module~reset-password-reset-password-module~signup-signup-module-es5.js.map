{"version":3,"sources":["node_modules/angular-particle/index.js"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, ElementRef, HostListener, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar ParticlesComponent = (function () {\r\n    function ParticlesComponent() {\r\n        this.width = 100;\r\n        this.height = 100;\r\n        this.style = {};\r\n    }\r\n    return ParticlesComponent;\r\n}());\r\nParticlesComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'particles',\r\n                template: \"\\n        <div [ngStyle]=\\\"style\\\" class=\\\"particles-container\\\">\\n            <canvas d-particles [params]=\\\"params\\\" [style.width.%]=\\\"width\\\" [style.height.%]=\\\"height\\\"></canvas>\\n        </div>\\n    \"\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesComponent.ctorParameters = function () { return []; };\r\nParticlesComponent.propDecorators = {\r\n    'width': [{ type: Input },],\r\n    'height': [{ type: Input },],\r\n    'params': [{ type: Input },],\r\n    'style': [{ type: Input },],\r\n};\n\nvar hexToRgb = function (hex) {\r\n    var /** @type {?} */ shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    var /** @type {?} */ result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n};\r\nvar clamp = function (number, min, max) {\r\n    return Math.min(Math.max(number, min), max);\r\n};\r\nvar isInArray = function (value, array) {\r\n    return array.indexOf(value) > -1;\r\n};\r\nvar deepExtend = function (destination, source) {\r\n    for (var /** @type {?} */ property in source) {\r\n        if (source[property] &&\r\n            source[property].constructor &&\r\n            source[property].constructor === Object) {\r\n            destination[property] = destination[property] || {};\r\n            deepExtend(destination[property], source[property]);\r\n        }\r\n        else {\r\n            destination[property] = source[property];\r\n        }\r\n    }\r\n    return destination;\r\n};\r\nvar getColor = function (colorObject) {\r\n    var /** @type {?} */ color = {};\r\n    if (typeof (colorObject) == 'object') {\r\n        if (colorObject instanceof Array) {\r\n            var /** @type {?} */ selectedColor = colorObject[Math.floor(Math.random() * colorObject.length)];\r\n            color.rgb = hexToRgb(selectedColor);\r\n        }\r\n        else {\r\n            var r = colorObject.r, g = colorObject.g, b = colorObject.b;\r\n            if (r !== undefined && g !== undefined && b !== undefined) {\r\n                color.rgb = { r: r, g: g, b: b };\r\n            }\r\n            else {\r\n                var h = colorObject.h, s = colorObject.s, l = colorObject.l;\r\n                if (h !== undefined && g !== undefined && b !== undefined) {\r\n                    color.hsl = { h: h, s: s, l: l };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (colorObject == 'random') {\r\n        color.rgb = {\r\n            r: (Math.floor(Math.random() * 255) + 1),\r\n            g: (Math.floor(Math.random() * 255) + 1),\r\n            b: (Math.floor(Math.random() * 255) + 1)\r\n        };\r\n    }\r\n    else if (typeof (colorObject) == 'string') {\r\n        color.rgb = hexToRgb(colorObject);\r\n    }\r\n    return color;\r\n};\r\nvar getDefaultParams = function () {\r\n    return {\r\n        particles: {\r\n            number: {\r\n                value: 100,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 800\r\n                }\r\n            },\r\n            color: {\r\n                value: '#FFF'\r\n            },\r\n            shape: {\r\n                type: 'circle',\r\n                stroke: {\r\n                    width: 0,\r\n                    color: '#000000'\r\n                },\r\n                polygon: {\r\n                    nb_sides: 5\r\n                },\r\n                image: {\r\n                    src: '',\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 0.5,\r\n                random: false,\r\n                anim: {\r\n                    enable: true,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: '#FFF',\r\n                opacity: 0.6,\r\n                width: 1,\r\n                shadow: {\r\n                    enable: false,\r\n                    blur: 5,\r\n                    color: 'lime'\r\n                }\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: 'none',\r\n                random: false,\r\n                straight: false,\r\n                out_mode: 'out',\r\n                bounce: true,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 3000,\r\n                    rotateY: 3000\r\n                }\r\n            },\r\n            array: []\r\n        },\r\n        interactivity: {\r\n            detect_on: 'canvas',\r\n            events: {\r\n                onhover: {\r\n                    enable: true,\r\n                    mode: 'grab'\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: 'push'\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 200,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 200,\r\n                    size: 80,\r\n                    duration: 0.4\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            },\r\n            mouse: {}\r\n        },\r\n        retina_detect: true\r\n    };\r\n};\r\n/**\r\n * @param {?} params\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction loadImg(params, tmp) {\r\n    var particles = this.params.particles;\r\n    tmp.img_error = undefined;\r\n    if (particles.shape.type == 'image' && particles.shape.image.src != '') {\r\n        if (tmp.img_type == 'svg') {\r\n            var /** @type {?} */ xhr_1 = new XMLHttpRequest();\r\n            xhr_1.open('GET', particles.shape.image.src);\r\n            xhr_1.onreadystatechange = function (data) {\r\n                if (xhr_1.readyState == 4) {\r\n                    if (xhr_1.status == 200) {\r\n                        tmp.source_svg = data.currentTarget.response;\r\n                        if (tmp.source_svg == undefined) {\r\n                            var /** @type {?} */ check = void 0;\r\n                            tmp.checkAnimFrame = requestAnimationFrame(check);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tmp.img_error = true;\r\n                        throw \"Error : image not found\";\r\n                    }\r\n                }\r\n            };\r\n            xhr_1.send();\r\n        }\r\n        else {\r\n            var /** @type {?} */ img_1 = new Image();\r\n            img_1.addEventListener('load', function () {\r\n                tmp.img_obj = img_1;\r\n                cancelAnimationFrame(tmp.checkAnimFrame);\r\n            });\r\n            img_1.src = particles.shape.image.src;\r\n        }\r\n    }\r\n    else {\r\n        tmp.img_error = true;\r\n        throw \"Error : no image.src\";\r\n    }\r\n}\r\n/**\r\n * @param {?} particle\r\n * @param {?} tmp\r\n * @return {?}\r\n */\r\nfunction createSvgImg(particle, tmp) {\r\n    var /** @type {?} */ svgXml = tmp.source_svg;\r\n    var /** @type {?} */ rgbHex = /#([0-9A-F]{3,6})/gi;\r\n    var /** @type {?} */ coloredSvgXml = svgXml.replace(rgbHex, function (m, r, g, b) {\r\n        var /** @type {?} */ color_value;\r\n        if (particle.color.rgb) {\r\n            var _a = particle.color.rgb, r_1 = _a.r, g_1 = _a.g, b_1 = _a.b;\r\n            color_value = \"rgba( \" + r_1 + \", \" + g_1 + \", \" + b_1 + \", \" + particle.opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = particle.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"rgba( \" + h + \", \" + s + \", \" + l + \", \" + particle.opacity + \" )\";\r\n        }\r\n        return color_value;\r\n    });\r\n    var /** @type {?} */ svg = new Blob([coloredSvgXml], {\r\n        type: 'image/svg+xml;charset=utf-8'\r\n    });\r\n    var /** @type {?} */ DOMURL = window.URL || window;\r\n    var /** @type {?} */ url = DOMURL.createObjectURL(svg);\r\n    var /** @type {?} */ img = new Image();\r\n    img.addEventListener('load', function () {\r\n        particle.img.obj = img;\r\n        particle.img.loaded = true;\r\n        DOMURL.revokeObjectURL(url);\r\n        tmp.count_svg++;\r\n    });\r\n    img.src = url;\r\n}\n\nvar CanvasManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function CanvasManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._onWindowResize = this._onWindowResize.bind(this);\r\n        this._retinaInit();\r\n        this._canvasSize();\r\n        this.particlesManager = new ParticlesManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this.particlesManager.particlesCreate();\r\n        this._densityAutoParticles();\r\n        var particles = this._params.particles;\r\n        particles.line_linked.color_rgb_line = hexToRgb(particles.line_linked.color);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype.draw = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.shape.type == 'image') {\r\n            if (this._tmpParams.img_type == 'svg') {\r\n                if (this._tmpParams.count_svg >= particles.number.value) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.img_obj != undefined) {\r\n                    this.particlesManager.particlesDraw();\r\n                    if (!particles.move.enable) {\r\n                        cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n                    }\r\n                    else {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._tmpParams.img_error) {\r\n                        this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.particlesManager.particlesDraw();\r\n            if (!particles.move.enable) {\r\n                cancelAnimationFrame(this._tmpParams.drawAnimFrame);\r\n            }\r\n            else {\r\n                this._tmpParams.drawAnimFrame = requestAnimationFrame(this.draw.bind(this));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._densityAutoParticles = function () {\r\n        var particles = this._params.particles;\r\n        if (particles.number.density.enable) {\r\n            var /** @type {?} */ area = this._canvasParams.el.width * this._canvasParams.el.height / 1000;\r\n            if (this._tmpParams.retina) {\r\n                area = area / (this._canvasParams.pxratio * 2);\r\n            }\r\n            var /** @type {?} */ nb_particles = area * particles.number.value / particles.number.density.value_area;\r\n            var /** @type {?} */ missing_particles = particles.array.length - nb_particles;\r\n            if (missing_particles < 0) {\r\n                this.particlesManager.pushParticles(Math.abs(missing_particles));\r\n            }\r\n            else {\r\n                this.particlesManager.removeParticles(missing_particles);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._retinaInit = function () {\r\n        if (this._params.retina_detect && window.devicePixelRatio > 1) {\r\n            this._canvasParams.pxratio = window.devicePixelRatio;\r\n            this._tmpParams.retina = true;\r\n            this._canvasParams.width = this._canvasParams.el.offsetWidth * this._canvasParams.pxratio;\r\n            this._canvasParams.height = this._canvasParams.el.offsetHeight * this._canvasParams.pxratio;\r\n            this._params.particles.size.value = this._tmpParams.obj.size_value * this._canvasParams.pxratio;\r\n            this._params.particles.size.anim.speed = this._tmpParams.obj.size_anim_speed * this._canvasParams.pxratio;\r\n            this._params.particles.move.speed = this._tmpParams.obj.move_speed * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.distance = this._tmpParams.obj.line_linked_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.grab.distance = this._tmpParams.obj.mode_grab_distance * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.distance = this._tmpParams.obj.mode_bubble_distance * this._canvasParams.pxratio;\r\n            this._params.particles.line_linked.width = this._tmpParams.obj.line_linked_width * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.bubble.size = this._tmpParams.obj.mode_bubble_size * this._canvasParams.pxratio;\r\n            this._params.interactivity.modes.repulse.distance = this._tmpParams.obj.mode_repulse_distance * this._canvasParams.pxratio;\r\n        }\r\n        else {\r\n            this._canvasParams.pxratio = 1;\r\n            this._tmpParams.retina = false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasClear = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasPaint = function () {\r\n        this._canvasParams.ctx.fillRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._canvasSize = function () {\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (this._params && this._params.interactivity.events.resize) {\r\n            window.addEventListener('resize', this._onWindowResize);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CanvasManager$$1.prototype._onWindowResize = function () {\r\n        this._canvasParams.width = this._canvasParams.el.offsetWidth;\r\n        this._canvasParams.height = this._canvasParams.el.offsetHeight;\r\n        if (this._tmpParams.retina) {\r\n            this._canvasParams.width *= this._canvasParams.pxratio;\r\n            this._canvasParams.height *= this._canvasParams.pxratio;\r\n        }\r\n        this._canvasParams.el.width = this._canvasParams.width;\r\n        this._canvasParams.el.height = this._canvasParams.height;\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesManager.particlesEmpty();\r\n            this.particlesManager.particlesCreate();\r\n            this.particlesManager.particlesDraw();\r\n            this._densityAutoParticles();\r\n        }\r\n        this._densityAutoParticles();\r\n    };\r\n    return CanvasManager$$1;\r\n}());\n\nvar ParticlesManager$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     */\r\n    function ParticlesManager$$1(_canvasParams, _params, _tmpParams) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._interaction = new ParticleInteraction();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesCreate = function () {\r\n        var _a = this._params.particles, color = _a.color, opacity = _a.opacity;\r\n        for (var /** @type {?} */ i = 0; i < this._params.particles.number.value; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, color, opacity.value));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._particlesUpdate = function () {\r\n        var _this = this;\r\n        this._params.particles.array.forEach(function (particle, i) {\r\n            if (_this._params.particles.move.enable) {\r\n                var /** @type {?} */ ms = _this._params.particles.move.speed / 2;\r\n                particle.x += particle.vx * ms;\r\n                particle.y += particle.vy * ms;\r\n            }\r\n            if (_this._params.particles.opacity.anim.enable) {\r\n                if (particle.opacity_status == true) {\r\n                    if (particle.opacity >= _this._params.particles.opacity.value)\r\n                        particle.opacity_status = false;\r\n                    particle.opacity += particle.vo;\r\n                }\r\n                else {\r\n                    if (particle.opacity <= _this._params.particles.opacity.anim.opacity_min)\r\n                        particle.opacity_status = true;\r\n                    particle.opacity -= particle.vo;\r\n                }\r\n                if (particle.opacity < 0)\r\n                    particle.opacity = 0;\r\n            }\r\n            if (_this._params.particles.size.anim.enable) {\r\n                if (particle.size_status == true) {\r\n                    if (particle.radius >= _this._params.particles.size.value)\r\n                        particle.size_status = false;\r\n                    particle.radius += particle.vs;\r\n                }\r\n                else {\r\n                    if (particle.radius <= _this._params.particles.size.anim.size_min)\r\n                        particle.size_status = true;\r\n                    particle.radius -= particle.vs;\r\n                }\r\n                if (particle.radius < 0)\r\n                    particle.radius = 0;\r\n            }\r\n            var /** @type {?} */ new_pos;\r\n            if (_this._params.particles.move.out_mode == 'bounce') {\r\n                new_pos = {\r\n                    x_left: particle.radius,\r\n                    x_right: _this._canvasParams.width,\r\n                    y_top: particle.radius,\r\n                    y_bottom: _this._canvasParams.height\r\n                };\r\n            }\r\n            else {\r\n                new_pos = {\r\n                    x_left: -particle.radius,\r\n                    x_right: _this._canvasParams.width + particle.radius,\r\n                    y_top: -particle.radius,\r\n                    y_bottom: _this._canvasParams.height + particle.radius\r\n                };\r\n            }\r\n            if (particle.x - particle.radius > _this._canvasParams.width) {\r\n                particle.x = new_pos.x_left;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            else if (particle.x + particle.radius < 0) {\r\n                particle.x = new_pos.x_right;\r\n                particle.y = Math.random() * _this._canvasParams.height;\r\n            }\r\n            if (particle.y - particle.radius > _this._canvasParams.height) {\r\n                particle.y = new_pos.y_top;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            else if (particle.y + particle.radius < 0) {\r\n                particle.y = new_pos.y_bottom;\r\n                particle.x = Math.random() * _this._canvasParams.width;\r\n            }\r\n            switch (_this._params.particles.move.out_mode) {\r\n                case 'bounce':\r\n                    if (particle.x + particle.radius > _this._canvasParams.width)\r\n                        particle.vx = -particle.vx;\r\n                    else if (particle.x - particle.radius < 0)\r\n                        particle.vx = -particle.vx;\r\n                    if (particle.y + particle.radius > _this._canvasParams.height)\r\n                        particle.vy = -particle.vy;\r\n                    else if (particle.y - particle.radius < 0)\r\n                        particle.vy = -particle.vy;\r\n                    break;\r\n            }\r\n            if (isInArray('grab', _this._params.interactivity.events.onhover.mode)) {\r\n                _this._grabParticle(particle);\r\n            }\r\n            if (isInArray('bubble', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('bubble', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._bubbleParticle(particle);\r\n            }\r\n            if (isInArray('repulse', _this._params.interactivity.events.onhover.mode) ||\r\n                isInArray('repulse', _this._params.interactivity.events.onclick.mode)) {\r\n                _this._repulseParticle(particle);\r\n            }\r\n            if (_this._params.particles.line_linked.enable || _this._params.particles.move.attract.enable) {\r\n                for (var /** @type {?} */ j = i + 1; j < _this._params.particles.array.length; j++) {\r\n                    var /** @type {?} */ link = _this._params.particles.array[j];\r\n                    if (_this._params.particles.line_linked.enable)\r\n                        _this._interaction.linkParticles(particle, link, _this._params, _this._canvasParams);\r\n                    if (_this._params.particles.move.attract.enable)\r\n                        _this._interaction.attractParticles(particle, link, _this._params);\r\n                    if (_this._params.particles.move.bounce)\r\n                        _this._interaction.bounceParticles(particle, link);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesDraw = function () {\r\n        this._canvasParams.ctx.clearRect(0, 0, this._canvasParams.width, this._canvasParams.height);\r\n        this._particlesUpdate();\r\n        this._params.particles.array.forEach(function (particle) {\r\n            particle.draw();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.particlesEmpty = function () {\r\n        this._params.particles.array = [];\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.removeParticles = function (nb) {\r\n        this._params.particles.array.splice(0, nb);\r\n        if (!this._params.particles.move.enable) {\r\n            this.particlesDraw();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} nb\r\n     * @param {?=} pos\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype.pushParticles = function (nb, pos) {\r\n        this._tmpParams.pushing = true;\r\n        for (var /** @type {?} */ i = 0; i < nb; i++) {\r\n            this._params.particles.array.push(new Particle$$1(this._canvasParams, this._params, this._tmpParams, this._params.particles.color, this._params.particles.opacity.value, {\r\n                x: pos ? pos.pos_x : Math.random() * this._canvasParams.width,\r\n                y: pos ? pos.pos_y : Math.random() * this._canvasParams.height\r\n            }));\r\n            if (i == nb - 1) {\r\n                if (!this._params.particles.move.enable) {\r\n                    this.particlesDraw();\r\n                }\r\n                this._tmpParams.pushing = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._bubbleParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onhover.mode)) {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ ratio = 1 - dist_mouse / this._params.interactivity.modes.bubble.distance;\r\n            var /** @type {?} */ init = function () {\r\n                particle.opacity_bubble = particle.opacity;\r\n                particle.radius_bubble = particle.radius;\r\n            };\r\n            if (dist_mouse <= this._params.interactivity.modes.bubble.distance) {\r\n                if (ratio >= 0 && this._params.interactivity.status == 'mousemove') {\r\n                    if (this._params.interactivity.modes.bubble.size != this._params.particles.size.value) {\r\n                        if (this._params.interactivity.modes.bubble.size > this._params.particles.size.value) {\r\n                            var /** @type {?} */ size = particle.radius + (this._params.interactivity.modes.bubble.size * ratio);\r\n                            if (size >= 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ dif = particle.radius - this._params.interactivity.modes.bubble.size;\r\n                            var /** @type {?} */ size = particle.radius - (dif * ratio);\r\n                            if (size > 0) {\r\n                                particle.radius_bubble = size;\r\n                            }\r\n                            else {\r\n                                particle.radius_bubble = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (this._params.interactivity.modes.bubble.opacity != this._params.particles.opacity.value) {\r\n                        if (this._params.interactivity.modes.bubble.opacity > this._params.particles.opacity.value) {\r\n                            var /** @type {?} */ opacity = this._params.interactivity.modes.bubble.opacity * ratio;\r\n                            if (opacity > particle.opacity && opacity <= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var /** @type {?} */ opacity = particle.opacity - (this._params.particles.opacity.value - this._params.interactivity.modes.bubble.opacity) * ratio;\r\n                            if (opacity < particle.opacity && opacity >= this._params.interactivity.modes.bubble.opacity) {\r\n                                particle.opacity_bubble = opacity;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                init();\r\n            }\r\n            if (this._params.interactivity.status == 'mouseleave') {\r\n                init();\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('bubble', this._params.interactivity.events.onclick.mode)) {\r\n            if (this._tmpParams.bubble_clicking) {\r\n                var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.click_pos_x;\r\n                var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.click_pos_y;\r\n                var /** @type {?} */ dist_mouse_1 = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n                var /** @type {?} */ time_spent_1 = (new Date().getTime() - this._params.interactivity.mouse.click_time) / 1000;\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration) {\r\n                    this._tmpParams.bubble_duration_end = true;\r\n                }\r\n                if (time_spent_1 > this._params.interactivity.modes.bubble.duration * 2) {\r\n                    this._tmpParams.bubble_clicking = false;\r\n                    this._tmpParams.bubble_duration_end = false;\r\n                }\r\n                var /** @type {?} */ process = function (bubble_param, particles_param, p_obj_bubble, p_obj, id) {\r\n                    if (bubble_param != particles_param) {\r\n                        if (!_this._tmpParams.bubble_duration_end) {\r\n                            if (dist_mouse_1 <= _this._params.interactivity.modes.bubble.distance) {\r\n                                var /** @type {?} */ obj = void 0;\r\n                                if (p_obj_bubble != undefined) {\r\n                                    obj = p_obj_bubble;\r\n                                }\r\n                                else {\r\n                                    obj = p_obj;\r\n                                }\r\n                                if (obj != bubble_param) {\r\n                                    var /** @type {?} */ value = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size')\r\n                                        particle.radius_bubble = value;\r\n                                    if (id == 'opacity')\r\n                                        particle.opacity_bubble = value;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = undefined;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = undefined;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                var /** @type {?} */ value_tmp = p_obj - (time_spent_1 * (p_obj - bubble_param) / _this._params.interactivity.modes.bubble.duration);\r\n                                var /** @type {?} */ dif = bubble_param - value_tmp;\r\n                                var /** @type {?} */ value = bubble_param + dif;\r\n                                if (id == 'size')\r\n                                    particle.radius_bubble = value;\r\n                                if (id == 'opacity')\r\n                                    particle.opacity_bubble = value;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                if (this._tmpParams.bubble_clicking) {\r\n                    process(this._params.interactivity.modes.bubble.size, this._params.particles.size.value, particle.radius_bubble, particle.radius, 'size');\r\n                    process(this._params.interactivity.modes.bubble.opacity, this._params.particles.opacity.value, particle.opacity_bubble, particle.opacity, 'opacity');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._repulseParticle = function (particle) {\r\n        var _this = this;\r\n        if (this._params.interactivity.events.onhover.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onhover.mode) &&\r\n            this._params.interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - this._params.interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - this._params.interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            var /** @type {?} */ normVec = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse };\r\n            var /** @type {?} */ repulseRadius = this._params.interactivity.modes.repulse.distance;\r\n            var /** @type {?} */ velocity = 100;\r\n            var /** @type {?} */ repulseFactor = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n            var /** @type {?} */ pos = {\r\n                x: particle.x + normVec.x * repulseFactor,\r\n                y: particle.y + normVec.y * repulseFactor\r\n            };\r\n            if (this._params.particles.move.out_mode == 'bounce') {\r\n                if (pos.x - particle.radius > 0 && pos.x + particle.radius < this._canvasParams.width)\r\n                    particle.x = pos.x;\r\n                if (pos.y - particle.radius > 0 && pos.y + particle.radius < this._canvasParams.height)\r\n                    particle.y = pos.y;\r\n            }\r\n            else {\r\n                particle.x = pos.x;\r\n                particle.y = pos.y;\r\n            }\r\n        }\r\n        else if (this._params.interactivity.events.onclick.enable &&\r\n            isInArray('repulse', this._params.interactivity.events.onclick.mode)) {\r\n            if (!this._tmpParams.repulse_finish) {\r\n                this._tmpParams.repulse_count++;\r\n                if (this._tmpParams.repulse_count == this._params.particles.array.length)\r\n                    this._tmpParams.repulse_finish = true;\r\n            }\r\n            if (this._tmpParams.repulse_clicking) {\r\n                var /** @type {?} */ repulseRadius = Math.pow(this._params.interactivity.modes.repulse.distance / 6, 3);\r\n                var /** @type {?} */ dx_1 = this._params.interactivity.mouse.click_pos_x - particle.x;\r\n                var /** @type {?} */ dy_1 = this._params.interactivity.mouse.click_pos_y - particle.y;\r\n                var /** @type {?} */ d = dx_1 * dx_1 + dy_1 * dy_1;\r\n                var /** @type {?} */ force_1 = -repulseRadius / d * 1;\r\n                var /** @type {?} */ process = function () {\r\n                    var /** @type {?} */ f = Math.atan2(dy_1, dx_1);\r\n                    particle.vx = force_1 * Math.cos(f);\r\n                    particle.vy = force_1 * Math.sin(f);\r\n                    if (_this._params.particles.move.out_mode == 'bounce') {\r\n                        var /** @type {?} */ pos = {\r\n                            x: particle.x + particle.vx,\r\n                            y: particle.y + particle.vy\r\n                        };\r\n                        if (pos.x + particle.radius > _this._canvasParams.width)\r\n                            particle.vx = -particle.vx;\r\n                        else if (pos.x - particle.radius < 0)\r\n                            particle.vx = -particle.vx;\r\n                        if (pos.y + particle.radius > _this._canvasParams.height)\r\n                            particle.vy = -particle.vy;\r\n                        else if (pos.y - particle.radius < 0)\r\n                            particle.vy = -particle.vy;\r\n                    }\r\n                };\r\n                if (d <= repulseRadius) {\r\n                    process();\r\n                }\r\n            }\r\n            else {\r\n                if (this._tmpParams.repulse_clicking == false) {\r\n                    particle.vx = particle.vx_i;\r\n                    particle.vy = particle.vy_i;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} particle\r\n     * @return {?}\r\n     */\r\n    ParticlesManager$$1.prototype._grabParticle = function (particle) {\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onhover.enable &&\r\n            interactivity.status == 'mousemove') {\r\n            var /** @type {?} */ dx_mouse = particle.x - interactivity.mouse.pos_x;\r\n            var /** @type {?} */ dy_mouse = particle.y - interactivity.mouse.pos_y;\r\n            var /** @type {?} */ dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n            if (dist_mouse <= interactivity.modes.grab.distance) {\r\n                var grab = interactivity.modes.grab;\r\n                var /** @type {?} */ opacity_line = grab.line_linked.opacity - (dist_mouse / (1 / grab.line_linked.opacity)) / grab.distance;\r\n                if (opacity_line > 0) {\r\n                    var /** @type {?} */ color_line = particles.line_linked.color_rgb_line;\r\n                    var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                    this._canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                    this._canvasParams.ctx.lineWidth = particles.line_linked.width;\r\n                    this._canvasParams.ctx.beginPath();\r\n                    this._canvasParams.ctx.moveTo(particle.x, particle.y);\r\n                    this._canvasParams.ctx.lineTo(interactivity.mouse.pos_x, interactivity.mouse.pos_y);\r\n                    this._canvasParams.ctx.stroke();\r\n                    this._canvasParams.ctx.closePath();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return ParticlesManager$$1;\r\n}());\n\nvar Particle$$1 = (function () {\r\n    /**\r\n     * @param {?} _canvasParams\r\n     * @param {?} _params\r\n     * @param {?} _tmpParams\r\n     * @param {?=} color\r\n     * @param {?=} opacity\r\n     * @param {?=} position\r\n     */\r\n    function Particle$$1(_canvasParams, _params, _tmpParams, color, opacity, position) {\r\n        this._canvasParams = _canvasParams;\r\n        this._params = _params;\r\n        this._tmpParams = _tmpParams;\r\n        this._setupSize();\r\n        this._setupPosition(position);\r\n        this._setupColor(color);\r\n        this._setupOpacity();\r\n        this._setupAnimation();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupSize = function () {\r\n        this.radius = (this._params.particles.size.random ? Math.random() : 1) * this._params.particles.size.value;\r\n        if (this._params.particles.size.anim.enable) {\r\n            this.size_status = false;\r\n            this.vs = this._params.particles.size.anim.speed / 100;\r\n            if (!this._params.particles.size.anim.sync)\r\n                this.vs = this.vs * Math.random();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupPosition = function (position) {\r\n        this.x = position ? position.x : Math.random() * this._canvasParams.width;\r\n        this.y = position ? position.y : Math.random() * this._canvasParams.height;\r\n        if (this.x > this._canvasParams.width - this.radius * 2) {\r\n            this.x = this.x - this.radius;\r\n        }\r\n        else if (this.x < this.radius * 2) {\r\n            this.x = this.x + this.radius;\r\n        }\r\n        if (this.y > this._canvasParams.height - this.radius * 2) {\r\n            this.y = this.y - this.radius;\r\n        }\r\n        else if (this.y < this.radius * 2) {\r\n            this.y = this.y + this.radius;\r\n        }\r\n        if (this._params.particles.move.bounce) {\r\n            this._checkOverlap(this, position);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?=} position\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._checkOverlap = function (p1, position) {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        particles.array.forEach(function (particle) {\r\n            var /** @type {?} */ p2 = particle;\r\n            var /** @type {?} */ dx = p1.x - p2.x;\r\n            var /** @type {?} */ dy = p1.y - p2.y;\r\n            var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n            if (dist <= p1.radius + p2.radius) {\r\n                p1.x = position ? position.x : Math.random() * _this._canvasParams.width;\r\n                p1.y = position ? position.y : Math.random() * _this._canvasParams.height;\r\n                _this._checkOverlap(p1);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?=} color\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupColor = function (color) {\r\n        this.color = getColor(color.value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupOpacity = function () {\r\n        this.opacity = (this._params.particles.opacity.random ? Math.random() : 1) * this._params.particles.opacity.value;\r\n        if (this._params.particles.opacity.anim.enable) {\r\n            this.opacity_status = false;\r\n            this.vo = this._params.particles.opacity.anim.speed / 100;\r\n            if (!this._params.particles.opacity.anim.sync) {\r\n                this.vo = this.vo * Math.random();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._setupAnimation = function () {\r\n        var /** @type {?} */ velbase = null;\r\n        switch (this._params.particles.move.direction) {\r\n            case 'top':\r\n                velbase = { x: 0, y: -1 };\r\n                break;\r\n            case 'top-right':\r\n                velbase = { x: 0.5, y: -0.5 };\r\n                break;\r\n            case 'right':\r\n                velbase = { x: 1, y: 0 };\r\n                break;\r\n            case 'bottom-right':\r\n                velbase = { x: 0.5, y: 0.5 };\r\n                break;\r\n            case 'bottom':\r\n                velbase = { x: 0, y: 1 };\r\n                break;\r\n            case 'bottom-left':\r\n                velbase = { x: -0.5, y: 1 };\r\n                break;\r\n            case 'left':\r\n                velbase = { x: -1, y: 0 };\r\n                break;\r\n            case 'top-left':\r\n                velbase = { x: -0.5, y: -0.5 };\r\n                break;\r\n            default:\r\n                velbase = { x: 0, y: 0 };\r\n                break;\r\n        }\r\n        if (this._params.particles.move.straight) {\r\n            this.vx = velbase.x;\r\n            this.vy = velbase.y;\r\n            if (this._params.particles.move.random) {\r\n                this.vx = this.vx * (Math.random());\r\n                this.vy = this.vy * (Math.random());\r\n            }\r\n        }\r\n        else {\r\n            this.vx = velbase.x + Math.random() - 0.5;\r\n            this.vy = velbase.y + Math.random() - 0.5;\r\n        }\r\n        this.vx_i = this.vx;\r\n        this.vy_i = this.vy;\r\n        var /** @type {?} */ shape_type = this._params.particles.shape.type;\r\n        if (typeof (shape_type) == 'object') {\r\n            if (shape_type instanceof Array) {\r\n                var /** @type {?} */ shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                this.shape = shape_selected;\r\n            }\r\n        }\r\n        else {\r\n            this.shape = shape_type;\r\n        }\r\n        if (this.shape == 'image') {\r\n            var /** @type {?} */ sh = this._params.particles.shape;\r\n            this.img = {\r\n                src: sh.image.src,\r\n                ratio: sh.image.width / sh.image.height\r\n            };\r\n            if (!this.img.ratio)\r\n                this.img.ratio = 1;\r\n            if (this._tmpParams.img_type == 'svg' && this._tmpParams.source_svg != undefined) {\r\n                createSvgImg(this, this._tmpParams);\r\n                if (this._tmpParams.pushing) {\r\n                    this.img.loaded = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} c\r\n     * @param {?} startX\r\n     * @param {?} startY\r\n     * @param {?} sideLength\r\n     * @param {?} sideCountNumerator\r\n     * @param {?} sideCountDenominator\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype._drawShape = function (c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {\r\n        var /** @type {?} */ sideCount = sideCountNumerator * sideCountDenominator;\r\n        var /** @type {?} */ decimalSides = sideCountNumerator / sideCountDenominator;\r\n        var /** @type {?} */ interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\r\n        var /** @type {?} */ interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;\r\n        c.save();\r\n        c.beginPath();\r\n        c.translate(startX, startY);\r\n        c.moveTo(0, 0);\r\n        for (var /** @type {?} */ i = 0; i < sideCount; i++) {\r\n            c.lineTo(sideLength, 0);\r\n            c.translate(sideLength, 0);\r\n            c.rotate(interiorAngle);\r\n        }\r\n        c.fill();\r\n        c.restore();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Particle$$1.prototype.draw = function () {\r\n        var _this = this;\r\n        var particles = this._params.particles;\r\n        var /** @type {?} */ radius;\r\n        if (this.radius_bubble != undefined) {\r\n            radius = this.radius_bubble;\r\n        }\r\n        else {\r\n            radius = this.radius;\r\n        }\r\n        var /** @type {?} */ opacity;\r\n        if (this.opacity_bubble != undefined) {\r\n            opacity = this.opacity_bubble;\r\n        }\r\n        else {\r\n            opacity = this.opacity;\r\n        }\r\n        var /** @type {?} */ color_value;\r\n        if (this.color.rgb) {\r\n            var _a = this.color.rgb, r = _a.r, g = _a.g, b = _a.b;\r\n            color_value = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity + \" )\";\r\n        }\r\n        else {\r\n            var _b = this.color.hsl, h = _b.h, s = _b.s, l = _b.l;\r\n            color_value = \"hsla( \" + h + \", \" + s + \", \" + l + \", \" + opacity + \" )\";\r\n        }\r\n        this._canvasParams.ctx.fillStyle = color_value;\r\n        this._canvasParams.ctx.beginPath();\r\n        switch (this.shape) {\r\n            case 'circle':\r\n                this._canvasParams.ctx.arc(this.x, this.y, radius, 0, Math.PI * 2, false);\r\n                break;\r\n            case 'edge':\r\n                this._canvasParams.ctx.rect(this.x - radius, this.y - radius, radius * 2, radius * 2);\r\n                break;\r\n            case 'triangle':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius, this.y + radius / 1.66, radius * 2, 3, 2);\r\n                break;\r\n            case 'polygon':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius / (this._params.particles.shape.polygon.nb_sides / 3.5), this.y - radius / (2.66 / 3.5), radius * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 1);\r\n                break;\r\n            case 'star':\r\n                this._drawShape(this._canvasParams.ctx, this.x - radius * 2 / (this._params.particles.shape.polygon.nb_sides / 4), this.y - radius / (2 * 2.66 / 3.5), radius * 2 * 2.66 / (this._params.particles.shape.polygon.nb_sides / 3), this._params.particles.shape.polygon.nb_sides, 2);\r\n                break;\r\n            case 'image':\r\n                var /** @type {?} */ draw = function (img_obj) {\r\n                    _this._canvasParams.ctx.drawImage(img_obj, _this.x - radius, _this.y - radius, radius * 2, radius * 2 / _this.img.ratio);\r\n                };\r\n                var /** @type {?} */ img_obj = void 0;\r\n                if (this._tmpParams.img_type == 'svg') {\r\n                    img_obj = this.img.obj;\r\n                }\r\n                else {\r\n                    img_obj = this._tmpParams.img_obj;\r\n                }\r\n                if (img_obj)\r\n                    draw(img_obj);\r\n                break;\r\n        }\r\n        this._canvasParams.ctx.closePath();\r\n        if (this._params.particles.shape.stroke.width > 0) {\r\n            this._canvasParams.ctx.strokeStyle = this._params.particles.shape.stroke.color;\r\n            this._canvasParams.ctx.lineWidth = this._params.particles.shape.stroke.width;\r\n            this._canvasParams.ctx.stroke();\r\n        }\r\n        this._canvasParams.ctx.fill();\r\n    };\r\n    return Particle$$1;\r\n}());\n\nvar ParticleInteraction = (function () {\r\n    function ParticleInteraction() {\r\n    }\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @param {?} canvasParams\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.linkParticles = function (p1, p2, params, canvasParams) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var line_linked = params.particles.line_linked;\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ opacity_line = params.particles.line_linked.opacity - (dist / (1 / params.particles.line_linked.opacity)) / params.particles.line_linked.distance;\r\n            if (opacity_line > 0) {\r\n                var /** @type {?} */ color_line = params.particles.line_linked.color_rgb_line;\r\n                var r = color_line.r, g = color_line.g, b = color_line.b;\r\n                canvasParams.ctx.save();\r\n                canvasParams.ctx.strokeStyle = \"rgba( \" + r + \", \" + g + \", \" + b + \", \" + opacity_line + \" )\";\r\n                canvasParams.ctx.lineWidth = params.particles.line_linked.width;\r\n                canvasParams.ctx.beginPath();\r\n                if (line_linked.shadow.enable) {\r\n                    canvasParams.ctx.shadowBlur = line_linked.shadow.blur;\r\n                    canvasParams.ctx.shadowColor = line_linked.shadow.color;\r\n                }\r\n                canvasParams.ctx.moveTo(p1.x, p1.y);\r\n                canvasParams.ctx.lineTo(p2.x, p2.y);\r\n                canvasParams.ctx.stroke();\r\n                canvasParams.ctx.closePath();\r\n                canvasParams.ctx.restore();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.attractParticles = function (p1, p2, params) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        if (dist <= params.particles.line_linked.distance) {\r\n            var /** @type {?} */ ax = dx / (params.particles.move.attract.rotateX * 1000);\r\n            var /** @type {?} */ ay = dy / (params.particles.move.attract.rotateY * 1000);\r\n            p1.vx -= ax;\r\n            p1.vy -= ay;\r\n            p2.vx += ax;\r\n            p2.vy += ay;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} p1\r\n     * @param {?} p2\r\n     * @return {?}\r\n     */\r\n    ParticleInteraction.prototype.bounceParticles = function (p1, p2) {\r\n        var /** @type {?} */ dx = p1.x - p2.x;\r\n        var /** @type {?} */ dy = p1.y - p2.y;\r\n        var /** @type {?} */ dist = Math.sqrt(dx * dx + dy * dy);\r\n        var /** @type {?} */ dist_p = p1.radius + p2.radius;\r\n        if (dist <= dist_p) {\r\n            p1.vx = -p1.vx;\r\n            p1.vy = -p1.vy;\r\n            p2.vx = -p2.vx;\r\n            p2.vy = -p2.vy;\r\n        }\r\n    };\r\n    return ParticleInteraction;\r\n}());\n\nvar ParticlesDirective = (function () {\r\n    /**\r\n     * @param {?} el\r\n     */\r\n    function ParticlesDirective(el) {\r\n        this.el = el;\r\n        this._tmpParams = {};\r\n    }\r\n    Object.defineProperty(ParticlesDirective.prototype, \"params\", {\r\n        /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        set: function (value) {\r\n            var /** @type {?} */ defaultParams = getDefaultParams();\r\n            this._params = deepExtend(defaultParams, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.ngAfterViewInit = function () {\r\n        this._canvasParams = {\r\n            el: this.el.nativeElement,\r\n            ctx: this.el.nativeElement.getContext('2d'),\r\n            width: this.el.nativeElement.offsetWidth,\r\n            height: this.el.nativeElement.offsetHeight\r\n        };\r\n        this._tmpParams.obj = {\r\n            size_value: this._params.particles.size.value,\r\n            size_anim_speed: this._params.particles.size.anim.speed,\r\n            move_speed: this._params.particles.move.speed,\r\n            line_linked_distance: this._params.particles.line_linked.distance,\r\n            line_linked_width: this._params.particles.line_linked.width,\r\n            mode_grab_distance: this._params.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: this._params.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: this._params.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: this._params.interactivity.modes.repulse.distance\r\n        };\r\n        this._params.interactivity.el = (this._params.interactivity.detect_on == 'window') ? window : this._canvasParams.el;\r\n        if (isInArray('image', this._params.particles.shape.type)) {\r\n            this._tmpParams.img_type = this._params.particles.shape.image.src.substr(this._params.particles.shape.image.src.length - 3);\r\n            loadImg(this._params, this._tmpParams);\r\n        }\r\n        this._canvasManager = new CanvasManager$$1(this._canvasParams, this._params, this._tmpParams);\r\n        this._canvasManager.draw();\r\n    };\r\n    /**\r\n     * Mouse move event\r\n    \\@param event\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseMove = function (event) {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            var /** @type {?} */ pos = void 0;\r\n            if (interactivity.el == window) {\r\n                pos = {\r\n                    x: event.clientX,\r\n                    y: event.clientY\r\n                };\r\n            }\r\n            else {\r\n                pos = {\r\n                    x: event.offsetX || event.clientX,\r\n                    y: event.offsetY || event.clientY\r\n                };\r\n            }\r\n            interactivity.mouse.pos_x = pos.x;\r\n            interactivity.mouse.pos_y = pos.y;\r\n            if (this._tmpParams.retina) {\r\n                interactivity.mouse.pos_x *= this._canvasParams.pxratio;\r\n                interactivity.mouse.pos_y *= this._canvasParams.pxratio;\r\n            }\r\n            interactivity.status = 'mousemove';\r\n        }\r\n    };\r\n    /**\r\n     * Mouse leave event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onMouseLeave = function () {\r\n        var interactivity = this._params.interactivity;\r\n        if (interactivity.events.onhover.enable ||\r\n            interactivity.events.onclick.enable) {\r\n            interactivity.mouse.pos_x = null;\r\n            interactivity.mouse.pos_y = null;\r\n            interactivity.status = 'mouseleave';\r\n        }\r\n    };\r\n    /**\r\n     * Click event\r\n     * @return {?}\r\n     */\r\n    ParticlesDirective.prototype.onClick = function () {\r\n        var _this = this;\r\n        var _a = this._params, interactivity = _a.interactivity, particles = _a.particles;\r\n        if (interactivity.events.onclick.enable) {\r\n            interactivity.mouse.click_pos_x = interactivity.mouse.pos_x;\r\n            interactivity.mouse.click_pos_y = interactivity.mouse.pos_y;\r\n            interactivity.mouse.click_time = new Date().getTime();\r\n            switch (interactivity.events.onclick.mode) {\r\n                case 'push':\r\n                    if (particles.move.enable) {\r\n                        this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                    }\r\n                    else {\r\n                        if (interactivity.modes.push.particles_nb == 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb, interactivity.mouse);\r\n                        }\r\n                        else if (interactivity.modes.push.particles_nb > 1) {\r\n                            this._canvasManager.particlesManager.pushParticles(interactivity.modes.push.particles_nb);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'remove':\r\n                    this._canvasManager.particlesManager.removeParticles(interactivity.modes.remove.particles_nb);\r\n                    break;\r\n                case 'bubble':\r\n                    this._tmpParams.bubble_clicking = true;\r\n                    break;\r\n                case 'repulse':\r\n                    this._tmpParams.repulse_clicking = true;\r\n                    this._tmpParams.repulse_count = 0;\r\n                    this._tmpParams.repulse_finish = false;\r\n                    setTimeout(function () {\r\n                        _this._tmpParams.repulse_clicking = false;\r\n                    }, interactivity.modes.repulse.duration * 1000);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ParticlesDirective;\r\n}());\r\nParticlesDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[d-particles]'\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesDirective.ctorParameters = function () { return [\r\n    { type: ElementRef, },\r\n]; };\r\nParticlesDirective.propDecorators = {\r\n    'params': [{ type: Input },],\r\n    'onMouseMove': [{ type: HostListener, args: ['mousemove', ['$event'],] },],\r\n    'onMouseLeave': [{ type: HostListener, args: ['mouseleave',] },],\r\n    'onClick': [{ type: HostListener, args: ['click',] },],\r\n};\n\nvar ParticlesModule = (function () {\r\n    function ParticlesModule() {\r\n    }\r\n    return ParticlesModule;\r\n}());\r\nParticlesModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                declarations: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ],\r\n                exports: [\r\n                    ParticlesComponent,\r\n                    ParticlesDirective\r\n                ]\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nParticlesModule.ctorParameters = function () { return []; };\n\nexport { ParticlesModule, ParticlesComponent, ParticlesDirective };\n"],"sourceRoot":"webpack:///","file":"default~login-login-module~reset-password-reset-password-module~signup-signup-module-es5.js"}